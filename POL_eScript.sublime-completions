{
	"scope": "source.polscript",

	"completions": [

		"attributes",
		"ATTRIBUTE_LOCK_UP",
		"ATTRIBUTE_LOCK_DOWN",
		"ATTRIBUTE_LOCK_LOCKED",
		"ATTRIBUTE_MAX_BASE",
		{ "trigger": "AlterAttributeTemporaryMod", "contents": "AlterAttributeTemporaryMod(character := $1, attrname := $2, delta_tenths := $3)" },
		{ "trigger": "BaseSkillToRawSkill", "contents": "BaseSkillToRawSkill(baseskill := $1)" },
		{ "trigger": "CheckSkill", "contents": "CheckSkill(character := $1, skillid := $2, difficulty := $3, points := $4)" },
		{ "trigger": "GetAttribute", "contents": "GetAttribute(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeBaseValue", "contents": "GetAttributeBaseValue(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeCap", "contents": "GetAttributeCap(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeDefaultCap", "contents": "GetAttributeDefaultCap(attrname := $1)" },
		{ "trigger": "GetAttributeIntrinsicMod", "contents": "GetAttributeIntrinsicMod(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeLock", "contents": "GetAttributeLock(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeName", "contents": "GetAttributeName(alias_name := $1)" },
		{ "trigger": "GetAttributeTemporaryMod", "contents": "GetAttributeTemporaryMod(character := $1, attrname := $2)" },
		{ "trigger": "RawSkillToBaseSkill", "contents": "RawSkillToBaseSkill(rawskill := $1)" },
		{ "trigger": "SetAttributeBaseValue", "contents": "SetAttributeBaseValue(character := $1, attrname := $2, basevalue_tenths := $3)" },
		{ "trigger": "SetAttributeCap", "contents": "SetAttributeCap(character := $1, attrname := $2, capvalue := $3)" },
		{ "trigger": "SetAttributeLock", "contents": "SetAttributeLock(character := $1, attrname := $2, lockstate := $3)" },
		{ "trigger": "SetAttributeTemporaryMod", "contents": "SetAttributeTemporaryMod(character := $1, attrname := $2, tempmod_tenths := $3)" },
		
		"basic",
		"TRIM_LEFT",
		"TRIM_RIGHT",
		"TRIM_BOTH",
		"OT_UNKNOWN",
		"OT_UNINIT",
		"OT_STRING",
		"OT_LONG",
		"OT_DOUBLE",
		"OT_ARRAY",
		"OT_APPLICPTR",
		"OT_APPLICOBJ",
		"OT_ERROR",
		"OT_DICTIONARY",
		"OT_STRUCT",
		"OT_PACKET",
		"OT_BINARYFILE",
		"OT_XMLFILE",
		"OT_XMLNODE",
		"OT_XMLATTRIBUTES",
		"OT_POLCOREREF",
		"OT_ACCOUNTREF",
		"OT_CONFIGFILEREF",
		"OT_CONFIGELEMREF",
		"OT_DATAFILEREF",
		"OT_DATAELEMREF",
		"OT_GUILDREF",
		"OT_PARTYREF",
		"OT_BOUNDINGBOX",
		"OT_DEBUGCONTEXT",
		"OT_SCRIPTEXREF",
		"OT_PACKAGE",
		"OT_MENUREF",
		"OT_MOBILEREF",
		"OT_OFFLINEMOBILEREF",
		"OT_ITEMREF",
		"OT_BOATREF",
		"OT_MULTIREF",
		"OT_CLIENTREF",
		"OT_SQLCONN",
		"OT_SQLRESULT",
		"OT_SQLROW",
		{ "trigger": "Bin", "contents": "Bin(number := $1)" },
		{ "trigger": "CAsc", "contents": "CAsc(str := $1)" },
		{ "trigger": "CAscZ", "contents": "CAscZ(str := $1, nullterm := ${2:0})" },
		{ "trigger": "CChr", "contents": "CChr(number := $1)" },
		{ "trigger": "CChrZ", "contents": "CChrZ(intarray := $1, break_at_first_null := ${2:0})" },
		{ "trigger": "CDbl", "contents": "CDbl(expr := $1)" },
		{ "trigger": "CInt", "contents": "CInt(expr := $1)" },
		{ "trigger": "CStr", "contents": "CStr(expr := $1)" },
		{ "trigger": "Compare", "contents": "Compare(str1 := $1, str2 := $2, pos1_start := ${3:0}, pos1_end := ${4:0}, pos2_start := ${5:0}, pos2_end := ${6:0})" },
		{ "trigger": "Find", "contents": "Find(str := $1, search := $2, start := $3)" },
		{ "trigger": "Hex", "contents": "Hex(number := $1)" },
		{ "trigger": "Len", "contents": "Len(str_or_array := $1)" },
		{ "trigger": "Lower", "contents": "Lower(str := $1)" },
		{ "trigger": "Pack", "contents": "Pack(expr := $1)" },
		{ "trigger": "SizeOf", "contents": "SizeOf(expr := $1)" },
		{ "trigger": "SplitWords", "contents": "SplitWords(str := $1, delimiter := ${2:\" \"}, max_split := ${3:-1})" },
		{ "trigger": "StrReplace", "contents": "StrReplace(str := $1, to_replace := $2, replace_with := $3)" },
		{ "trigger": "SubStr", "contents": "SubStr(str := $1, start := $2, length := $3)" },
		{ "trigger": "SubStrReplace", "contents": "SubStrReplace(str := $1, replace_with := $2, start := $3, length := ${4:0})" },
		{ "trigger": "Trim", "contents": "Trim(str := $1, type := ${2:TRIM_BOTH}, to_trim := ${3:\" \"})" },
		{ "trigger": "TypeOf", "contents": "TypeOf(expr := $1)" },
		{ "trigger": "TypeOfInt", "contents": "TypeOfInt(expr := $1)" },
		{ "trigger": "Unpack", "contents": "Unpack(str := $1)" },
		{ "trigger": "Upper", "contents": "Upper(str := $1)" },
		
		"basicio",
		{ "trigger": "Print", "contents": "Print(anything := $1)" },
		
		"boat",
		"BOAT_SPEED_ONE_TILE",
		"BOAT_SPEED_SLOW",
		"BOAT_SPEED_MEDIUM",
		"BOAT_SPEED_FAST",
		{ "trigger": "BoatFromItem", "contents": "BoatFromItem(item := $1)" },
		{ "trigger": "MoveBoat", "contents": "MoveBoat(boat := $1, facing := $2, speed := ${3:BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatRelative", "contents": "MoveBoatRelative(boat := $1, direction := $2, speed := ${3:BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatXY", "contents": "MoveBoatXY(boat := $1, x := $2, y := $3)" },
		{ "trigger": "RegisterItemWithBoat", "contents": "RegisterItemWithBoat(boat := $1, item := $1)" },
		{ "trigger": "SystemFindBoatBySerial", "contents": "SystemFindBoatBySerial(serial := $1)" },
		{ "trigger": "TurnBoat", "contents": "TurnBoat(boat := $1, direction := $1)" },
		
		"cfgfile",
		{ "trigger": "AppendConfigFileElem", "contents": "AppendConfigFileElem(filename := $1, elemtype := $2, elemkey := $3, properties := $4)" },
		{ "trigger": "FindConfigElem", "contents": "FindConfigElem(config_file := $1, key := $2)" },
		{ "trigger": "GetConfigInt", "contents": "GetConfigInt(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigIntArray", "contents": "GetConfigIntArray(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigIntKeys", "contents": "GetConfigIntKeys(config_file := $1)" },
		{ "trigger": "GetConfigMaxIntKey", "contents": "GetConfigMaxIntKey(config_file := $1)" },
		{ "trigger": "GetConfigReal", "contents": "GetConfigReal(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigString", "contents": "GetConfigString(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringArray", "contents": "GetConfigStringArray(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringDictionary", "contents": "GetConfigStringDictionary(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringKeys", "contents": "GetConfigStringKeys(config_file := $1)" },
		{ "trigger": "ListConfigElemProps", "contents": "ListConfigElemProps(element := $1)" },
		{ "trigger": "LoadTusScpFile", "contents": "LoadTusScpFile(filename := $1)" },
		{ "trigger": "ReadConfigFile", "contents": "ReadConfigFile(filename := $1)" },
		{ "trigger": "UnloadConfigFile", "contents": "UnloadConfigFile(filename := $1)" },
		
		"cliloc",
		"_DEFAULT_CLFONT",
		"_DEFAULT_CLCOLOR",
		{ "trigger": "PrintTextAboveCL", "contents": "PrintTextAboveCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateCL", "contents": "PrintTextAbovePrivateCL(character := $1, object := $2, cliloc_num := $3, uc_text := ${4:array}, font := ${5:_DEFAULT_CLFONT}, color := ${6:_DEFAULT_CLCOLOR})" },
		{ "trigger": "SendSysMessageCL", "contents": "SendSysMessageCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})" },
		
		"datafile",
		"DF_KEYTYPE_STRING",
		"DF_KEYTYPE_INTEGER",
		{ "trigger": "CreateDataFile", "contents": "CreateDataFile(filespec := $1, flags := ${2:DF_KEYTYPE_STRING})" },
		{ "trigger": "ListDataFiles", "contents": "ListDataFiles()" },
		{ "trigger": "OpenDataFile", "contents": "OpenDataFile(filespec := $1)" },
		{ "trigger": "UnloadDataFile", "contents": "UnloadDataFile(filespec := $1)" },
		
		"file",
		"LOG_DATETIME",
		"OPENMODE_IN",
		"OPENMODE_OUT",
		"OPENMODE_ATE",
		"OPENMODE_APP",
		"OPENMODE_TRUNC",
		"SEEKDIR_BEG",
		"SEEKDIR_CUR",
		"SEEKDIR_END",
		"LITTLE_ENDIAN",
		"BIG_ENDIAN",
		"LISTDIR_LIST_DIRS",
		"LISTDIR_DONT_LIST_DIRS",
		"LISTDIR_NO_FILES",
		"LISTDIR_ALL_FILES",
		{ "trigger": "AppendToFile", "contents": "AppendToFile(filename := $1, textlines := $2)" },
		{ "trigger": "CreateDirectory", "contents": "CreateDirectory(dirname := $1)" },
		{ "trigger": "CreateXmlFile", "contents": "CreateXmlFile()" },
		{ "trigger": "FileExists", "contents": "FileExists(filename := $1)" },
		{ "trigger": "ListDirectory", "contents": "ListDirectory(dirname := $1, extension := ${2:LISTDIR_ALL_FILES}, listdirs := ${3:LISTDIR_DONT_LIST_DIRS})" },
		{ "trigger": "LogToFile", "contents": "LogToFile(filename := $1, line := $2, flags := ${3:0})" },
		{ "trigger": "OpenBinaryFile", "contents": "OpenBinaryFile(filename := $1, mode := ${2:OPENMODE_IN}, endian := ${3:LITTLE_ENDIAN})" },
		{ "trigger": "OpenXmlFile", "contents": "OpenXmlFile(filename := $1)" },
		{ "trigger": "ReadFile", "contents": "ReadFile(filename := $1)" },
		{ "trigger": "WriteFile", "contents": "WriteFile(filename := $1, textcontents := $2)" },
		
		"guild",
		{ "trigger": "CreateGuild", "contents": "CreateGuild()" },
		{ "trigger": "DestroyGuild", "contents": "DestroyGuild(guild := $1)" },
		{ "trigger": "FindGuild", "contents": "FindGuild(guildid := $1)" },
		{ "trigger": "ListGuilds", "contents": "ListGuilds()" },
		
		"http",
		{ "trigger": "QueryIP", "contents": "QueryIP()" },
		{ "trigger": "QueryParam", "contents": "QueryParam(param := $1)" },
		{ "trigger": "WriteHtml", "contents": "WriteHtml(html := $1)" },
		{ "trigger": "WriteHtmlRaw", "contents": "WriteHtmlRaw(html := $1)" },
		
		"math",
		{ "trigger": "ACos", "contents": "ACos(x := $1)" },
		{ "trigger": "ASin", "contents": "ASin(x := $1)" },
		{ "trigger": "ATan", "contents": "ATan(x := $1)" },
		{ "trigger": "Abs", "contents": "Abs(x := $1)" },
		{ "trigger": "Ceil", "contents": "Ceil(x := $1)" },
		{ "trigger": "ConstE", "contents": "ConstE()" },
		{ "trigger": "ConstPi", "contents": "ConstPi()" },
		{ "trigger": "Cos", "contents": "Cos(x := $1)" },
		{ "trigger": "DegToRad", "contents": "DegToRad(degrees := $1)" },
		{ "trigger": "Floor", "contents": "Floor(x := $1)" },
		{ "trigger": "FormatRealToString", "contents": "FormatRealToString(value := $1, precision := $2)" },
		{ "trigger": "Log10", "contents": "Log10(x := $1)" },
		{ "trigger": "LogE", "contents": "LogE(x := $1)" },
		{ "trigger": "Max", "contents": "Max(x := $1, y := ${2:0})" },
		{ "trigger": "Min", "contents": "Min(x := $1, y := ${2:0})" },
		{ "trigger": "Pow", "contents": "Pow(x := $1, y := $2)" },
		{ "trigger": "RadToDeg", "contents": "RadToDeg(radians := $1)" },
		{ "trigger": "Root", "contents": "Root(x := $1, y := $2)" },
		{ "trigger": "Sin", "contents": "Sin(x := $1)" },
		{ "trigger": "Sqrt", "contents": "Sqrt(x := $1)" },
		{ "trigger": "Tan", "contents": "Tan(x := $1)" },
		
		"npc",
		"SAY_TEXTTYPE_DEFAULT",
		"SAY_TEXTTYPE_WHISPER",
		"SAY_TEXTTYPE_YELL",
		"SAY_LANG",
		"SAY_DOEVENT_DISABLE",
		"SAY_DOEVENT_ENABLE",
		"FACE_NORMAL",
		"FACE_FORCE",
		{ "trigger": "CanMove", "contents": "CanMove(direction := $1)" },
		{ "trigger": "Face", "contents": "Face(direction := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "GetProperty", "contents": "GetProperty(propertyname := $1)" },
		{ "trigger": "IsLegalMove", "contents": "IsLegalMove(move := $1, boundingbox := $2)" },
		{ "trigger": "MakeBoundingBox", "contents": "MakeBoundingBox(areastring := $1)" },
		{ "trigger": "Move", "contents": "Move(direction := $1)" },
		{ "trigger": "RunAwayFrom", "contents": "RunAwayFrom(object := $1)" },
		{ "trigger": "RunAwayFromLocation", "contents": "RunAwayFromLocation(x := $1, y := $2)" },
		{ "trigger": "RunToward", "contents": "RunToward(object := $1)" },
		{ "trigger": "RunTowardLocation", "contents": "RunTowardLocation(x := $1, y := $2)" },
		{ "trigger": "Say", "contents": "Say(text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, do_event := ${3:SAY_DOEVENT_DISABLE})" },
		{ "trigger": "SayUC", "contents": "SayUC(uc_text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, langcode := ${3:SAY_LANG}, do_event := ${4:SAY_DOEVENT_DISABLE})" },
		{ "trigger": "Self", "contents": "Self()" },
		{ "trigger": "SetAnchor", "contents": "SetAnchor(centerx := $1, centery := $2, distance_start := $3, percent_subtract := $4)" },
		{ "trigger": "SetOpponent", "contents": "SetOpponent(character := $1)" },
		{ "trigger": "SetProperty", "contents": "SetProperty(propertyname := $1, propertyvalue := $2)" },
		{ "trigger": "SetWarMode", "contents": "SetWarMode(warmode := $1)" },
		{ "trigger": "TurnAwayFrom", "contents": "TurnAwayFrom(object := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "TurnAwayFromLocation", "contents": "TurnAwayFromLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})" },
		{ "trigger": "TurnToward", "contents": "TurnToward(object := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "TurnTowardLocation", "contents": "TurnTowardLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})" },
		{ "trigger": "WalkAwayFrom", "contents": "WalkAwayFrom(object := $1)" },
		{ "trigger": "WalkAwayFromLocation", "contents": "WalkAwayFromLocation(x := $1, y := $2)" },
		{ "trigger": "WalkToward", "contents": "WalkToward(object := $1)" },
		{ "trigger": "WalkTowardLocation", "contents": "WalkTowardLocation(x := $1, y := $2)" },
		{ "trigger": "Wander", "contents": "Wander()" },
		
		"os",
		"SCRIPTOPT_NO_INTERRUPT",
		"SCRIPTOPT_DEBUG",
		"SCRIPTOPT_NO_RUNAWAY",
		"SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES",
		"SCRIPTOPT_AUXSVC_ASSUME_STRING",
		{ "trigger": "Clear_Event_Queue", "contents": "Clear_Event_Queue()" },
		{ "trigger": "Create_Debug_Context", "contents": "Create_Debug_Context()" },
		{ "trigger": "Debugger", "contents": "Debugger()" },
		{ "trigger": "Events_Waiting", "contents": "Events_Waiting()" },
		{ "trigger": "GetPid", "contents": "GetPid()" },
		{ "trigger": "GetProcess", "contents": "GetProcess(pid := ${1:0})" },
		{ "trigger": "Is_Critical", "contents": "Is_Critical()" },
		{ "trigger": "OpenConnection", "contents": "OpenConnection(host := $1, port := $2, scriptdef := $3, params := $4)" },
		{ "trigger": "OpenURL", "contents": "OpenURL(character := $1, url := $2)" },
		{ "trigger": "Run_Script", "contents": "Run_Script(script_name := $1, param := ${2:0})" },
		{ "trigger": "Run_Script_To_Completion", "contents": "Run_Script_To_Completion(script_name := $1, param := ${2:0})" },
		{ "trigger": "Set_Critical", "contents": "Set_Critical(critical := $1)" },
		{ "trigger": "Set_Debug", "contents": "Set_Debug(debug := $1)" },
		{ "trigger": "Set_Event_Queue_Size", "contents": "Set_Event_Queue_Size(size := $1)" },
		{ "trigger": "Set_Priority", "contents": "Set_Priority(priority := $1)" },
		{ "trigger": "Set_Script_Option", "contents": "Set_Script_Option(optnum := $1, optval := $2)" },
		{ "trigger": "Sleep", "contents": "Sleep(num_seconds := $1)" },
		{ "trigger": "Sleepms", "contents": "Sleepms(num_milliseconds := $1)" },
		{ "trigger": "Start_Script", "contents": "Start_Script(script_name := $1, param := ${2:0})" },
		{ "trigger": "Start_Skill_Script", "contents": "Start_Skill_Script(chr := $1, attr_name := $2, script_name := ${3:0}, param := ${4:0})" },
		{ "trigger": "SysLog", "contents": "SysLog(text := $1)" },
		{ "trigger": "System_RPM", "contents": "System_RPM()" },
		{ "trigger": "Unload_Scripts", "contents": "Unload_Scripts(scriptname := ${1:\"\"})" },
		{ "trigger": "Wait_For_Event", "contents": "Wait_For_Event(num_seconds_timeout := $1)" },
		
		"party",
		{ "trigger": "CreateParty", "contents": "CreateParty(leader := $1, firstmember := $2)" },
		{ "trigger": "DisbandParty", "contents": "DisbandParty(PartyRef := $1)" },
		{ "trigger": "SendPartyMsg", "contents": "SendPartyMsg(party := $1, character := $2, uctext := $3)" },
		{ "trigger": "SendPrivatePartyMsg", "contents": "SendPrivatePartyMsg(party := $1, character := $2, tocharacter := $3, uctext := $4)" },
		
		"polsys",
		"MSGLEN_VARIABLE",
		{ "trigger": "AddRealm", "contents": "AddRealm(realm_name := $1, base_realm := $2)" },
		{ "trigger": "CreatePacket", "contents": "CreatePacket(type := $1, size := $2)" },
		{ "trigger": "DeleteRealm", "contents": "DeleteRealm(realm := $1)" },
		{ "trigger": "FormatItemDescription", "contents": "FormatItemDescription(desc := $1, amount := ${2:1}, suffix := ${3:\"\"})" },
		{ "trigger": "GetCmdLevelName", "contents": "GetCmdLevelName(number := $1)" },
		{ "trigger": "GetCmdLevelNumber", "contents": "GetCmdLevelNumber(name := $1)" },
		{ "trigger": "GetItemDescriptor", "contents": "GetItemDescriptor(objtype := $1)" },
		{ "trigger": "GetPackageByName", "contents": "GetPackageByName(name := $1)" },
		{ "trigger": "IncRevision", "contents": "IncRevision(object := $1)" },
		{ "trigger": "ListTextCommands", "contents": "ListTextCommands()" },
		{ "trigger": "ListenPoints", "contents": "ListenPoints()" },
		{ "trigger": "LogCPropProfile", "contents": "LogCPropProfile()" },
		{ "trigger": "MD5Encrypt", "contents": "MD5Encrypt(str := $1)" },
		{ "trigger": "Packages", "contents": "Packages()" },
		{ "trigger": "ReadMillisecondClock", "contents": "ReadMillisecondClock()" },
		{ "trigger": "Realms", "contents": "Realms(realm := ${1:\"\"})" },
		{ "trigger": "ReloadConfiguration", "contents": "ReloadConfiguration()" },
		{ "trigger": "SetSysTrayPopupText", "contents": "SetSysTrayPopupText(text := $1)" },
		
		"storage",
		{ "trigger": "CreateRootItemInStorageArea", "contents": "CreateRootItemInStorageArea(area := $1, itemname := $2, objtype := $3)" },
		{ "trigger": "CreateStorageArea", "contents": "CreateStorageArea(areaname := $1)" },
		{ "trigger": "DestroyRootItemInStorageArea", "contents": "DestroyRootItemInStorageArea(area := $1, itemname := $2)" },
		{ "trigger": "FindRootItemInStorageArea", "contents": "FindRootItemInStorageArea(area := $1, itemname := $2)" },
		{ "trigger": "FindStorageArea", "contents": "FindStorageArea(areaname := $1)" },
		{ "trigger": "StorageAreas", "contents": "StorageAreas()" },
		
		"mysql",
		{ "trigger": "mysql_affected_rows", "contents": "mysql_affected_rows(result := $1)" },
		{ "trigger": "mysql_close", "contents": "mysql_close(connection := $1)" },
		{ "trigger": "mysql_connect", "contents": "mysql_connect(host := $1, username := $2, password := ${3:\"\"})" },
		{ "trigger": "mysql_fetch_row", "contents": "mysql_fetch_row(result := $1)" },
		{ "trigger": "mysql_field_name", "contents": "mysql_field_name(result := $1, column_index := $2)" },
		{ "trigger": "mysql_num_fields", "contents": "mysql_num_fields(result := $1)" },
		{ "trigger": "mysql_num_rows", "contents": "mysql_num_rows(result := $1)" },
		{ "trigger": "mysql_query", "contents": "mysql_query(connection := $1, query := $2, parameters := ${3:\"\"})" },
		{ "trigger": "mysql_select_db", "contents": "mysql_select_db(connection := $1, database := $2)" },
		
		"unicode",
		"_DEFAULT_UCFONT",
		"_DEFAULT_UCCOLOR",
		"JOURNAL_UC_PRINT_NAME",
		"JOURNAL_UC_PRINT_YOU_SEE",
		{ "trigger": "BroadcastUC", "contents": "BroadcastUC(uc_text := $1, langcode := $2, font := ${3:_DEFAULT_UCFONT}, color := ${4:_DEFAULT_UCCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateUC", "contents": "PrintTextAbovePrivateUC(above_object := $1, uc_text := $2, langcode := $3, character := $4, font := ${5:_DEFAULT_UCFONT}, color := ${6:_DEFAULT_UCCOLOR}, journal_print := ${7:JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "PrintTextAboveUC", "contents": "PrintTextAboveUC(above_object := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR}, journal_print := ${6:JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "RequestInputUC", "contents": "RequestInputUC(character := $1, item := $2, uc_prompt := $3, langcode := $4)" },
		{ "trigger": "SendSysMessageUC", "contents": "SendSysMessageUC(character := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR})" },
		
		"uo",
		"CRMULTI_IGNORE_MULTIS",
		"CRMULTI_IGNORE_OBJECTS",
		"CRMULTI_IGNORE_WORLDZ",
		"CRMULTI_IGNORE_ALL",
		"CRMULTI_FACING_NORTH",
		"CRMULTI_FACING_EAST",
		"CRMULTI_FACING_SOUTH",
		"CRMULTI_FACING_WEST",
		"LH_FLAG_LOS",
		"LH_FLAG_INCLUDE_HIDDEN",
		"FP_IGNORE_MOBILES",
		"FP_IGNORE_DOORS",
		"VENDOR_SEND_AOS_TOOLTIP",
		"VENDOR_BUYABLE_CONTAINER_FILTER",
		"SENDDIALOGMENU_FORCE_OLD",
		"LISTENPT_HEAR_GHOSTS",
		"LISTENPT_HEAR_TOKENS",
		"LISTENPT_NO_SPEECH",
		"ITEMS_IGNORE_STATICS",
		"ITEMS_IGNORE_MULTIS",
		"LIST_IGNORE_Z",
		"LISTEX_FLAG_NORMAL",
		"LISTEX_FLAG_HIDDEN",
		"LISTEX_FLAG_GHOST",
		"LISTEX_FLAG_CONCEALED",
		"LISTEX_FLAG_PLAYERS_ONLY",
		"LISTEX_FLAG_NPC_ONLY",
		"TILEDATA_FLAG_BACKGROUND",
		"TILEDATA_FLAG_WEAPON",
		"TILEDATA_FLAG_TRANSPARENT",
		"TILEDATA_FLAG_TRANSLUCENT",
		"TILEDATA_FLAG_WALL",
		"TILEDATA_FLAG_DAMAGING",
		"TILEDATA_FLAG_IMPASSABLE",
		"TILEDATA_FLAG_WET",
		"TILEDATA_FLAG_UNK",
		"TILEDATA_FLAG_SURFACE",
		"TILEDATA_FLAG_BRIDGE",
		"TILEDATA_FLAG_STACKABLE",
		"TILEDATA_FLAG_WINDOW",
		"TILEDATA_FLAG_NOSHOOT",
		"TILEDATA_FLAG_PREFIX_A",
		"TILEDATA_FLAG_PREFIX_AN",
		"TILEDATA_FLAG_INTERNAL",
		"TILEDATA_FLAG_FOLIAGE",
		"TILEDATA_FLAG_PARTIAL_HUE",
		"TILEDATA_FLAG_UNK1",
		"TILEDATA_FLAG_MAP",
		"TILEDATA_FLAG_CONTAINER",
		"TILEDATA_FLAG_WEARABLE",
		"TILEDATA_FLAG_LIGHTSOURCE",
		"TILEDATA_FLAG_ANIMATED",
		"TILEDATA_FLAG_HOVEROVER",
		"TILEDATA_FLAG_UNK2",
		"TILEDATA_FLAG_ARMOR",
		"TILEDATA_FLAG_ROOF",
		"TILEDATA_FLAG_DOOR",
		"TILEDATA_FLAG_STAIRBACK",
		"TILEDATA_FLAG_STAIRRIGHT",
		"MAPDATA_FLAG_NONE",
		"MAPDATA_FLAG_MOVELAND",
		"MAPDATA_FLAG_MOVESEA",
		"MAPDATA_FLAG_BLOCKSIGHT",
		"MAPDATA_FLAG_OVERFLIGHT",
		"MAPDATA_FLAG_ALLOWDROPON",
		"MAPDATA_FLAG_GRADUAL",
		"MAPDATA_FLAG_BLOCKING",
		"MAPDATA_FLAG_MORE_SOLIDS",
		"MAPDATA_FLAG_WALKBLOCK",
		"MAPDATA_FLAG_MOVE_FLAGS",
		"MAPDATA_FLAG_DROP_FLAGS",
		"MAPDATA_FLAG_ALL",
		"MOVEOBJECT_NORMAL",
		"MOVEITEM_IGNOREMOVABLE",
		"MOVEOBJECT_FORCELOCATION",
		"JOURNAL_PRINT_NAME",
		"JOURNAL_PRINT_YOU_SEE",
		"RESURRECT_FORCELOCATION",
		"MOVETYPE_PLAYER",
		"MOVETYPE_COREMOVE",
		"MOVETYPE_CORECREATE",
		"INSERT_ADD_ITEM",
		"INSERT_INCREASE_STACK",
		"DELETE_BY_PLAYER",
		"DELETE_BY_SCRIPT",
		"ENUMERATE_IGNORE_LOCKED",
		"ENUMERATE_ROOT_ONLY",
		"FINDSUBSTANCE_IGNORE_LOCKED",
		"FINDSUBSTANCE_ROOT_ONLY",
		"FINDSUBSTANCE_FIND_ALL",
		"TE_CANCEL_DISABLE",
		"TE_CANCEL_ENABLE",
		"TE_STYLE_DISABLE",
		"TE_STYLE_NORMAL",
		"TE_STYLE_NUMERICAL",
		"SYSFIND_SEARCH_OFFLINE_MOBILES",
		"TGTOPT_CHECK_LOS",
		"TGTOPT_NOCHECK_LOS",
		"TGTOPT_HARMFUL",
		"TGTOPT_NEUTRAL",
		"TGTOPT_HELPFUL",
		"POLCLASS_UOBJECT",
		"POLCLASS_ITEM",
		"POLCLASS_MOBILE",
		"POLCLASS_NPC",
		"POLCLASS_LOCKABLE",
		"POLCLASS_CONTAINER",
		"POLCLASS_CORPSE",
		"POLCLASS_DOOR",
		"POLCLASS_SPELLBOOK",
		"POLCLASS_MAP",
		"POLCLASS_MULTI",
		"POLCLASS_BOAT",
		"POLCLASS_HOUSE",
		"POLCLASS_EQUIPMENT",
		"POLCLASS_ARMOR",
		"POLCLASS_WEAPON",
		"RACE_HUMAN",
		"RACE_ELF",
		"RACE_GARGOYLE",
		"_DEFAULT_TEXT_FONT",
		"_DEFAULT_TEXT_COLOR",
		"_DEFAULT_TEXT_REQUIREDCMD",
		"_DEFAULT_REALM",
		"REALM_BRITANNIA",
		"REALM_BRITANNIA_ALT",
		"REALM_ILSHENAR",
		"REALM_MALAS",
		"REALM_TOKUNO",
		"REALM_TERMUR",
		"ACTION_DIR_FORWARD",
		"ACTION_DIR_BACKWARD",
		"ACTION_NOREPEAT",
		"ACTION_REPEAT",
		"CANWALK_DIR",
		"UPDATEMOBILE_RECREATE",
		"UPDATEMOBILE_UPDATE",
		"CLOSE_PAPERDOLL",
		"CLOSE_STATUS",
		"CLOSE_PROFILE",
		"CLOSE_CONTAINER",
		"CHARPROFILE_NO_UNEDITABLE_TEXT",
		"CHARPROFILE_NO_EDITABLE_TEXT",
		{ "trigger": "Accessible", "contents": "Accessible(by_character := $1, item := $2)" },
		{ "trigger": "AddAmount", "contents": "AddAmount(item := $1, amount := $2)" },
		{ "trigger": "AddMenuItem", "contents": "AddMenuItem(menu := $1, objtype := $2, text := $3, color := ${4:0})" },
		{ "trigger": "ApplyConstraint", "contents": "ApplyConstraint(objlist := $1, configfile := $2, propertyname := $3, minvalue := $4)" },
		{ "trigger": "AssignRectToWeatherRegion", "contents": "AssignRectToWeatherRegion(region := $1, xwest := $2, ynorth := $3, xeast := $4, ysouth := $5)" },
		{ "trigger": "Attach", "contents": "Attach(character := $1)" },
		{ "trigger": "Broadcast", "contents": "Broadcast(text := $1, font := ${2:_DEFAULT_TEXT_FONT}, color := ${3:_DEFAULT_TEXT_COLOR}, requiredCmdLevel := ${4:_DEFAULT_TEXT_REQUIREDCMD})" },
		{ "trigger": "CanWalk", "contents": "CanWalk(movemode := $1, x1 := $2, y1 := $3, z1 := $4, x2_or_dir := $5, y2 := ${6:CANWALK_DIR}, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "CancelTarget", "contents": "CancelTarget(of_whom := $1)" },
		{ "trigger": "CheckLineOfSight", "contents": "CheckLineOfSight(object1 := $1, object2 := $2)" },
		{ "trigger": "CheckLosAt", "contents": "CheckLosAt(character := $1, x := $2, y := $3, z := $4)" },
		{ "trigger": "CheckLosBetween", "contents": "CheckLosBetween(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "CloseGump", "contents": "CloseGump(character := $1, gumpid := $2, response := ${3:0})" },
		{ "trigger": "CloseTradeWindow", "contents": "CloseTradeWindow(character := $1)" },
		{ "trigger": "CloseWindow", "contents": "CloseWindow(character := $1, type := $2, object := $3)" },
		{ "trigger": "ConsumeReagents", "contents": "ConsumeReagents(who := $1, spellid := $2)" },
		{ "trigger": "ConsumeSubstance", "contents": "ConsumeSubstance(container := $1, objtype := $2, amount := $3)" },
		{ "trigger": "CoordinateDistance", "contents": "CoordinateDistance(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CoordinateDistanceEuclidean", "contents": "CoordinateDistanceEuclidean(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CreateAccount", "contents": "CreateAccount(acctname := $1, password := $2, enabled := $3)" },
		{ "trigger": "CreateItemAtLocation", "contents": "CreateItemAtLocation(x := $1, y := $2, z := $3, objtype := $4, amount := ${5:1}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "CreateItemCopyAtLocation", "contents": "CreateItemCopyAtLocation(x := $1, y := $2, z := $3, item := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "CreateItemInBackpack", "contents": "CreateItemInBackpack(of_character := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateItemInContainer", "contents": "CreateItemInContainer(container := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateItemInInventory", "contents": "CreateItemInInventory(container := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateMenu", "contents": "CreateMenu(title := $1)" },
		{ "trigger": "CreateMultiAtLocation", "contents": "CreateMultiAtLocation(x := $1, y := $2, z := $3, objtype := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "CreateNpcFromTemplate", "contents": "CreateNpcFromTemplate(template := $1, x := $2, y := $3, z := $4, override_properties := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "DestroyItem", "contents": "DestroyItem(Item := $1)" },
		{ "trigger": "DestroyMulti", "contents": "DestroyMulti(multi := $1)" },
		{ "trigger": "Detach", "contents": "Detach()" },
		{ "trigger": "DisableEvents", "contents": "DisableEvents(eventtype := $1)" },
		{ "trigger": "DisconnectClient", "contents": "DisconnectClient(character := $1)" },
		{ "trigger": "Distance", "contents": "Distance(obj1 := $1, obj2 := $2)" },
		{ "trigger": "DistanceEuclidean", "contents": "DistanceEuclidean(obj1 := $1, obj2 := $2)" },
		{ "trigger": "EnableEvents", "contents": "EnableEvents(eventtype := $1, range := ${2:-1})" },
		{ "trigger": "EnumerateItemsInContainer", "contents": "EnumerateItemsInContainer(container := $1, flags := ${2:0})" },
		{ "trigger": "EnumerateOnlineCharacters", "contents": "EnumerateOnlineCharacters()" },
		{ "trigger": "EquipFromTemplate", "contents": "EquipFromTemplate(character := $1, template := $2)" },
		{ "trigger": "EquipItem", "contents": "EquipItem(mobile := $1, item := $2)" },
		{ "trigger": "EraseGlobalProperty", "contents": "EraseGlobalProperty(propname := $1)" },
		{ "trigger": "EraseObjProperty", "contents": "EraseObjProperty(object := $1, propname := $2)" },
		{ "trigger": "FindAccount", "contents": "FindAccount(acctname := $1)" },
		{ "trigger": "FindObjtypeInContainer", "contents": "FindObjtypeInContainer(container := $1, objtype := $2)" },
		{ "trigger": "FindPath", "contents": "FindPath(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM}, flags := ${8:FP_IGNORE_MOBILES}, searchskirt := ${9:5})" },
		{ "trigger": "FindSubstance", "contents": "FindSubstance(container := $1, objtype := $2, amount := $3, makeinuse := ${4:0}, flags := ${5:0})" },
		{ "trigger": "GetAmount", "contents": "GetAmount(item := $1)" },
		{ "trigger": "GetCommandHelp", "contents": "GetCommandHelp(character := $1, command := $2)" },
		{ "trigger": "GetCoordsInLine", "contents": "GetCoordsInLine(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "GetEquipmentByLayer", "contents": "GetEquipmentByLayer(character := $1, layer := $2)" },
		{ "trigger": "GetFacing", "contents": "GetFacing(from_x := $1, from_y := $2, to_x := $3, to_y := $4)" },
		{ "trigger": "GetGlobalProperty", "contents": "GetGlobalProperty(propname := $1)" },
		{ "trigger": "GetGlobalPropertyNames", "contents": "GetGlobalPropertyNames()" },
		{ "trigger": "GetHarvestDifficulty", "contents": "GetHarvestDifficulty(resource := $1, x := $2, y := $3, tiletype := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "GetMapInfo", "contents": "GetMapInfo(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetMenuObjTypes", "contents": "GetMenuObjTypes(menuname := $1)" },
		{ "trigger": "GetMidpointCircleCoords", "contents": "GetMidpointCircleCoords(xcenter := $1, ycenter := $2, radius := $3)" },
		{ "trigger": "GetMultiDimensions", "contents": "GetMultiDimensions(multiid := $1)" },
		{ "trigger": "GetObjProperty", "contents": "GetObjProperty(object := $1, property_name := $2)" },
		{ "trigger": "GetObjPropertyNames", "contents": "GetObjPropertyNames(object := $1)" },
		{ "trigger": "GetObjType", "contents": "GetObjType(object := $1)" },
		{ "trigger": "GetObjTypeByName", "contents": "GetObjTypeByName(name := $1)" },
		{ "trigger": "GetRegionLightLevelAtLocation", "contents": "GetRegionLightLevelAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetRegionName", "contents": "GetRegionName(object := $1)" },
		{ "trigger": "GetRegionNameAtLocation", "contents": "GetRegionNameAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetRegionString", "contents": "GetRegionString(resource := $1, x := $2, y := $3, propertyname := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "GetSpellDifficulty", "contents": "GetSpellDifficulty(spellid := $1)" },
		{ "trigger": "GetStandingHeight", "contents": "GetStandingHeight(x := $1, y := $2, startz := $3, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "GetStandingLayers", "contents": "GetStandingLayers(x := $1, y := $2, flags := ${3:MAPDATA_FLAG_ALL}, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "GetWorldHeight", "contents": "GetWorldHeight(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GrantPrivilege", "contents": "GrantPrivilege(character := $1, privilege := $2)" },
		{ "trigger": "HarvestResource", "contents": "HarvestResource(resource := $1, x := $2, y := $3, b := $4, n := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "IsStackable", "contents": "IsStackable(item1 := $1, item2 := $2)" },
		{ "trigger": "ListAccounts", "contents": "ListAccounts()" },
		{ "trigger": "ListEquippedItems", "contents": "ListEquippedItems(who := $1)" },
		{ "trigger": "ListGhostsNearLocation", "contents": "ListGhostsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListHostiles", "contents": "ListHostiles(characterx := $1, range := ${2:20}, flags := ${3:0})" },
		{ "trigger": "ListItemsAtLocation", "contents": "ListItemsAtLocation(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocation", "contents": "ListItemsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationOfType", "contents": "ListItemsNearLocationOfType(x := $1, y := $2, z := $3, range := $4, objtype := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationWithFlag", "contents": "ListItemsNearLocationWithFlag(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInBox", "contents": "ListMobilesInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInLineOfSight", "contents": "ListMobilesInLineOfSight(object := $1, range := $2)" },
		{ "trigger": "ListMobilesNearLocation", "contents": "ListMobilesNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesNearLocationEx", "contents": "ListMobilesNearLocationEx(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListMultisInBox", "contents": "ListMultisInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListObjectsInBox", "contents": "ListObjectsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListOfflineMobilesInRealm", "contents": "ListOfflineMobilesInRealm(realm := ${1:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsAtLocation", "contents": "ListStaticsAtLocation(x := $1, y := $2, z := $3, flags := ${4:0}, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsInBox", "contents": "ListStaticsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, flags := $7, realm := ${8:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsNearLocation", "contents": "ListStaticsNearLocation(x := $1, y := $2, z := $3, range := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "MoveItemToContainer", "contents": "MoveItemToContainer(item := $1, container := $2, x := ${3:-1}, y := ${4:-1}, add_to_existing_stack := ${5:0})" },
		{ "trigger": "MoveItemToSecureTradeWin", "contents": "MoveItemToSecureTradeWin(item := $1, character := $2)" },
		{ "trigger": "MoveObjectToLocation", "contents": "MoveObjectToLocation(object := $1, x := $2, y := $3, z := $4, realm := ${5:_DEFAULT_REALM}, flags := ${6:MOVEOBJECT_NORMAL})" },
		{ "trigger": "OpenPaperdoll", "contents": "OpenPaperdoll(towhom := $1, forwhom := $2)" },
		{ "trigger": "POLCore", "contents": "POLCore()" },
		{ "trigger": "PerformAction", "contents": "PerformAction(character := $1, action := $2, framecount := ${3:5}, repeatcount := ${4:1}, backward := ${5:ACTION_DIR_FORWARD}, repeatflag := ${6:ACTION_NOREPEAT}, delay := ${7:1})" },
		{ "trigger": "PlayLightningBoltEffect", "contents": "PlayLightningBoltEffect(center_object := $1)" },
		{ "trigger": "PlayMovingEffect", "contents": "PlayMovingEffect(source := $1, target := $2, effect := $3, speed := $4, loop := ${5:0}, explode := ${6:0})" },
		{ "trigger": "PlayMovingEffectEx", "contents": "PlayMovingEffectEx(source := $1, target := $2, effect := $3, speed := $4, duration := ${5:0}, hue := ${6:0}, render := ${7:0}, fixeddirection := ${8:0}, explode := ${9:0}, effect3d := ${10:0}, effect3dexplode := ${11:0}, effect3dsound := ${12:0})" },
		{ "trigger": "PlayMovingEffectXYZ", "contents": "PlayMovingEffectXYZ(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, effect := $7, speed := $8, loop := ${9:0}, explode := ${10:0}, realm := ${11:_DEFAULT_REALM})" },
		{ "trigger": "PlayMovingEffectXYZEx", "contents": "PlayMovingEffectXYZEx(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, realm := ${7:_DEFAULT_REALM}, effect := $8, speed := $9, duration := ${10:0}, hue := ${11:0}, render := ${12:0}, fixeddirection := ${13:0}, explode := ${14:0}, effect3d := ${15:0}, effect3dexplode := ${16:0}, effect3dsound := ${17:0})" },
		{ "trigger": "PlayMusic", "contents": "PlayMusic(chr := $1, music_id := ${2:0})" },
		{ "trigger": "PlayObjectCenteredEffect", "contents": "PlayObjectCenteredEffect(center := $1, effect := $2, speed := $3, loop := ${4:0})" },
		{ "trigger": "PlayObjectCenteredEffectEx", "contents": "PlayObjectCenteredEffectEx(center := $1, effect := $2, speed := $3, duration := ${4:0}, hue := ${5:0}, render := ${6:0}, layer := ${7:0}, effect3d := ${8:0})" },
		{ "trigger": "PlaySoundEffect", "contents": "PlaySoundEffect(object := $1, effect := $2)" },
		{ "trigger": "PlaySoundEffectPrivate", "contents": "PlaySoundEffectPrivate(object := $1, effect := $2, playfor := $3)" },
		{ "trigger": "PlaySoundEffectXYZ", "contents": "PlaySoundEffectXYZ(x := $1, y := $2, z := $3, effect := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffect", "contents": "PlayStationaryEffect(x := $1, y := $2, z := $3, effect := $4, speed := $5, loop := ${6:0}, explode := ${7:0}, realm := ${8:_DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffectEx", "contents": "PlayStationaryEffectEx(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM}, effect := $5, speed := $6, duration := ${7:0}, hue := ${8:0}, render := ${9:0}, effect3d := ${10:0})" },
		{ "trigger": "PrintTextAbove", "contents": "PrintTextAbove(above_object := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR}, journal_print := ${5:JOURNAL_PRINT_NAME})" },
		{ "trigger": "PrintTextAbovePrivate", "contents": "PrintTextAbovePrivate(above_object := $1, text := $2, character := $3, font := ${4:_DEFAULT_TEXT_FONT}, color := ${5:_DEFAULT_TEXT_COLOR}, journal_print := ${6:JOURNAL_PRINT_NAME})" },
		{ "trigger": "ReadGameClock", "contents": "ReadGameClock()" },
		{ "trigger": "RegisterForSpeechEvents", "contents": "RegisterForSpeechEvents(at_object := $1, range := $2, flags := ${3:0})" },
		{ "trigger": "ReleaseItem", "contents": "ReleaseItem(item := $1)" },
		{ "trigger": "RequestInput", "contents": "RequestInput(character := $1, item := $2, prompt := $3)" },
		{ "trigger": "ReserveItem", "contents": "ReserveItem(item := $1)" },
		{ "trigger": "RestartScript", "contents": "RestartScript(npc := $1)" },
		{ "trigger": "Resurrect", "contents": "Resurrect(mobile := $1, flags := ${2:0})" },
		{ "trigger": "RevokePrivilege", "contents": "RevokePrivilege(character := $1, privilege := $2)" },
		{ "trigger": "SaveWorldState", "contents": "SaveWorldState()" },
		{ "trigger": "SecureTradeWin", "contents": "SecureTradeWin(character := $1, character2 := $2)" },
		{ "trigger": "SelectColor", "contents": "SelectColor(character := $1, item := $2)" },
		{ "trigger": "SelectMenuItem2", "contents": "SelectMenuItem2(character := $1, menuname := $2)" },
		{ "trigger": "SendBuyWindow", "contents": "SendBuyWindow(character := $1, container := $2, vendor := $3, items := $4, flags := ${5:0})" },
		{ "trigger": "SendCharProfile", "contents": "SendCharProfile(character := $1, of_who := $2, title := $3, uneditable_text := ${4:CHARPROFILE_NO_UNEDITABLE_TEXT}, editable_text := ${5:CHARPROFILE_NO_EDITABLE_TEXT})" },
		{ "trigger": "SendCharacterRaceChanger", "contents": "SendCharacterRaceChanger(character := $1)" },
		{ "trigger": "SendDialogGump", "contents": "SendDialogGump(who := $1, layout := $2, textlines := $3, x := ${4:0}, y := ${5:0}, flags := ${6:0}, gumpid := ${7:0})" },
		{ "trigger": "SendEvent", "contents": "SendEvent(npc := $1, event := $2)" },
		{ "trigger": "SendHousingTool", "contents": "SendHousingTool(who := $1, house := $2)" },
		{ "trigger": "SendInstaResDialog", "contents": "SendInstaResDialog(character := $1)" },
		{ "trigger": "SendOpenBook", "contents": "SendOpenBook(character := $1, book := $2)" },
		{ "trigger": "SendOpenSpecialContainer", "contents": "SendOpenSpecialContainer(character := $1, container := $2)" },
		{ "trigger": "SendOverallSeason", "contents": "SendOverallSeason(season_id := $1, playsound := ${2:1})" },
		{ "trigger": "SendPacket", "contents": "SendPacket(to_whom := $1, packet_hex_string := $2)" },
		{ "trigger": "SendPopUpMenu", "contents": "SendPopUpMenu(to_whom := $1, above := $2, menu := $3)" },
		{ "trigger": "SendQuestArrow", "contents": "SendQuestArrow(to_whom := $1, x := ${2:-1}, y := ${3:-1}, target := ${4:\"\"})" },
		{ "trigger": "SendSellWindow", "contents": "SendSellWindow(character := $1, vendor := $2, i1 := $3, i2 := $4, i3 := $5, flags := ${6:0})" },
		{ "trigger": "SendSkillWindow", "contents": "SendSkillWindow(towhom := $1, forwhom := $2)" },
		{ "trigger": "SendStatus", "contents": "SendStatus(character := $1)" },
		{ "trigger": "SendStringAsTipWindow", "contents": "SendStringAsTipWindow(character := $1, text := $2)" },
		{ "trigger": "SendSysMessage", "contents": "SendSysMessage(character := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})" },
		{ "trigger": "SendTextEntryGump", "contents": "SendTextEntryGump(who := $1, line1 := $2, cancel := ${3:TE_CANCEL_ENABLE}, style := ${4:TE_STYLE_NORMAL}, maximum := ${5:40}, line2 := ${6:\"\"})" },
		{ "trigger": "SendViewContainer", "contents": "SendViewContainer(character := $1, container := $2)" },
		{ "trigger": "SetGlobalProperty", "contents": "SetGlobalProperty(propname := $1, propval := $2)" },
		{ "trigger": "SetName", "contents": "SetName(object := $1, name := $2)" },
		{ "trigger": "SetObjProperty", "contents": "SetObjProperty(object := $1, property_name := $2, property_value := $3)" },
		{ "trigger": "SetRegionLightLevel", "contents": "SetRegionLightLevel(regionname := $1, lightlevel := $2)" },
		{ "trigger": "SetRegionWeatherLevel", "contents": "SetRegionWeatherLevel(region := $1, type := $2, severity := $3, aux := ${4:0}, lightoverride := ${5:-1})" },
		{ "trigger": "SetScriptController", "contents": "SetScriptController(who := $1)" },
		{ "trigger": "Shutdown", "contents": "Shutdown()" },
		{ "trigger": "SingleClick", "contents": "SingleClick(who := $1, what := $2)" },
		{ "trigger": "SpeakPowerWords", "contents": "SpeakPowerWords(who := $1, spellid := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})" },
		{ "trigger": "StartSpellEffect", "contents": "StartSpellEffect(who := $1, spellid := $2)" },
		{ "trigger": "SubtractAmount", "contents": "SubtractAmount(item := $1, amount := $2)" },
		{ "trigger": "SystemFindObjectBySerial", "contents": "SystemFindObjectBySerial(serial := $1, sysfind_flags := ${2:0})" },
		{ "trigger": "Target", "contents": "Target(by_character := $1, options := ${2:TGTOPT_CHECK_LOS+TGTOPT_NEUTRAL})" },
		{ "trigger": "TargetCoordinates", "contents": "TargetCoordinates(by_character := $1)" },
		{ "trigger": "TargetMultiPlacement", "contents": "TargetMultiPlacement(character := $1, objtype := $2, flags := ${3:0}, xoffset := ${4:0}, yoffset := ${5:0}, hue := ${6:0})" },
		{ "trigger": "UpdateItem", "contents": "UpdateItem(item := $1)" },
		{ "trigger": "UpdateMobile", "contents": "UpdateMobile(mobile := $1, recreate := ${2:UPDATEMOBILE_UPDATE})" },
		{ "trigger": "UseItem", "contents": "UseItem(item := $1, character := $2)" },
		
		"util",
		{ "trigger": "RandomDiceRoll", "contents": "RandomDiceRoll(dice_string := $1)" },
		{ "trigger": "RandomFloat", "contents": "RandomFloat(below_this_float := $1)" },
		{ "trigger": "RandomInt", "contents": "RandomInt(below_this_number := $1)" },
		{ "trigger": "RandomIntMinMax", "contents": "RandomIntMinMax(minValue := $1, maxValue := $2)" },
		{ "trigger": "StrFormatTime", "contents": "StrFormatTime(format_string := $1, time_stamp := ${2:0})" },
		
		"vitals",
		"DAMAGE_USE_REPSYS",
		"DAMAGE_NO_REPSYS",
		"DAMAGE_NO_SHOW",
		"DAMAGE_SHOW",
		"DAMAGE_USE_DEFAULT",
		"RECALC_INTRINSIC_MOD",
		"RECALC_NO_INTRINSIC_MOD",
		"RECALC_VITALS",
		"RECALC_NO_VITALS",
		{ "trigger": "ApplyDamage", "contents": "ApplyDamage(mobile := $1, damage := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ApplyRawDamage", "contents": "ApplyRawDamage(Character := $1, Hits := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ConsumeMana", "contents": "ConsumeMana(who := $1, spellid := $2)" },
		{ "trigger": "ConsumeVital", "contents": "ConsumeVital(who := $1, vital := $2, hundredths := $3)" },
		{ "trigger": "GetVital", "contents": "GetVital(character := $1, vitalname := $2)" },
		{ "trigger": "GetVitalMaximumValue", "contents": "GetVitalMaximumValue(character := $1, vitalname := $2)" },
		{ "trigger": "GetVitalName", "contents": "GetVitalName(alias_name := $1)" },
		{ "trigger": "GetVitalRegenRate", "contents": "GetVitalRegenRate(character := $1, vitalname := $2)" },
		{ "trigger": "HealDamage", "contents": "HealDamage(Character := $1, Hits := $2)" },
		{ "trigger": "RecalcVitals", "contents": "RecalcVitals(character := $1, calc_attribute := ${2:RECALC_INTRINSIC_MOD}, calc_vital := ${3:RECALC_VITALS})" },
		{ "trigger": "SetVital", "contents": "SetVital(character := $1, vitalname := $2, value := $3)" },

		"SHARD_NAME",
		"SHARD_WWWMAIN",
		"SHARD_WWWRULES",
		"SHARD_BUGSADDR",
		"SHARD_HELPADDR",
		"SHARD_MAILADDR",
		"SHARD_WIKI",
		"SHARD_TICKETS",
		"SHARD_FORUM",
		
	]
}