{
	"scope": "source.polscript - (string.quoted.double.polscript|string.quoted.single.polscript)",

	"completions": [

		// End
		"endprogram",
		"endfunction",

		// Declaration
		{ "trigger": "const\tdeclare", "contents": "const $1${2: := $3}" },
		{ "trigger": "var\tdeclare", "contents": "var $1${2: := $3}" },

		// Enum
		"enum",
		"endenum",

		// If
		{ "trigger": "if", "contents": "if ($1)" },
		{ "trigger": "elseif", "contents": "elseif ($1)" },
		"else",
		"endif",

		// Case
		{ "trigger": "case", "contents": "case ($1)" },
		"default:",
		"endcase",

		// While
		{ "trigger": "while", "contents": "while ($1)" },
		"endwhile",

		// For
		{ "trigger": "for", "contents": "for ($1 ; $2 ; $3)" },
		{ "trigger": "for to", "contents": "for $1 to $2" },
		"endfor",

		// Foreach
		{ "trigger": "foreach in", "contents": "foreach $1 in $2" },
		"endforeach",

		// Do-dowhile
		{ "trigger": "dowhile", "contents": "dowhile ($1);" },

		// Repeat-until
		"repeat",
		{ "trigger": "until", "contents": "until ($1);" },

		// Keywords
		"continue;",
		"next;",
		"break;",
		{ "trigger": "return", "contents": "return $1;" },

		// Members
		"banned\tmember",
		"defaultcmdlevel\tmember",
		"enabled\tmember",
		"name\tmember",
		"uo_expansion\tmember",
		"usernamepasswordhash\tmember",
		"ar\tmember",
		"ar_base\tmember",
		"ar_mod\tmember",
		"onhitscript\tmember",
		"ip\tmember",
		"components\tmember",
		"has_offline_mobiles\tmember",
		"hold\tmember",
		"hull\tmember",
		"items\tmember",
		"mobiles\tmember",
		"multiid\tmember",
		"portplank\tmember",
		"rope\tmember",
		"rudder\tmember",
		"sails\tmember",
		"starboardplank\tmember",
		"storage\tmember",
		"tiller\tmember",
		"tillerman\tmember",
		"weaponslot\tmember",
		"wheel\tmember",
		"acct\tmember",
		"acctname\tmember",
		"active_skill\tmember",
		"aggressorto\tmember",
		"attached\tmember",
		"backpack\tmember",
		"candidate_of_party\tmember",
		"carrying_capacity\tmember",
		"carrying_capacity_mod\tmember",
		"casting_spell\tmember",
		"client\tmember",
		"clientinfo\tmember",
		"clienttype\tmember",
		"clientver_detail\tmember",
		"clientversion\tmember",
		"cmdlevel\tmember",
		"cmdlevelstr\tmember",
		"concealed\tmember",
		"connected\tmember",
		"createdat\tmember",
		"criminal\tmember",
		"cursor\tmember",
		"damage_cold\tmember",
		"damage_cold_mod\tmember",
		"damage_energy\tmember",
		"damage_energy_mod\tmember",
		"damage_fire\tmember",
		"damage_fire_mod\tmember",
		"damage_physical\tmember",
		"damage_physical_mod\tmember",
		"damage_poison\tmember",
		"damage_poison_mod\tmember",
		"dead\tmember",
		"deafed\tmember",
		"delay_mod\tmember",
		"evasionchance_mod\tmember",
		"followers\tmember",
		"followers_max\tmember",
		"frozen\tmember",
		"gender\tmember",
		"gold\tmember",
		"guild\tmember",
		"guildid\tmember",
		"gump\tmember",
		"hidden\tmember",
		"hitchance_mod\tmember",
		"house_editing\tmember",
		"last_textcolor\tmember",
		"lastcoord\tmember",
		"lawfullydamaged\tmember",
		"luck\tmember",
		"mountedsteps\tmember",
		"movecost_run_mod\tmember",
		"movecost_run_mounted_mod\tmember",
		"movecost_walk_mod\tmember",
		"movecost_walk_mounted_mod\tmember",
		"movemode\tmember",
		"murderer\tmember",
		"opponent\tmember",
		"paralyzed\tmember",
		"party\tmember",
		"partycanloot\tmember",
		"poisoned\tmember",
		"prompt\tmember",
		"race\tmember",
		"reportables\tmember",
		"resist_cold\tmember",
		"resist_cold_mod\tmember",
		"resist_energy\tmember",
		"resist_energy_mod\tmember",
		"resist_fire\tmember",
		"resist_fire_mod\tmember",
		"resist_physical\tmember",
		"resist_physical_mod\tmember",
		"resist_poison\tmember",
		"resist_poison_mod\tmember",
		"shield\tmember",
		"skillcap\tmember",
		"squelched\tmember",
		"statcap\tmember",
		"stealthsteps\tmember",
		"temporally_criminal\tmember",
		"tithing\tmember",
		"title_guild\tmember",
		"title_prefix\tmember",
		"title_race\tmember",
		"title_suffix\tmember",
		"tradewindow\tmember",
		"trading_with\tmember",
		"truecolor\tmember",
		"trueobjtype\tmember",
		"uclang\tmember",
		"uo_expansion_client\tmember",
		"warmode\tmember",
		"weapon\tmember",
		"last_activity_at\tmember",
		"last_packet_at\tmember",
		"max_items_mod\tmember",
		"max_slots_mod\tmember",
		"max_weight_mod\tmember",
		"no_drop_exception\tmember",
		"corpsetype\tmember",
		"ownerserial\tmember",
		"isopen\tmember",
		"intrinsic\tmember",
		"errortext\tmember",
		"allyguilds\tmember",
		"enemyguilds\tmember",
		"members\tmember",
		"custom\tmember",
		"house_parts\tmember",
		"amount\tmember",
		"buyprice\tmember",
		"container\tmember",
		"decayat\tmember",
		"desc\tmember",
		"doubleclickrange\tmember",
		"equipscript\tmember",
		"getgottenby\tmember",
		"house\tmember",
		"hp\tmember",
		"insured\tmember",
		"invisible\tmember",
		"item_count\tmember",
		"layer\tmember",
		"maxhp\tmember",
		"maxhp_mod\tmember",
		"movable\tmember",
		"name_suffix\tmember",
		"newbie\tmember",
		"no_drop\tmember",
		"process\tmember",
		"quality\tmember",
		"saveonexit\tmember",
		"sellprice\tmember",
		"stackable\tmember",
		"tile_layer\tmember",
		"unequipscript\tmember",
		"usescript\tmember",
		"locked\tmember",
		"editable\tmember",
		"facetid\tmember",
		"gumpheight\tmember",
		"gumpwidth\tmember",
		"xeast\tmember",
		"xwest\tmember",
		"ynorth\tmember",
		"ysouth\tmember",
		"footprint\tmember",
		"alignment\tmember",
		"eventmask\tmember",
		"master\tmember",
		"npctemplate\tmember",
		"run_speed\tmember",
		"script\tmember",
		"speech_color\tmember",
		"speech_font\tmember",
		"use_adjustments\tmember",
		"npcdesc\tmember",
		"supports_http\tmember",
		"version\tmember",
		"candidates\tmember",
		"leader\tmember",
		"all_scripts\tmember",
		"bytes_received\tmember",
		"bytes_sent\tmember",
		"combat_operations_per_min\tmember",
		"compiledate\tmember",
		"compiletime\tmember",
		"error_creations_per_min\tmember",
		"events_per_min\tmember",
		"instr_per_min\tmember",
		"iostats\tmember",
		"itemcount\tmember",
		"memory_usage\tmember",
		"mobilecount\tmember",
		"packages\tmember",
		"pkt_status\tmember",
		"priority_divide\tmember",
		"queued_iostats\tmember",
		"running_scripts\tmember",
		"script_profiles\tmember",
		"scripts_late_per_min\tmember",
		"scripts_ontime_per_min\tmember",
		"skill_checks_per_min\tmember",
		"sysload\tmember",
		"sysload_severity\tmember",
		"systime\tmember",
		"tasks_late_per_min\tmember",
		"tasks_late_ticks_per_min\tmember",
		"tasks_ontime_per_min\tmember",
		"uptime\tmember",
		"verstr\tmember",
		"attached_to\tmember",
		"call_depth\tmember",
		"consec_cycles\tmember",
		"controller\tmember",
		"globals\tmember",
		"instr_cycles\tmember",
		"num_globals\tmember",
		"pc\tmember",
		"pid\tmember",
		"sleep_cycles\tmember",
		"state\tmember",
		"var_size\tmember",
		"count\tmember",
		"totalcount\tmember",
		"color\tmember",
		"dirty\tmember",
		"facing\tmember",
		"graphic\tmember",
		"height\tmember",
		"multi\tmember",
		"objtype\tmember",
		"realm\tmember",
		"serial\tmember",
		"specific_name\tmember",
		"weight\tmember",
		"x\tmember",
		"y\tmember",
		"z\tmember",
		"attribute\tmember",
		"dmg_mod\tmember",
		"hitscript\tmember",
		"speed_mod\tmember",

		// Methods
		{ "trigger": "addcharacter\tmethod", "contents": "addcharacter(index := ${1:0})" },
		{ "trigger": "ban\tmethod", "contents": "ban()" },
		{ "trigger": "checkpassword\tmethod", "contents": "checkpassword(pass := $1)" },
		{ "trigger": "delete\tmethod", "contents": "delete()" },
		{ "trigger": "deletecharacter\tmethod", "contents": "deletecharacter(slot := $1)" },
		{ "trigger": "disable\tmethod", "contents": "disable()" },
		{ "trigger": "enable\tmethod", "contents": "enable()" },
		{ "trigger": "eraseprop\tmethod", "contents": "eraseprop(propname := $1)" },
		{ "trigger": "get_member\tmethod", "contents": "get_member(membername := $1)" },
		{ "trigger": "getcharacter\tmethod", "contents": "getcharacter(slot := $1)" },
		{ "trigger": "getprop\tmethod", "contents": "getprop(propname := $1)" },
		{ "trigger": "move_char\tmethod", "contents": "move_char(destacctname := $1, slot := $2)" },
		{ "trigger": "propnames\tmethod", "contents": "propnames()" },
		{ "trigger": "set_uo_expansion\tmethod", "contents": "set_uo_expansion(expansion := $1)" },
		{ "trigger": "setdefaultcmdlevel\tmethod", "contents": "setdefaultcmdlevel(number := $1)" },
		{ "trigger": "setname\tmethod", "contents": "setname(newname := $1)" },
		{ "trigger": "setpassword\tmethod", "contents": "setpassword(newpass := $1)" },
		{ "trigger": "setprop\tmethod", "contents": "setprop(propname := $1, propval := $2)" },
		{ "trigger": "split\tmethod", "contents": "split(newacctname := $1, slot := ${2:1})" },
		{ "trigger": "unban\tmethod", "contents": "unban()" },
		{ "trigger": "append\tmethod", "contents": "append(object := $1)" },
		{ "trigger": "cycle\tmethod", "contents": "cycle(count := ${1:1})" },
		{ "trigger": "erase\tmethod", "contents": "erase(index := $1)" },
		{ "trigger": "exists\tmethod", "contents": "exists(index := $1)" },
		{ "trigger": "insert\tmethod", "contents": "insert(index := $1, object := $2)" },
		{ "trigger": "randomentry\tmethod", "contents": "randomentry()" },
		{ "trigger": "reverse\tmethod", "contents": "reverse()" },
		{ "trigger": "shrink\tmethod", "contents": "shrink(index := $1)" },
		{ "trigger": "size\tmethod", "contents": "size()" },
		{ "trigger": "sort\tmethod", "contents": "sort(sub_index := ${1:0})" },
		{ "trigger": "transmit\tmethod", "contents": "transmit(o := $1)" },
		{ "trigger": "close\tmethod", "contents": "close()" },
		{ "trigger": "flush\tmethod", "contents": "flush()" },
		{ "trigger": "getint16\tmethod", "contents": "getint16()" },
		{ "trigger": "getint32\tmethod", "contents": "getint32()" },
		{ "trigger": "getint8\tmethod", "contents": "getint8()" },
		{ "trigger": "getsint16\tmethod", "contents": "getsint16()" },
		{ "trigger": "getsint32\tmethod", "contents": "getsint32()" },
		{ "trigger": "getsint8\tmethod", "contents": "getsint8()" },
		{ "trigger": "getstring\tmethod", "contents": "getstring(length := $1)" },
		{ "trigger": "peek\tmethod", "contents": "peek()" },
		{ "trigger": "seek\tmethod", "contents": "seek(offset := $1, seekdir := $2)" },
		{ "trigger": "setint16\tmethod", "contents": "setint16()" },
		{ "trigger": "setint32\tmethod", "contents": "setint32()" },
		{ "trigger": "setint8\tmethod", "contents": "setint8()" },
		{ "trigger": "setsint16\tmethod", "contents": "setsint16()" },
		{ "trigger": "setsint32\tmethod", "contents": "setsint32()" },
		{ "trigger": "setsint8\tmethod", "contents": "setsint8()" },
		{ "trigger": "setstring\tmethod", "contents": "setstring(string := $1, nullterminate := ${1:0})" },
		{ "trigger": "tell\tmethod", "contents": "tell()" },
		{ "trigger": "move_offline_mobiles\tmethod", "contents": "move_offline_mobiles(x := $1, y := $2, z := $3, realm := ${4:\"\"})" },
		{ "trigger": "addBuff\tmethod", "contents": "addBuff(icon_d := $1, duration := $2, cliloc_name := $3, cliloc_descr := $4, arguments := ${5:\"\"})" },
		{ "trigger": "attack_once\tmethod", "contents": "attack_once(opp := ${1:0})" },
		{ "trigger": "clearAggressorTo\tmethod", "contents": "clearAggressorTo(chr := $1)" },
		{ "trigger": "clearBuffs\tmethod", "contents": "clearBuffs()" },
		{ "trigger": "clearLawfullydamagedTo\tmethod", "contents": "clearLawfullydamagedTo(chr := $1)" },
		{ "trigger": "cleargottenitem\tmethod", "contents": "cleargottenitem()" },
		{ "trigger": "compareversion\tmethod", "contents": "compareversion(version := $1)" },
		{ "trigger": "deaf\tmethod", "contents": "deaf(duration := $1)" },
		{ "trigger": "delBuff\tmethod", "contents": "delBuff(icon_id := $1)" },
		{ "trigger": "disableSkillsFor\tmethod", "contents": "disableSkillsFor(duration := $1)" },
		{ "trigger": "enable(priv)\tmethod", "contents": "enable(setting := $1)" },
		{ "trigger": "enabled\tmethod", "contents": "enabled(setting := $1)" },
		{ "trigger": "getcorpse\tmethod", "contents": "getcorpse()" },
		{ "trigger": "getgottenitem\tmethod", "contents": "getgottenitem()" },
		{ "trigger": "kill(killer)\tmethod", "contents": "kill(killer := ${1:0})" },
		{ "trigger": "privileges\tmethod", "contents": "privileges()" },
		{ "trigger": "removereportable\tmethod", "contents": "removereportable(serial := $1, gameclock := $2)" },
		{ "trigger": "setAggressorTo\tmethod", "contents": "setAggressorTo(chr := $1)" },
		{ "trigger": "setLawfullydamagedTo\tmethod", "contents": "setLawfullydamagedTo(chr := $1)" },
		{ "trigger": "setcmdlevel\tmethod", "contents": "setcmdlevel(cmdlevel := $1)" },
		{ "trigger": "setcriminal\tmethod", "contents": "setcriminal(level := $1)" },
		{ "trigger": "setfacing\tmethod", "contents": "setfacing(direction := $1, flags := ${1:FACE_NORMAL})" },
		{ "trigger": "setlightlevel\tmethod", "contents": "setlightlevel(level := $1, duration := $2)" },
		{ "trigger": "setmurderer\tmethod", "contents": "setmurderer($1)" },
		{ "trigger": "setparalyzed\tmethod", "contents": "setparalyzed($1)" },
		{ "trigger": "setpoisoned\tmethod", "contents": "setpoisoned($1)" },
		{ "trigger": "setseason\tmethod", "contents": "setseason(season_id := $1, playsound := $2)" },
		{ "trigger": "setswingtimer\tmethod", "contents": "setswingtimer($1)" },
		{ "trigger": "setwarmode\tmethod", "contents": "setwarmode($1)" },
		{ "trigger": "spendgold\tmethod", "contents": "spendgold(amount := $1)" },
		{ "trigger": "squelch\tmethod", "contents": "squelch(duration := $1)" },
		{ "trigger": "CreateElement\tmethod", "contents": "CreateElement(key := $1)" },
		{ "trigger": "DeleteElement\tmethod", "contents": "DeleteElement(key := $1)" },
		{ "trigger": "FindElement\tmethod", "contents": "FindElement(key := $1)" },
		{ "trigger": "keys\tmethod", "contents": "keys()" },
		{ "trigger": "erase(key)\tmethod", "contents": "erase(key := $1)" },
		{ "trigger": "exists(key)\tmethod", "contents": "exists(key := $1)" },
		{ "trigger": "insert(key)\tmethod", "contents": "insert(key := $1, object := $2)" },
		{ "trigger": "open\tmethod", "contents": "open()" },
		{ "trigger": "toggle\tmethod", "contents": "toggle()" },
		{ "trigger": "addallyguild\tmethod", "contents": "addallyguild($1)" },
		{ "trigger": "addenemyguild\tmethod", "contents": "addenemyguild($1)" },
		{ "trigger": "addmember\tmethod", "contents": "addmember($1)" },
		{ "trigger": "isallyguild\tmethod", "contents": "isallyguild($1)" },
		{ "trigger": "isenemyguild\tmethod", "contents": "isenemyguild($1)" },
		{ "trigger": "ismember\tmethod", "contents": "ismember($1)" },
		{ "trigger": "removeallyguild\tmethod", "contents": "removeallyguild($1)" },
		{ "trigger": "removeenemyguild\tmethod", "contents": "removeenemyguild($1)" },
		{ "trigger": "removemember\tmethod", "contents": "removemember($1)" },
		{ "trigger": "acceptcommit\tmethod", "contents": "acceptcommit(chr := $1, commit := ${2:1})" },
		{ "trigger": "add_component\tmethod", "contents": "add_component($1)" },
		{ "trigger": "addhousepart\tmethod", "contents": "addhousepart(graphic := $1, xoffset := $2, yoffset := $3, z := $4)" },
		{ "trigger": "cancelediting\tmethod", "contents": "cancelediting(chr := $1, drop_changes := ${2:1})" },
		{ "trigger": "erase_component\tmethod", "contents": "erase_component($1)" },
		{ "trigger": "erasehousepart\tmethod", "contents": "erasehousepart(graphic := $1, xoffset := $2, yoffset := $3, z := $4)" },
		{ "trigger": "setcustom\tmethod", "contents": "setcustom(custom := $1)" },
		{ "trigger": "hasExistingStack\tmethod", "contents": "hasExistingStack(container := $1)" },
		{ "trigger": "splitStackAt\tmethod", "contents": "splitStackAt(x := $1, y := $2, z := $3, realm := $4, amount := $5)" },
		{ "trigger": "splitStackInto\tmethod", "contents": "splitStackInto(container := $1, amount := $2)" },
		{ "trigger": "appendpin\tmethod", "contents": "appendpin(x := $1, y := $2)" },
		{ "trigger": "erasepin\tmethod", "contents": "erasepin(index := $1)" },
		{ "trigger": "getpins\tmethod", "contents": "getpins()" },
		{ "trigger": "insertpin\tmethod", "contents": "insertpin(index := $1, x := $2, y := $3)" },
		{ "trigger": "setmaster\tmethod", "contents": "setmaster(master := $1)" },
		{ "trigger": "GetInt16(offset)\tmethod", "contents": "GetInt16(offset := $1)" },
		{ "trigger": "GetInt16Flipped\tmethod", "contents": "GetInt16Flipped(offset := $1)" },
		{ "trigger": "GetInt32(offset)\tmethod", "contents": "GetInt32(offset := $1)" },
		{ "trigger": "GetInt32Flipped\tmethod", "contents": "GetInt32Flipped(offset := $1)" },
		{ "trigger": "GetInt8(offset)\tmethod", "contents": "GetInt8(offset := $1)" },
		{ "trigger": "GetSize\tmethod", "contents": "GetSize()" },
		{ "trigger": "GetString(offset)\tmethod", "contents": "GetString(offset := $1, length := $2)" },
		{ "trigger": "GetUnicodeString\tmethod", "contents": "GetUnicodeString(offset := $1, length := $2)" },
		{ "trigger": "GetUnicodeStringFlipped\tmethod", "contents": "GetUnicodeStringFlipped(offset := $1, length := $2)" },
		{ "trigger": "SendAreaPacket\tmethod", "contents": "SendAreaPacket(x := $1, y := $2, range := $3, realm := $4)" },
		{ "trigger": "SendPacket\tmethod", "contents": "SendPacket($1)" },
		{ "trigger": "SetInt16(offset)\tmethod", "contents": "SetInt16(offset := $1, value := $2)" },
		{ "trigger": "SetInt16Flipped\tmethod", "contents": "SetInt16Flipped(offset := $1, value := $2)" },
		{ "trigger": "SetInt32(offset)\tmethod", "contents": "SetInt32(offset := $1, value := $2)" },
		{ "trigger": "SetInt32Flipped\tmethod", "contents": "SetInt32Flipped(offset := $1, value := $2)" },
		{ "trigger": "SetInt8(offset)\tmethod", "contents": "SetInt8(offset := $1, value := $2)" },
		{ "trigger": "SetSize\tmethod", "contents": "SetSize(newsize := $1)" },
		{ "trigger": "SetString(offset)\tmethod", "contents": "SetString(offset := $1, string := $2, nullterminate := ${3:0})" },
		{ "trigger": "SetUnicodeString\tmethod", "contents": "SetUnicodeString(offset := $1, character := $2, nullterminate := ${3:0})" },
		{ "trigger": "SetUnicodeStringFlipped\tmethod", "contents": "SetUnicodeStringFlipped(offset := $1, character := $2, nullterminate := ${3:0})" },
		{ "trigger": "addcandidate\tmethod", "contents": "addcandidate($1)" },
		{ "trigger": "removecandidate\tmethod", "contents": "removecandidate($1)" },
		{ "trigger": "setleader\tmethod", "contents": "setleader($1)" },
		{ "trigger": "clear_script_profile_counters\tmethod", "contents": "clear_script_profile_counters()" },
		{ "trigger": "log_profile\tmethod", "contents": "log_profile(clear := ${1:0})" },
		{ "trigger": "set_priority_divide\tmethod", "contents": "set_priority_divide(divide := $1)" },
		{ "trigger": "clear_event_queue\tmethod", "contents": "clear_event_queue()" },
		{ "trigger": "kill\tmethod", "contents": "kill()" },
		{ "trigger": "loadsymbols\tmethod", "contents": "loadsymbols()" },
		{ "trigger": "sendevent\tmethod", "contents": "sendevent(event := $1)" },
		{ "trigger": "AddSpell\tmethod", "contents": "AddSpell(spellid := $1)" },
		{ "trigger": "HasSpell\tmethod", "contents": "HasSpell(spellid := $1)" },
		{ "trigger": "RemoveSpell\tmethod", "contents": "RemoveSpell(spellid := $1)" },
		{ "trigger": "Spells\tmethod", "contents": "Spells()" },
		{ "trigger": "find\tmethod", "contents": "find(search := $1, start := ${2:0})" },
		{ "trigger": "format\tmethod", "contents": "format(args := $1)" },
		{ "trigger": "join\tmethod", "contents": "join(array := $1)" },
		{ "trigger": "length\tmethod", "contents": "length()" },
		{ "trigger": "lower\tmethod", "contents": "lower()" },
		{ "trigger": "upper\tmethod", "contents": "upper()" },
		{ "trigger": "isa\tmethod", "contents": "isa(${1:POLCLASS_})" },
		{ "trigger": "set_member\tmethod", "contents": "set_member(membername := $1, value := $2)" },

		// Functions
		{ "trigger": "AlterAttributeTemporaryMod\tfunc", "contents": "AlterAttributeTemporaryMod(character := $1, attrname := $2, delta_tenths := $3)" },
		{ "trigger": "BaseSkillToRawSkill\tfunc", "contents": "BaseSkillToRawSkill(baseskill := $1)" },
		{ "trigger": "CheckSkill\tfunc", "contents": "CheckSkill(character := $1, skillid := $2, difficulty := $3, points := $4)" },
		{ "trigger": "GetAttribute\tfunc", "contents": "GetAttribute(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeBaseValue\tfunc", "contents": "GetAttributeBaseValue(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeCap\tfunc", "contents": "GetAttributeCap(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeDefaultCap\tfunc", "contents": "GetAttributeDefaultCap(attrname := $1)" },
		{ "trigger": "GetAttributeIntrinsicMod\tfunc", "contents": "GetAttributeIntrinsicMod(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeLock\tfunc", "contents": "GetAttributeLock(character := $1, attrname := $2)" },
		{ "trigger": "GetAttributeName\tfunc", "contents": "GetAttributeName(alias_name := $1)" },
		{ "trigger": "GetAttributeTemporaryMod\tfunc", "contents": "GetAttributeTemporaryMod(character := $1, attrname := $2)" },
		{ "trigger": "RawSkillToBaseSkill\tfunc", "contents": "RawSkillToBaseSkill(rawskill := $1)" },
		{ "trigger": "SetAttributeBaseValue\tfunc", "contents": "SetAttributeBaseValue(character := $1, attrname := $2, basevalue_tenths := $3)" },
		{ "trigger": "SetAttributeCap\tfunc", "contents": "SetAttributeCap(character := $1, attrname := $2, capvalue := $3)" },
		{ "trigger": "SetAttributeLock\tfunc", "contents": "SetAttributeLock(character := $1, attrname := $2, lockstate := $3)" },
		{ "trigger": "SetAttributeTemporaryMod\tfunc", "contents": "SetAttributeTemporaryMod(character := $1, attrname := $2, tempmod_tenths := $3)" },

		{ "trigger": "Bin\tfunc", "contents": "Bin(number := $1)" },
		{ "trigger": "CAsc\tfunc", "contents": "CAsc(str := $1)" },
		{ "trigger": "CAscZ\tfunc", "contents": "CAscZ(str := $1, nullterm := ${2:0})" },
		{ "trigger": "CChr\tfunc", "contents": "CChr(number := $1)" },
		{ "trigger": "CChrZ\tfunc", "contents": "CChrZ(intarray := $1, break_at_first_null := ${2:0})" },
		{ "trigger": "CDbl\tfunc", "contents": "CDbl(expr := $1)" },
		{ "trigger": "CInt\tfunc", "contents": "CInt(expr := $1)" },
		{ "trigger": "CStr\tfunc", "contents": "CStr(expr := $1)" },
		{ "trigger": "Compare\tfunc", "contents": "Compare(str1 := $1, str2 := $2, pos1_start := ${3:0}, pos1_end := ${4:0}, pos2_start := ${5:0}, pos2_end := ${6:0})" },
		{ "trigger": "Find\tfunc", "contents": "Find(str := $1, search := $2, start := $3)" },
		{ "trigger": "Hex\tfunc", "contents": "Hex(number := $1)" },
		{ "trigger": "Len\tfunc", "contents": "Len(str_or_array := $1)" },
		{ "trigger": "Lower\tfunc", "contents": "Lower(str := $1)" },
		{ "trigger": "Pack\tfunc", "contents": "Pack(expr := $1)" },
		{ "trigger": "SizeOf\tfunc", "contents": "SizeOf(expr := $1)" },
		{ "trigger": "SplitWords\tfunc", "contents": "SplitWords(str := $1, delimiter := ${2:\" \"}, max_split := ${3:-1})" },
		{ "trigger": "StrReplace\tfunc", "contents": "StrReplace(str := $1, to_replace := $2, replace_with := $3)" },
		{ "trigger": "SubStr\tfunc", "contents": "SubStr(str := $1, start := $2, length := $3)" },
		{ "trigger": "SubStrReplace\tfunc", "contents": "SubStrReplace(str := $1, replace_with := $2, start := $3, length := ${4:0})" },
		{ "trigger": "Trim\tfunc", "contents": "Trim(str := $1, type := ${2:TRIM_BOTH}, to_trim := ${3:\" \"})" },
		{ "trigger": "TypeOf\tfunc", "contents": "TypeOf(expr := $1)" },
		{ "trigger": "TypeOfInt\tfunc", "contents": "TypeOfInt(expr := $1)" },
		{ "trigger": "Unpack\tfunc", "contents": "Unpack(str := $1)" },
		{ "trigger": "Upper\tfunc", "contents": "Upper(str := $1)" },
		
		{ "trigger": "Print\tfunc", "contents": "Print(anything := $1)" },
		
		{ "trigger": "BoatFromItem\tfunc", "contents": "BoatFromItem(item := $1)" },
		{ "trigger": "MoveBoat\tfunc", "contents": "MoveBoat(boat := $1, facing := $2, speed := ${3:BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatRelative\tfunc", "contents": "MoveBoatRelative(boat := $1, direction := $2, speed := ${3:BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatXY\tfunc", "contents": "MoveBoatXY(boat := $1, x := $2, y := $3)" },
		{ "trigger": "RegisterItemWithBoat\tfunc", "contents": "RegisterItemWithBoat(boat := $1, item := $1)" },
		{ "trigger": "SystemFindBoatBySerial\tfunc", "contents": "SystemFindBoatBySerial(serial := $1)" },
		{ "trigger": "TurnBoat\tfunc", "contents": "TurnBoat(boat := $1, direction := $1)" },
		
		{ "trigger": "AppendConfigFileElem\tfunc", "contents": "AppendConfigFileElem(filename := $1, elemtype := $2, elemkey := $3, properties := $4)" },
		{ "trigger": "FindConfigElem\tfunc", "contents": "FindConfigElem(config_file := $1, key := $2)" },
		{ "trigger": "GetConfigInt\tfunc", "contents": "GetConfigInt(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigIntArray\tfunc", "contents": "GetConfigIntArray(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigIntKeys\tfunc", "contents": "GetConfigIntKeys(config_file := $1)" },
		{ "trigger": "GetConfigMaxIntKey\tfunc", "contents": "GetConfigMaxIntKey(config_file := $1)" },
		{ "trigger": "GetConfigReal\tfunc", "contents": "GetConfigReal(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigString\tfunc", "contents": "GetConfigString(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringArray\tfunc", "contents": "GetConfigStringArray(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringDictionary\tfunc", "contents": "GetConfigStringDictionary(element := $1, property_name := $2)" },
		{ "trigger": "GetConfigStringKeys\tfunc", "contents": "GetConfigStringKeys(config_file := $1)" },
		{ "trigger": "ListConfigElemProps\tfunc", "contents": "ListConfigElemProps(element := $1)" },
		{ "trigger": "LoadTusScpFile\tfunc", "contents": "LoadTusScpFile(filename := $1)" },
		{ "trigger": "ReadConfigFile\tfunc", "contents": "ReadConfigFile(filename := $1)" },
		{ "trigger": "UnloadConfigFile\tfunc", "contents": "UnloadConfigFile(filename := $1)" },

		{ "trigger": "PrintTextAboveCL\tfunc", "contents": "PrintTextAboveCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateCL\tfunc", "contents": "PrintTextAbovePrivateCL(character := $1, object := $2, cliloc_num := $3, uc_text := ${4:array}, font := ${5:_DEFAULT_CLFONT}, color := ${6:_DEFAULT_CLCOLOR})" },
		{ "trigger": "SendSysMessageCL\tfunc", "contents": "SendSysMessageCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})" },

		{ "trigger": "CreateDataFile\tfunc", "contents": "CreateDataFile(filespec := $1, flags := ${2:DF_KEYTYPE_STRING})" },
		{ "trigger": "ListDataFiles\tfunc", "contents": "ListDataFiles()" },
		{ "trigger": "OpenDataFile\tfunc", "contents": "OpenDataFile(filespec := $1)" },
		{ "trigger": "UnloadDataFile\tfunc", "contents": "UnloadDataFile(filespec := $1)" },

		{ "trigger": "AppendToFile\tfunc", "contents": "AppendToFile(filename := $1, textlines := $2)" },
		{ "trigger": "CreateDirectory\tfunc", "contents": "CreateDirectory(dirname := $1)" },
		{ "trigger": "CreateXmlFile\tfunc", "contents": "CreateXmlFile()" },
		{ "trigger": "FileExists\tfunc", "contents": "FileExists(filename := $1)" },
		{ "trigger": "ListDirectory\tfunc", "contents": "ListDirectory(dirname := $1, extension := ${2:LISTDIR_ALL_FILES}, listdirs := ${3:LISTDIR_DONT_LIST_DIRS})" },
		{ "trigger": "LogToFile\tfunc", "contents": "LogToFile(filename := $1, line := $2, flags := ${3:0})" },
		{ "trigger": "OpenBinaryFile\tfunc", "contents": "OpenBinaryFile(filename := $1, mode := ${2:OPENMODE_IN}, endian := ${3:LITTLE_ENDIAN})" },
		{ "trigger": "OpenXmlFile\tfunc", "contents": "OpenXmlFile(filename := $1)" },
		{ "trigger": "ReadFile\tfunc", "contents": "ReadFile(filename := $1)" },
		{ "trigger": "WriteFile\tfunc", "contents": "WriteFile(filename := $1, textcontents := $2)" },
		
		{ "trigger": "CreateGuild\tfunc", "contents": "CreateGuild()" },
		{ "trigger": "DestroyGuild\tfunc", "contents": "DestroyGuild(guild := $1)" },
		{ "trigger": "FindGuild\tfunc", "contents": "FindGuild(guildid := $1)" },
		{ "trigger": "ListGuilds\tfunc", "contents": "ListGuilds()" },
		
		{ "trigger": "QueryIP\tfunc", "contents": "QueryIP()" },
		{ "trigger": "QueryParam\tfunc", "contents": "QueryParam(param := $1)" },
		{ "trigger": "WriteHtml\tfunc", "contents": "WriteHtml(html := $1)" },
		{ "trigger": "WriteHtmlRaw\tfunc", "contents": "WriteHtmlRaw(html := $1)" },
		
		{ "trigger": "ACos\tfunc", "contents": "ACos(x := $1)" },
		{ "trigger": "ASin\tfunc", "contents": "ASin(x := $1)" },
		{ "trigger": "ATan\tfunc", "contents": "ATan(x := $1)" },
		{ "trigger": "Abs\tfunc", "contents": "Abs(x := $1)" },
		{ "trigger": "Ceil\tfunc", "contents": "Ceil(x := $1)" },
		{ "trigger": "ConstE\tfunc", "contents": "ConstE()" },
		{ "trigger": "ConstPi\tfunc", "contents": "ConstPi()" },
		{ "trigger": "Cos\tfunc", "contents": "Cos(x := $1)" },
		{ "trigger": "DegToRad\tfunc", "contents": "DegToRad(degrees := $1)" },
		{ "trigger": "Floor\tfunc", "contents": "Floor(x := $1)" },
		{ "trigger": "FormatRealToString\tfunc", "contents": "FormatRealToString(value := $1, precision := $2)" },
		{ "trigger": "Log10\tfunc", "contents": "Log10(x := $1)" },
		{ "trigger": "LogE\tfunc", "contents": "LogE(x := $1)" },
		{ "trigger": "Max\tfunc", "contents": "Max(x := $1, y := ${2:0})" },
		{ "trigger": "Min\tfunc", "contents": "Min(x := $1, y := ${2:0})" },
		{ "trigger": "Pow\tfunc", "contents": "Pow(x := $1, y := $2)" },
		{ "trigger": "RadToDeg\tfunc", "contents": "RadToDeg(radians := $1)" },
		{ "trigger": "Root\tfunc", "contents": "Root(x := $1, y := $2)" },
		{ "trigger": "Sin\tfunc", "contents": "Sin(x := $1)" },
		{ "trigger": "Sqrt\tfunc", "contents": "Sqrt(x := $1)" },
		{ "trigger": "Tan\tfunc", "contents": "Tan(x := $1)" },

		{ "trigger": "CanMove\tfunc", "contents": "CanMove(direction := $1)" },
		{ "trigger": "Face\tfunc", "contents": "Face(direction := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "GetProperty\tfunc", "contents": "GetProperty(propertyname := $1)" },
		{ "trigger": "IsLegalMove\tfunc", "contents": "IsLegalMove(move := $1, boundingbox := $2)" },
		{ "trigger": "MakeBoundingBox\tfunc", "contents": "MakeBoundingBox(areastring := $1)" },
		{ "trigger": "Move\tfunc", "contents": "Move(direction := $1)" },
		{ "trigger": "RunAwayFrom\tfunc", "contents": "RunAwayFrom(object := $1)" },
		{ "trigger": "RunAwayFromLocation\tfunc", "contents": "RunAwayFromLocation(x := $1, y := $2)" },
		{ "trigger": "RunToward\tfunc", "contents": "RunToward(object := $1)" },
		{ "trigger": "RunTowardLocation\tfunc", "contents": "RunTowardLocation(x := $1, y := $2)" },
		{ "trigger": "Say\tfunc", "contents": "Say(text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, do_event := ${3:SAY_DOEVENT_DISABLE})" },
		{ "trigger": "SayUC\tfunc", "contents": "SayUC(uc_text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, langcode := ${3:SAY_LANG}, do_event := ${4:SAY_DOEVENT_DISABLE})" },
		{ "trigger": "Self\tfunc", "contents": "Self()" },
		{ "trigger": "SetAnchor\tfunc", "contents": "SetAnchor(centerx := $1, centery := $2, distance_start := $3, percent_subtract := $4)" },
		{ "trigger": "SetOpponent\tfunc", "contents": "SetOpponent(character := $1)" },
		{ "trigger": "SetProperty\tfunc", "contents": "SetProperty(propertyname := $1, propertyvalue := $2)" },
		{ "trigger": "SetWarMode\tfunc", "contents": "SetWarMode(warmode := $1)" },
		{ "trigger": "TurnAwayFrom\tfunc", "contents": "TurnAwayFrom(object := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "TurnAwayFromLocation\tfunc", "contents": "TurnAwayFromLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})" },
		{ "trigger": "TurnToward\tfunc", "contents": "TurnToward(object := $1, flags := ${2:FACE_NORMAL})" },
		{ "trigger": "TurnTowardLocation\tfunc", "contents": "TurnTowardLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})" },
		{ "trigger": "WalkAwayFrom\tfunc", "contents": "WalkAwayFrom(object := $1)" },
		{ "trigger": "WalkAwayFromLocation\tfunc", "contents": "WalkAwayFromLocation(x := $1, y := $2)" },
		{ "trigger": "WalkToward\tfunc", "contents": "WalkToward(object := $1)" },
		{ "trigger": "WalkTowardLocation\tfunc", "contents": "WalkTowardLocation(x := $1, y := $2)" },
		{ "trigger": "Wander\tfunc", "contents": "Wander()" },

		{ "trigger": "Clear_Event_Queue\tfunc", "contents": "Clear_Event_Queue()" },
		{ "trigger": "Create_Debug_Context\tfunc", "contents": "Create_Debug_Context()" },
		{ "trigger": "Debugger\tfunc", "contents": "Debugger()" },
		{ "trigger": "Events_Waiting\tfunc", "contents": "Events_Waiting()" },
		{ "trigger": "GetPid\tfunc", "contents": "GetPid()" },
		{ "trigger": "GetProcess\tfunc", "contents": "GetProcess(pid := ${1:0})" },
		{ "trigger": "Is_Critical\tfunc", "contents": "Is_Critical()" },
		{ "trigger": "OpenConnection\tfunc", "contents": "OpenConnection(host := $1, port := $2, scriptdef := $3, params := $4)" },
		{ "trigger": "OpenURL\tfunc", "contents": "OpenURL(character := $1, url := $2)" },
		{ "trigger": "Run_Script\tfunc", "contents": "Run_Script(script_name := $1, param := ${2:0})" },
		{ "trigger": "Run_Script_To_Completion\tfunc", "contents": "Run_Script_To_Completion(script_name := $1, param := ${2:0})" },
		{ "trigger": "Set_Critical\tfunc", "contents": "Set_Critical(critical := $1)" },
		{ "trigger": "Set_Debug\tfunc", "contents": "Set_Debug(debug := $1)" },
		{ "trigger": "Set_Event_Queue_Size\tfunc", "contents": "Set_Event_Queue_Size(size := $1)" },
		{ "trigger": "Set_Priority\tfunc", "contents": "Set_Priority(priority := $1)" },
		{ "trigger": "Set_Script_Option\tfunc", "contents": "Set_Script_Option(optnum := $1, optval := $2)" },
		{ "trigger": "Sleep\tfunc", "contents": "Sleep(num_seconds := $1)" },
		{ "trigger": "Sleepms\tfunc", "contents": "Sleepms(num_milliseconds := $1)" },
		{ "trigger": "Start_Script\tfunc", "contents": "Start_Script(script_name := $1, param := ${2:0})" },
		{ "trigger": "Start_Skill_Script\tfunc", "contents": "Start_Skill_Script(chr := $1, attr_name := $2, script_name := ${3:0}, param := ${4:0})" },
		{ "trigger": "SysLog\tfunc", "contents": "SysLog(text := $1)" },
		{ "trigger": "System_RPM\tfunc", "contents": "System_RPM()" },
		{ "trigger": "Unload_Scripts\tfunc", "contents": "Unload_Scripts(scriptname := ${1:\"\"})" },
		{ "trigger": "Wait_For_Event\tfunc", "contents": "Wait_For_Event(num_seconds_timeout := $1)" },
		
		{ "trigger": "CreateParty\tfunc", "contents": "CreateParty(leader := $1, firstmember := $2)" },
		{ "trigger": "DisbandParty\tfunc", "contents": "DisbandParty(PartyRef := $1)" },
		{ "trigger": "SendPartyMsg\tfunc", "contents": "SendPartyMsg(party := $1, character := $2, uctext := $3)" },
		{ "trigger": "SendPrivatePartyMsg\tfunc", "contents": "SendPrivatePartyMsg(party := $1, character := $2, tocharacter := $3, uctext := $4)" },

		{ "trigger": "AddRealm\tfunc", "contents": "AddRealm(realm_name := $1, base_realm := $2)" },
		{ "trigger": "CreatePacket\tfunc", "contents": "CreatePacket(type := $1, size := $2)" },
		{ "trigger": "DeleteRealm\tfunc", "contents": "DeleteRealm(realm := $1)" },
		{ "trigger": "FormatItemDescription\tfunc", "contents": "FormatItemDescription(desc := $1, amount := ${2:1}, suffix := ${3:\"\"})" },
		{ "trigger": "GetCmdLevelName\tfunc", "contents": "GetCmdLevelName(number := $1)" },
		{ "trigger": "GetCmdLevelNumber\tfunc", "contents": "GetCmdLevelNumber(name := $1)" },
		{ "trigger": "GetItemDescriptor\tfunc", "contents": "GetItemDescriptor(objtype := $1)" },
		{ "trigger": "GetPackageByName\tfunc", "contents": "GetPackageByName(name := $1)" },
		{ "trigger": "IncRevision\tfunc", "contents": "IncRevision(object := $1)" },
		{ "trigger": "ListTextCommands\tfunc", "contents": "ListTextCommands()" },
		{ "trigger": "ListenPoints\tfunc", "contents": "ListenPoints()" },
		{ "trigger": "LogCPropProfile\tfunc", "contents": "LogCPropProfile()" },
		{ "trigger": "MD5Encrypt\tfunc", "contents": "MD5Encrypt(str := $1)" },
		{ "trigger": "Packages\tfunc", "contents": "Packages()" },
		{ "trigger": "ReadMillisecondClock\tfunc", "contents": "ReadMillisecondClock()" },
		{ "trigger": "Realms\tfunc", "contents": "Realms(realm := ${1:\"\"})" },
		{ "trigger": "ReloadConfiguration\tfunc", "contents": "ReloadConfiguration()" },
		{ "trigger": "SetSysTrayPopupText\tfunc", "contents": "SetSysTrayPopupText(text := $1)" },
		
		{ "trigger": "CreateRootItemInStorageArea\tfunc", "contents": "CreateRootItemInStorageArea(area := $1, itemname := $2, objtype := $3)" },
		{ "trigger": "CreateStorageArea\tfunc", "contents": "CreateStorageArea(areaname := $1)" },
		{ "trigger": "DestroyRootItemInStorageArea\tfunc", "contents": "DestroyRootItemInStorageArea(area := $1, itemname := $2)" },
		{ "trigger": "FindRootItemInStorageArea\tfunc", "contents": "FindRootItemInStorageArea(area := $1, itemname := $2)" },
		{ "trigger": "FindStorageArea\tfunc", "contents": "FindStorageArea(areaname := $1)" },
		{ "trigger": "StorageAreas\tfunc", "contents": "StorageAreas()" },
		
		{ "trigger": "mysql_affected_rows\tfunc", "contents": "mysql_affected_rows(result := $1)" },
		{ "trigger": "mysql_close\tfunc", "contents": "mysql_close(connection := $1)" },
		{ "trigger": "mysql_connect\tfunc", "contents": "mysql_connect(host := $1, username := $2, password := ${3:\"\"})" },
		{ "trigger": "mysql_fetch_row\tfunc", "contents": "mysql_fetch_row(result := $1)" },
		{ "trigger": "mysql_field_name\tfunc", "contents": "mysql_field_name(result := $1, column_index := $2)" },
		{ "trigger": "mysql_num_fields\tfunc", "contents": "mysql_num_fields(result := $1)" },
		{ "trigger": "mysql_num_rows\tfunc", "contents": "mysql_num_rows(result := $1)" },
		{ "trigger": "mysql_query\tfunc", "contents": "mysql_query(connection := $1, query := $2, parameters := ${3:\"\"})" },
		{ "trigger": "mysql_select_db\tfunc", "contents": "mysql_select_db(connection := $1, database := $2)" },
		
		{ "trigger": "BroadcastUC\tfunc", "contents": "BroadcastUC(uc_text := $1, langcode := $2, font := ${3:_DEFAULT_UCFONT}, color := ${4:_DEFAULT_UCCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateUC\tfunc", "contents": "PrintTextAbovePrivateUC(above_object := $1, uc_text := $2, langcode := $3, character := $4, font := ${5:_DEFAULT_UCFONT}, color := ${6:_DEFAULT_UCCOLOR}, journal_print := ${7:JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "PrintTextAboveUC\tfunc", "contents": "PrintTextAboveUC(above_object := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR}, journal_print := ${6:JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "RequestInputUC\tfunc", "contents": "RequestInputUC(character := $1, item := $2, uc_prompt := $3, langcode := $4)" },
		{ "trigger": "SendSysMessageUC\tfunc", "contents": "SendSysMessageUC(character := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR})" },
		
		{ "trigger": "Accessible\tfunc", "contents": "Accessible(by_character := $1, item := $2)" },
		{ "trigger": "AddAmount\tfunc", "contents": "AddAmount(item := $1, amount := $2)" },
		{ "trigger": "AddMenuItem\tfunc", "contents": "AddMenuItem(menu := $1, objtype := $2, text := $3, color := ${4:0})" },
		{ "trigger": "ApplyConstraint\tfunc", "contents": "ApplyConstraint(objlist := $1, configfile := $2, propertyname := $3, minvalue := $4)" },
		{ "trigger": "AssignRectToWeatherRegion\tfunc", "contents": "AssignRectToWeatherRegion(region := $1, xwest := $2, ynorth := $3, xeast := $4, ysouth := $5)" },
		{ "trigger": "Attach\tfunc", "contents": "Attach(character := $1)" },
		{ "trigger": "Broadcast\tfunc", "contents": "Broadcast(text := $1, font := ${2:_DEFAULT_TEXT_FONT}, color := ${3:_DEFAULT_TEXT_COLOR}, requiredCmdLevel := ${4:_DEFAULT_TEXT_REQUIREDCMD})" },
		{ "trigger": "CanWalk\tfunc", "contents": "CanWalk(movemode := $1, x1 := $2, y1 := $3, z1 := $4, x2_or_dir := $5, y2 := ${6:CANWALK_DIR}, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "CancelTarget\tfunc", "contents": "CancelTarget(of_whom := $1)" },
		{ "trigger": "CheckLineOfSight\tfunc", "contents": "CheckLineOfSight(object1 := $1, object2 := $2)" },
		{ "trigger": "CheckLosAt\tfunc", "contents": "CheckLosAt(character := $1, x := $2, y := $3, z := $4)" },
		{ "trigger": "CheckLosBetween\tfunc", "contents": "CheckLosBetween(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "CloseGump\tfunc", "contents": "CloseGump(character := $1, gumpid := $2, response := ${3:0})" },
		{ "trigger": "CloseTradeWindow\tfunc", "contents": "CloseTradeWindow(character := $1)" },
		{ "trigger": "CloseWindow\tfunc", "contents": "CloseWindow(character := $1, type := $2, object := $3)" },
		{ "trigger": "ConsumeReagents\tfunc", "contents": "ConsumeReagents(who := $1, spellid := $2)" },
		{ "trigger": "ConsumeSubstance\tfunc", "contents": "ConsumeSubstance(container := $1, objtype := $2, amount := $3)" },
		{ "trigger": "CoordinateDistance\tfunc", "contents": "CoordinateDistance(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CoordinateDistanceEuclidean\tfunc", "contents": "CoordinateDistanceEuclidean(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CreateAccount\tfunc", "contents": "CreateAccount(acctname := $1, password := $2, enabled := $3)" },
		{ "trigger": "CreateItemAtLocation\tfunc", "contents": "CreateItemAtLocation(x := $1, y := $2, z := $3, objtype := $4, amount := ${5:1}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "CreateItemCopyAtLocation\tfunc", "contents": "CreateItemCopyAtLocation(x := $1, y := $2, z := $3, item := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "CreateItemInBackpack\tfunc", "contents": "CreateItemInBackpack(of_character := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateItemInContainer\tfunc", "contents": "CreateItemInContainer(container := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateItemInInventory\tfunc", "contents": "CreateItemInInventory(container := $1, objtype := $2, amount := ${3:1})" },
		{ "trigger": "CreateMenu\tfunc", "contents": "CreateMenu(title := $1)" },
		{ "trigger": "CreateMultiAtLocation\tfunc", "contents": "CreateMultiAtLocation(x := $1, y := $2, z := $3, objtype := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "CreateNpcFromTemplate\tfunc", "contents": "CreateNpcFromTemplate(template := $1, x := $2, y := $3, z := $4, override_properties := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "DestroyItem\tfunc", "contents": "DestroyItem(Item := $1)" },
		{ "trigger": "DestroyMulti\tfunc", "contents": "DestroyMulti(multi := $1)" },
		{ "trigger": "Detach\tfunc", "contents": "Detach()" },
		{ "trigger": "DisableEvents\tfunc", "contents": "DisableEvents(eventtype := $1)" },
		{ "trigger": "DisconnectClient\tfunc", "contents": "DisconnectClient(character := $1)" },
		{ "trigger": "Distance\tfunc", "contents": "Distance(obj1 := $1, obj2 := $2)" },
		{ "trigger": "DistanceEuclidean\tfunc", "contents": "DistanceEuclidean(obj1 := $1, obj2 := $2)" },
		{ "trigger": "EnableEvents\tfunc", "contents": "EnableEvents(eventtype := $1, range := ${2:-1})" },
		{ "trigger": "EnumerateItemsInContainer\tfunc", "contents": "EnumerateItemsInContainer(container := $1, flags := ${2:0})" },
		{ "trigger": "EnumerateOnlineCharacters\tfunc", "contents": "EnumerateOnlineCharacters()" },
		{ "trigger": "EquipFromTemplate\tfunc", "contents": "EquipFromTemplate(character := $1, template := $2)" },
		{ "trigger": "EquipItem\tfunc", "contents": "EquipItem(mobile := $1, item := $2)" },
		{ "trigger": "EraseGlobalProperty\tfunc", "contents": "EraseGlobalProperty(propname := $1)" },
		{ "trigger": "EraseObjProperty\tfunc", "contents": "EraseObjProperty(object := $1, propname := $2)" },
		{ "trigger": "FindAccount\tfunc", "contents": "FindAccount(acctname := $1)" },
		{ "trigger": "FindObjtypeInContainer\tfunc", "contents": "FindObjtypeInContainer(container := $1, objtype := $2)" },
		{ "trigger": "FindPath\tfunc", "contents": "FindPath(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM}, flags := ${8:FP_IGNORE_MOBILES}, searchskirt := ${9:5})" },
		{ "trigger": "FindSubstance\tfunc", "contents": "FindSubstance(container := $1, objtype := $2, amount := $3, makeinuse := ${4:0}, flags := ${5:0})" },
		{ "trigger": "GetAmount\tfunc", "contents": "GetAmount(item := $1)" },
		{ "trigger": "GetCommandHelp\tfunc", "contents": "GetCommandHelp(character := $1, command := $2)" },
		{ "trigger": "GetCoordsInLine\tfunc", "contents": "GetCoordsInLine(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "GetEquipmentByLayer\tfunc", "contents": "GetEquipmentByLayer(character := $1, layer := $2)" },
		{ "trigger": "GetFacing\tfunc", "contents": "GetFacing(from_x := $1, from_y := $2, to_x := $3, to_y := $4)" },
		{ "trigger": "GetGlobalProperty\tfunc", "contents": "GetGlobalProperty(propname := $1)" },
		{ "trigger": "GetGlobalPropertyNames\tfunc", "contents": "GetGlobalPropertyNames()" },
		{ "trigger": "GetHarvestDifficulty\tfunc", "contents": "GetHarvestDifficulty(resource := $1, x := $2, y := $3, tiletype := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "GetMapInfo\tfunc", "contents": "GetMapInfo(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetMenuObjTypes\tfunc", "contents": "GetMenuObjTypes(menuname := $1)" },
		{ "trigger": "GetMidpointCircleCoords\tfunc", "contents": "GetMidpointCircleCoords(xcenter := $1, ycenter := $2, radius := $3)" },
		{ "trigger": "GetMultiDimensions\tfunc", "contents": "GetMultiDimensions(multiid := $1)" },
		{ "trigger": "GetObjProperty\tfunc", "contents": "GetObjProperty(object := $1, property_name := $2)" },
		{ "trigger": "GetObjPropertyNames\tfunc", "contents": "GetObjPropertyNames(object := $1)" },
		{ "trigger": "GetObjType\tfunc", "contents": "GetObjType(object := $1)" },
		{ "trigger": "GetObjTypeByName\tfunc", "contents": "GetObjTypeByName(name := $1)" },
		{ "trigger": "GetRegionLightLevelAtLocation\tfunc", "contents": "GetRegionLightLevelAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetRegionName\tfunc", "contents": "GetRegionName(object := $1)" },
		{ "trigger": "GetRegionNameAtLocation\tfunc", "contents": "GetRegionNameAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GetRegionString\tfunc", "contents": "GetRegionString(resource := $1, x := $2, y := $3, propertyname := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "GetSpellDifficulty\tfunc", "contents": "GetSpellDifficulty(spellid := $1)" },
		{ "trigger": "GetStandingHeight\tfunc", "contents": "GetStandingHeight(x := $1, y := $2, startz := $3, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "GetStandingLayers\tfunc", "contents": "GetStandingLayers(x := $1, y := $2, flags := ${3:MAPDATA_FLAG_ALL}, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "GetWorldHeight\tfunc", "contents": "GetWorldHeight(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})" },
		{ "trigger": "GrantPrivilege\tfunc", "contents": "GrantPrivilege(character := $1, privilege := $2)" },
		{ "trigger": "HarvestResource\tfunc", "contents": "HarvestResource(resource := $1, x := $2, y := $3, b := $4, n := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "IsStackable\tfunc", "contents": "IsStackable(item1 := $1, item2 := $2)" },
		{ "trigger": "ListAccounts\tfunc", "contents": "ListAccounts()" },
		{ "trigger": "ListEquippedItems\tfunc", "contents": "ListEquippedItems(who := $1)" },
		{ "trigger": "ListGhostsNearLocation\tfunc", "contents": "ListGhostsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListHostiles\tfunc", "contents": "ListHostiles(characterx := $1, range := ${2:20}, flags := ${3:0})" },
		{ "trigger": "ListItemsAtLocation\tfunc", "contents": "ListItemsAtLocation(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocation\tfunc", "contents": "ListItemsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationOfType\tfunc", "contents": "ListItemsNearLocationOfType(x := $1, y := $2, z := $3, range := $4, objtype := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationWithFlag\tfunc", "contents": "ListItemsNearLocationWithFlag(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInBox\tfunc", "contents": "ListMobilesInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInLineOfSight\tfunc", "contents": "ListMobilesInLineOfSight(object := $1, range := $2)" },
		{ "trigger": "ListMobilesNearLocation\tfunc", "contents": "ListMobilesNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListMobilesNearLocationEx\tfunc", "contents": "ListMobilesNearLocationEx(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "ListMultisInBox\tfunc", "contents": "ListMultisInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListObjectsInBox\tfunc", "contents": "ListObjectsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})" },
		{ "trigger": "ListOfflineMobilesInRealm\tfunc", "contents": "ListOfflineMobilesInRealm(realm := ${1:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsAtLocation\tfunc", "contents": "ListStaticsAtLocation(x := $1, y := $2, z := $3, flags := ${4:0}, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsInBox\tfunc", "contents": "ListStaticsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, flags := $7, realm := ${8:_DEFAULT_REALM})" },
		{ "trigger": "ListStaticsNearLocation\tfunc", "contents": "ListStaticsNearLocation(x := $1, y := $2, z := $3, range := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})" },
		{ "trigger": "MoveItemToContainer\tfunc", "contents": "MoveItemToContainer(item := $1, container := $2, x := ${3:-1}, y := ${4:-1}, add_to_existing_stack := ${5:0})" },
		{ "trigger": "MoveItemToSecureTradeWin\tfunc", "contents": "MoveItemToSecureTradeWin(item := $1, character := $2)" },
		{ "trigger": "MoveObjectToLocation\tfunc", "contents": "MoveObjectToLocation(object := $1, x := $2, y := $3, z := $4, realm := ${5:_DEFAULT_REALM}, flags := ${6:MOVEOBJECT_NORMAL})" },
		{ "trigger": "OpenPaperdoll\tfunc", "contents": "OpenPaperdoll(towhom := $1, forwhom := $2)" },
		{ "trigger": "POLCore\tfunc", "contents": "POLCore()" },
		{ "trigger": "PerformAction\tfunc", "contents": "PerformAction(character := $1, action := $2, framecount := ${3:5}, repeatcount := ${4:1}, backward := ${5:ACTION_DIR_FORWARD}, repeatflag := ${6:ACTION_NOREPEAT}, delay := ${7:1})" },
		{ "trigger": "PlayLightningBoltEffect\tfunc", "contents": "PlayLightningBoltEffect(center_object := $1)" },
		{ "trigger": "PlayMovingEffect\tfunc", "contents": "PlayMovingEffect(source := $1, target := $2, effect := $3, speed := $4, loop := ${5:0}, explode := ${6:0})" },
		{ "trigger": "PlayMovingEffectEx\tfunc", "contents": "PlayMovingEffectEx(source := $1, target := $2, effect := $3, speed := $4, duration := ${5:0}, hue := ${6:0}, render := ${7:0}, fixeddirection := ${8:0}, explode := ${9:0}, effect3d := ${10:0}, effect3dexplode := ${11:0}, effect3dsound := ${12:0})" },
		{ "trigger": "PlayMovingEffectXYZ\tfunc", "contents": "PlayMovingEffectXYZ(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, effect := $7, speed := $8, loop := ${9:0}, explode := ${10:0}, realm := ${11:_DEFAULT_REALM})" },
		{ "trigger": "PlayMovingEffectXYZEx\tfunc", "contents": "PlayMovingEffectXYZEx(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, realm := ${7:_DEFAULT_REALM}, effect := $8, speed := $9, duration := ${10:0}, hue := ${11:0}, render := ${12:0}, fixeddirection := ${13:0}, explode := ${14:0}, effect3d := ${15:0}, effect3dexplode := ${16:0}, effect3dsound := ${17:0})" },
		{ "trigger": "PlayMusic\tfunc", "contents": "PlayMusic(chr := $1, music_id := ${2:0})" },
		{ "trigger": "PlayObjectCenteredEffect\tfunc", "contents": "PlayObjectCenteredEffect(center := $1, effect := $2, speed := $3, loop := ${4:0})" },
		{ "trigger": "PlayObjectCenteredEffectEx\tfunc", "contents": "PlayObjectCenteredEffectEx(center := $1, effect := $2, speed := $3, duration := ${4:0}, hue := ${5:0}, render := ${6:0}, layer := ${7:0}, effect3d := ${8:0})" },
		{ "trigger": "PlaySoundEffect\tfunc", "contents": "PlaySoundEffect(object := $1, effect := $2)" },
		{ "trigger": "PlaySoundEffectPrivate\tfunc", "contents": "PlaySoundEffectPrivate(object := $1, effect := $2, playfor := $3)" },
		{ "trigger": "PlaySoundEffectXYZ\tfunc", "contents": "PlaySoundEffectXYZ(x := $1, y := $2, z := $3, effect := $4, realm := ${5:_DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffect\tfunc", "contents": "PlayStationaryEffect(x := $1, y := $2, z := $3, effect := $4, speed := $5, loop := ${6:0}, explode := ${7:0}, realm := ${8:_DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffectEx\tfunc", "contents": "PlayStationaryEffectEx(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM}, effect := $5, speed := $6, duration := ${7:0}, hue := ${8:0}, render := ${9:0}, effect3d := ${10:0})" },
		{ "trigger": "PrintTextAbove\tfunc", "contents": "PrintTextAbove(above_object := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR}, journal_print := ${5:JOURNAL_PRINT_NAME})" },
		{ "trigger": "PrintTextAbovePrivate\tfunc", "contents": "PrintTextAbovePrivate(above_object := $1, text := $2, character := $3, font := ${4:_DEFAULT_TEXT_FONT}, color := ${5:_DEFAULT_TEXT_COLOR}, journal_print := ${6:JOURNAL_PRINT_NAME})" },
		{ "trigger": "ReadGameClock\tfunc", "contents": "ReadGameClock()" },
		{ "trigger": "RegisterForSpeechEvents\tfunc", "contents": "RegisterForSpeechEvents(at_object := $1, range := $2, flags := ${3:0})" },
		{ "trigger": "ReleaseItem\tfunc", "contents": "ReleaseItem(item := $1)" },
		{ "trigger": "RequestInput\tfunc", "contents": "RequestInput(character := $1, item := $2, prompt := $3)" },
		{ "trigger": "ReserveItem\tfunc", "contents": "ReserveItem(item := $1)" },
		{ "trigger": "RestartScript\tfunc", "contents": "RestartScript(npc := $1)" },
		{ "trigger": "Resurrect\tfunc", "contents": "Resurrect(mobile := $1, flags := ${2:0})" },
		{ "trigger": "RevokePrivilege\tfunc", "contents": "RevokePrivilege(character := $1, privilege := $2)" },
		{ "trigger": "SaveWorldState\tfunc", "contents": "SaveWorldState()" },
		{ "trigger": "SecureTradeWin\tfunc", "contents": "SecureTradeWin(character := $1, character2 := $2)" },
		{ "trigger": "SelectColor\tfunc", "contents": "SelectColor(character := $1, item := $2)" },
		{ "trigger": "SelectMenuItem2\tfunc", "contents": "SelectMenuItem2(character := $1, menuname := $2)" },
		{ "trigger": "SendBuyWindow\tfunc", "contents": "SendBuyWindow(character := $1, container := $2, vendor := $3, items := $4, flags := ${5:0})" },
		{ "trigger": "SendCharProfile\tfunc", "contents": "SendCharProfile(character := $1, of_who := $2, title := $3, uneditable_text := ${4:CHARPROFILE_NO_UNEDITABLE_TEXT}, editable_text := ${5:CHARPROFILE_NO_EDITABLE_TEXT})" },
		{ "trigger": "SendCharacterRaceChanger\tfunc", "contents": "SendCharacterRaceChanger(character := $1)" },
		{ "trigger": "SendDialogGump\tfunc", "contents": "SendDialogGump(who := $1, layout := $2, textlines := $3, x := ${4:0}, y := ${5:0}, flags := ${6:0}, gumpid := ${7:0})" },
		{ "trigger": "SendEvent\tfunc", "contents": "SendEvent(npc := $1, event := $2)" },
		{ "trigger": "SendHousingTool\tfunc", "contents": "SendHousingTool(who := $1, house := $2)" },
		{ "trigger": "SendInstaResDialog\tfunc", "contents": "SendInstaResDialog(character := $1)" },
		{ "trigger": "SendOpenBook\tfunc", "contents": "SendOpenBook(character := $1, book := $2)" },
		{ "trigger": "SendOpenSpecialContainer\tfunc", "contents": "SendOpenSpecialContainer(character := $1, container := $2)" },
		{ "trigger": "SendOverallSeason\tfunc", "contents": "SendOverallSeason(season_id := $1, playsound := ${2:1})" },
		{ "trigger": "SendPacket\tfunc", "contents": "SendPacket(to_whom := $1, packet_hex_string := $2)" },
		{ "trigger": "SendPopUpMenu\tfunc", "contents": "SendPopUpMenu(to_whom := $1, above := $2, menu := $3)" },
		{ "trigger": "SendQuestArrow\tfunc", "contents": "SendQuestArrow(to_whom := $1, x := ${2:-1}, y := ${3:-1}, target := ${4:\"\"})" },
		{ "trigger": "SendSellWindow\tfunc", "contents": "SendSellWindow(character := $1, vendor := $2, i1 := $3, i2 := $4, i3 := $5, flags := ${6:0})" },
		{ "trigger": "SendSkillWindow\tfunc", "contents": "SendSkillWindow(towhom := $1, forwhom := $2)" },
		{ "trigger": "SendStatus\tfunc", "contents": "SendStatus(character := $1)" },
		{ "trigger": "SendStringAsTipWindow\tfunc", "contents": "SendStringAsTipWindow(character := $1, text := $2)" },
		{ "trigger": "SendSysMessage\tfunc", "contents": "SendSysMessage(character := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})" },
		{ "trigger": "SendTextEntryGump\tfunc", "contents": "SendTextEntryGump(who := $1, line1 := $2, cancel := ${3:TE_CANCEL_ENABLE}, style := ${4:TE_STYLE_NORMAL}, maximum := ${5:40}, line2 := ${6:\"\"})" },
		{ "trigger": "SendViewContainer\tfunc", "contents": "SendViewContainer(character := $1, container := $2)" },
		{ "trigger": "SetGlobalProperty\tfunc", "contents": "SetGlobalProperty(propname := $1, propval := $2)" },
		{ "trigger": "SetName\tfunc", "contents": "SetName(object := $1, name := $2)" },
		{ "trigger": "SetObjProperty\tfunc", "contents": "SetObjProperty(object := $1, property_name := $2, property_value := $3)" },
		{ "trigger": "SetRegionLightLevel\tfunc", "contents": "SetRegionLightLevel(regionname := $1, lightlevel := $2)" },
		{ "trigger": "SetRegionWeatherLevel\tfunc", "contents": "SetRegionWeatherLevel(region := $1, type := $2, severity := $3, aux := ${4:0}, lightoverride := ${5:-1})" },
		{ "trigger": "SetScriptController\tfunc", "contents": "SetScriptController(who := $1)" },
		{ "trigger": "Shutdown\tfunc", "contents": "Shutdown()" },
		{ "trigger": "SingleClick\tfunc", "contents": "SingleClick(who := $1, what := $2)" },
		{ "trigger": "SpeakPowerWords\tfunc", "contents": "SpeakPowerWords(who := $1, spellid := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})" },
		{ "trigger": "StartSpellEffect\tfunc", "contents": "StartSpellEffect(who := $1, spellid := $2)" },
		{ "trigger": "SubtractAmount\tfunc", "contents": "SubtractAmount(item := $1, amount := $2)" },
		{ "trigger": "SystemFindObjectBySerial\tfunc", "contents": "SystemFindObjectBySerial(serial := $1, sysfind_flags := ${2:0})" },
		{ "trigger": "Target\tfunc", "contents": "Target(by_character := $1, options := ${2:TGTOPT_CHECK_LOS+TGTOPT_NEUTRAL})" },
		{ "trigger": "TargetCoordinates\tfunc", "contents": "TargetCoordinates(by_character := $1)" },
		{ "trigger": "TargetMultiPlacement\tfunc", "contents": "TargetMultiPlacement(character := $1, objtype := $2, flags := ${3:0}, xoffset := ${4:0}, yoffset := ${5:0}, hue := ${6:0})" },
		{ "trigger": "UpdateItem\tfunc", "contents": "UpdateItem(item := $1)" },
		{ "trigger": "UpdateMobile\tfunc", "contents": "UpdateMobile(mobile := $1, recreate := ${2:UPDATEMOBILE_UPDATE})" },
		{ "trigger": "UseItem\tfunc", "contents": "UseItem(item := $1, character := $2)" },
		
		{ "trigger": "RandomDiceRoll\tfunc", "contents": "RandomDiceRoll(dice_string := $1)" },
		{ "trigger": "RandomFloat\tfunc", "contents": "RandomFloat(below_this_float := $1)" },
		{ "trigger": "RandomInt\tfunc", "contents": "RandomInt(below_this_number := $1)" },
		{ "trigger": "RandomIntMinMax\tfunc", "contents": "RandomIntMinMax(minValue := $1, maxValue := $2)" },
		{ "trigger": "StrFormatTime\tfunc", "contents": "StrFormatTime(format_string := $1, time_stamp := ${2:0})" },
		
		{ "trigger": "ApplyDamage\tfunc", "contents": "ApplyDamage(mobile := $1, damage := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ApplyRawDamage\tfunc", "contents": "ApplyRawDamage(character := $1, Hits := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ConsumeMana\tfunc", "contents": "ConsumeMana(who := $1, spellid := $2)" },
		{ "trigger": "ConsumeVital\tfunc", "contents": "ConsumeVital(who := $1, vital := $2, hundredths := $3)" },
		{ "trigger": "GetVital\tfunc", "contents": "GetVital(character := $1, vitalname := $2)" },
		{ "trigger": "GetVitalMaximumValue\tfunc", "contents": "GetVitalMaximumValue(character := $1, vitalname := $2)" },
		{ "trigger": "GetVitalName\tfunc", "contents": "GetVitalName(alias_name := $1)" },
		{ "trigger": "GetVitalRegenRate\tfunc", "contents": "GetVitalRegenRate(character := $1, vitalname := $2)" },
		{ "trigger": "HealDamage\tfunc", "contents": "HealDamage(Character := $1, Hits := $2)" },
		{ "trigger": "RecalcVitals\tfunc", "contents": "RecalcVitals(character := $1, calc_attribute := ${2:RECALC_INTRINSIC_MOD}, calc_vital := ${3:RECALC_VITALS})" },
		{ "trigger": "SetVital\tfunc", "contents": "SetVital(character := $1, vitalname := $2, value := $3)" },

		// Constants
		"ATTRIBUTE_LOCK_UP\tconst",
		"ATTRIBUTE_LOCK_DOWN\tconst",
		"ATTRIBUTE_LOCK_LOCKED\tconst",
		"ATTRIBUTE_MAX_BASE\tconst",
		
		"TRIM_LEFT\tconst",
		"TRIM_RIGHT\tconst",
		"TRIM_BOTH\tconst",
		"OT_UNKNOWN\tconst",
		"OT_UNINIT\tconst",
		"OT_STRING\tconst",
		"OT_LONG\tconst",
		"OT_DOUBLE\tconst",
		"OT_ARRAY\tconst",
		"OT_APPLICPTR\tconst",
		"OT_APPLICOBJ\tconst",
		"OT_ERROR\tconst",
		"OT_DICTIONARY\tconst",
		"OT_STRUCT\tconst",
		"OT_PACKET\tconst",
		"OT_BINARYFILE\tconst",
		"OT_XMLFILE\tconst",
		"OT_XMLNODE\tconst",
		"OT_XMLATTRIBUTES\tconst",
		"OT_POLCOREREF\tconst",
		"OT_ACCOUNTREF\tconst",
		"OT_CONFIGFILEREF\tconst",
		"OT_CONFIGELEMREF\tconst",
		"OT_DATAFILEREF\tconst",
		"OT_DATAELEMREF\tconst",
		"OT_GUILDREF\tconst",
		"OT_PARTYREF\tconst",
		"OT_BOUNDINGBOX\tconst",
		"OT_DEBUGCONTEXT\tconst",
		"OT_SCRIPTEXREF\tconst",
		"OT_PACKAGE\tconst",
		"OT_MENUREF\tconst",
		"OT_MOBILEREF\tconst",
		"OT_OFFLINEMOBILEREF\tconst",
		"OT_ITEMREF\tconst",
		"OT_BOATREF\tconst",
		"OT_MULTIREF\tconst",
		"OT_CLIENTREF\tconst",
		"OT_SQLCONN\tconst",
		"OT_SQLRESULT\tconst",
		"OT_SQLROW\tconst",
		
		"BOAT_SPEED_ONE_TILE\tconst",
		"BOAT_SPEED_SLOW\tconst",
		"BOAT_SPEED_MEDIUM\tconst",
		"BOAT_SPEED_FAST\tconst",
		
		"_DEFAULT_CLFONT\tconst",
		"_DEFAULT_CLCOLOR\tconst",
		
		"DF_KEYTYPE_STRING\tconst",
		"DF_KEYTYPE_INTEGER\tconst",
		
		"LOG_DATETIME\tconst",
		"OPENMODE_IN\tconst",
		"OPENMODE_OUT\tconst",
		"OPENMODE_ATE\tconst",
		"OPENMODE_APP\tconst",
		"OPENMODE_TRUNC\tconst",
		"SEEKDIR_BEG\tconst",
		"SEEKDIR_CUR\tconst",
		"SEEKDIR_END\tconst",
		"LITTLE_ENDIAN\tconst",
		"BIG_ENDIAN\tconst",
		"LISTDIR_LIST_DIRS\tconst",
		"LISTDIR_DONT_LIST_DIRS\tconst",
		"LISTDIR_NO_FILES\tconst",
		"LISTDIR_ALL_FILES\tconst",
		
		"SAY_TEXTTYPE_DEFAULT\tconst",
		"SAY_TEXTTYPE_WHISPER\tconst",
		"SAY_TEXTTYPE_YELL\tconst",
		"SAY_LANG\tconst",
		"SAY_DOEVENT_DISABLE\tconst",
		"SAY_DOEVENT_ENABLE\tconst",
		"FACE_NORMAL\tconst",
		"FACE_FORCE\tconst",
		
		"SCRIPTOPT_NO_INTERRUPT\tconst",
		"SCRIPTOPT_DEBUG\tconst",
		"SCRIPTOPT_NO_RUNAWAY\tconst",
		"SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES\tconst",
		"SCRIPTOPT_AUXSVC_ASSUME_STRING\tconst",
		
		"MSGLEN_VARIABLE\tconst",
		
		"_DEFAULT_UCFONT\tconst",
		"_DEFAULT_UCCOLOR\tconst",
		"JOURNAL_UC_PRINT_NAME\tconst",
		"JOURNAL_UC_PRINT_YOU_SEE\tconst",

		"CRMULTI_IGNORE_MULTIS\tconst",
		"CRMULTI_IGNORE_OBJECTS\tconst",
		"CRMULTI_IGNORE_WORLDZ\tconst",
		"CRMULTI_IGNORE_ALL\tconst",
		"CRMULTI_FACING_NORTH\tconst",
		"CRMULTI_FACING_EAST\tconst",
		"CRMULTI_FACING_SOUTH\tconst",
		"CRMULTI_FACING_WEST\tconst",
		"LH_FLAG_LOS\tconst",
		"LH_FLAG_INCLUDE_HIDDEN\tconst",
		"FP_IGNORE_MOBILES\tconst",
		"FP_IGNORE_DOORS\tconst",
		"VENDOR_SEND_AOS_TOOLTIP\tconst",
		"VENDOR_BUYABLE_CONTAINER_FILTER\tconst",
		"SENDDIALOGMENU_FORCE_OLD\tconst",
		"LISTENPT_HEAR_GHOSTS\tconst",
		"LISTENPT_HEAR_TOKENS\tconst",
		"LISTENPT_NO_SPEECH\tconst",
		"ITEMS_IGNORE_STATICS\tconst",
		"ITEMS_IGNORE_MULTIS\tconst",
		"LIST_IGNORE_Z\tconst",
		"LISTEX_FLAG_NORMAL\tconst",
		"LISTEX_FLAG_HIDDEN\tconst",
		"LISTEX_FLAG_GHOST\tconst",
		"LISTEX_FLAG_CONCEALED\tconst",
		"LISTEX_FLAG_PLAYERS_ONLY\tconst",
		"LISTEX_FLAG_NPC_ONLY\tconst",
		"TILEDATA_FLAG_BACKGROUND\tconst",
		"TILEDATA_FLAG_WEAPON\tconst",
		"TILEDATA_FLAG_TRANSPARENT\tconst",
		"TILEDATA_FLAG_TRANSLUCENT\tconst",
		"TILEDATA_FLAG_WALL\tconst",
		"TILEDATA_FLAG_DAMAGING\tconst",
		"TILEDATA_FLAG_IMPASSABLE\tconst",
		"TILEDATA_FLAG_WET\tconst",
		"TILEDATA_FLAG_UNK\tconst",
		"TILEDATA_FLAG_SURFACE\tconst",
		"TILEDATA_FLAG_BRIDGE\tconst",
		"TILEDATA_FLAG_STACKABLE\tconst",
		"TILEDATA_FLAG_WINDOW\tconst",
		"TILEDATA_FLAG_NOSHOOT\tconst",
		"TILEDATA_FLAG_PREFIX_A\tconst",
		"TILEDATA_FLAG_PREFIX_AN\tconst",
		"TILEDATA_FLAG_INTERNAL\tconst",
		"TILEDATA_FLAG_FOLIAGE\tconst",
		"TILEDATA_FLAG_PARTIAL_HUE\tconst",
		"TILEDATA_FLAG_UNK1\tconst",
		"TILEDATA_FLAG_MAP\tconst",
		"TILEDATA_FLAG_CONTAINER\tconst",
		"TILEDATA_FLAG_WEARABLE\tconst",
		"TILEDATA_FLAG_LIGHTSOURCE\tconst",
		"TILEDATA_FLAG_ANIMATED\tconst",
		"TILEDATA_FLAG_HOVEROVER\tconst",
		"TILEDATA_FLAG_UNK2\tconst",
		"TILEDATA_FLAG_ARMOR\tconst",
		"TILEDATA_FLAG_ROOF\tconst",
		"TILEDATA_FLAG_DOOR\tconst",
		"TILEDATA_FLAG_STAIRBACK\tconst",
		"TILEDATA_FLAG_STAIRRIGHT\tconst",
		"MAPDATA_FLAG_NONE\tconst",
		"MAPDATA_FLAG_MOVELAND\tconst",
		"MAPDATA_FLAG_MOVESEA\tconst",
		"MAPDATA_FLAG_BLOCKSIGHT\tconst",
		"MAPDATA_FLAG_OVERFLIGHT\tconst",
		"MAPDATA_FLAG_ALLOWDROPON\tconst",
		"MAPDATA_FLAG_GRADUAL\tconst",
		"MAPDATA_FLAG_BLOCKING\tconst",
		"MAPDATA_FLAG_MORE_SOLIDS\tconst",
		"MAPDATA_FLAG_WALKBLOCK\tconst",
		"MAPDATA_FLAG_MOVE_FLAGS\tconst",
		"MAPDATA_FLAG_DROP_FLAGS\tconst",
		"MAPDATA_FLAG_ALL\tconst",
		"MOVEOBJECT_NORMAL\tconst",
		"MOVEITEM_IGNOREMOVABLE\tconst",
		"MOVEOBJECT_FORCELOCATION\tconst",
		"JOURNAL_PRINT_NAME\tconst",
		"JOURNAL_PRINT_YOU_SEE\tconst",
		"RESURRECT_FORCELOCATION\tconst",
		"MOVETYPE_PLAYER\tconst",
		"MOVETYPE_COREMOVE\tconst",
		"MOVETYPE_CORECREATE\tconst",
		"INSERT_ADD_ITEM\tconst",
		"INSERT_INCREASE_STACK\tconst",
		"DELETE_BY_PLAYER\tconst",
		"DELETE_BY_SCRIPT\tconst",
		"ENUMERATE_IGNORE_LOCKED\tconst",
		"ENUMERATE_ROOT_ONLY\tconst",
		"FINDSUBSTANCE_IGNORE_LOCKED\tconst",
		"FINDSUBSTANCE_ROOT_ONLY\tconst",
		"FINDSUBSTANCE_FIND_ALL\tconst",
		"TE_CANCEL_DISABLE\tconst",
		"TE_CANCEL_ENABLE\tconst",
		"TE_STYLE_DISABLE\tconst",
		"TE_STYLE_NORMAL\tconst",
		"TE_STYLE_NUMERICAL\tconst",
		"SYSFIND_SEARCH_OFFLINE_MOBILES\tconst",
		"TGTOPT_CHECK_LOS\tconst",
		"TGTOPT_NOCHECK_LOS\tconst",
		"TGTOPT_HARMFUL\tconst",
		"TGTOPT_NEUTRAL\tconst",
		"TGTOPT_HELPFUL\tconst",
		"POLCLASS_UOBJECT\tconst",
		"POLCLASS_ITEM\tconst",
		"POLCLASS_MOBILE\tconst",
		"POLCLASS_NPC\tconst",
		"POLCLASS_LOCKABLE\tconst",
		"POLCLASS_CONTAINER\tconst",
		"POLCLASS_CORPSE\tconst",
		"POLCLASS_DOOR\tconst",
		"POLCLASS_SPELLBOOK\tconst",
		"POLCLASS_MAP\tconst",
		"POLCLASS_MULTI\tconst",
		"POLCLASS_BOAT\tconst",
		"POLCLASS_HOUSE\tconst",
		"POLCLASS_EQUIPMENT\tconst",
		"POLCLASS_ARMOR\tconst",
		"POLCLASS_WEAPON\tconst",
		"RACE_HUMAN\tconst",
		"RACE_ELF\tconst",
		"RACE_GARGOYLE\tconst",
		"_DEFAULT_TEXT_FONT\tconst",
		"_DEFAULT_TEXT_COLOR\tconst",
		"_DEFAULT_TEXT_REQUIREDCMD\tconst",
		"_DEFAULT_REALM\tconst",
		"REALM_BRITANNIA\tconst",
		"REALM_BRITANNIA_ALT\tconst",
		"REALM_ILSHENAR\tconst",
		"REALM_MALAS\tconst",
		"REALM_TOKUNO\tconst",
		"REALM_TERMUR\tconst",
		"ACTION_DIR_FORWARD\tconst",
		"ACTION_DIR_BACKWARD\tconst",
		"ACTION_NOREPEAT\tconst",
		"ACTION_REPEAT\tconst",
		"CANWALK_DIR\tconst",
		"UPDATEMOBILE_RECREATE\tconst",
		"UPDATEMOBILE_UPDATE\tconst",
		"CLOSE_PAPERDOLL\tconst",
		"CLOSE_STATUS\tconst",
		"CLOSE_PROFILE\tconst",
		"CLOSE_CONTAINER\tconst",
		"CHARPROFILE_NO_UNEDITABLE_TEXT\tconst",
		"CHARPROFILE_NO_EDITABLE_TEXT\tconst",

		"DAMAGE_USE_REPSYS\tconst",
		"DAMAGE_NO_REPSYS\tconst",
		"DAMAGE_NO_SHOW\tconst",
		"DAMAGE_SHOW\tconst",
		"DAMAGE_USE_DEFAULT\tconst",
		"RECALC_INTRINSIC_MOD\tconst",
		"RECALC_NO_INTRINSIC_MOD\tconst",
		"RECALC_VITALS\tconst",
		"RECALC_NO_VITALS\tconst",

		"SHARD_NAME\tconst",
		"SHARD_WWWMAIN\tconst",
		"SHARD_WWWRULES\tconst",
		"SHARD_BUGSADDR\tconst",
		"SHARD_HELPADDR\tconst",
		"SHARD_MAILADDR\tconst",
		"SHARD_WIKI\tconst",
		"SHARD_TICKETS\tconst",
		"SHARD_FORUM\tconst",
		
	]
}