{
	"scope": "source.polscript - (string.quoted.double.polscript|string.quoted.single.polscript)",

	"completions": [

		// End
		"endprogram",
		"endfunction",

		// Declaration
		{ "trigger": "const\tdeclare", "contents": "const $1${2: := $3}" },
		{ "trigger": "var\tdeclare", "contents": "var $1${2: := $3}" },

		// Enum
		"enum",
		"endenum",

		// If
		{ "trigger": "if", "contents": "if ($1)" },
		{ "trigger": "elseif", "contents": "elseif ($1)" },
		"else",
		"endif",

		// Case
		{ "trigger": "case", "contents": "case ($1)" },
		"default:",
		"endcase",

		// While
		{ "trigger": "while", "contents": "while ($1)" },
		"endwhile",

		// For
		{ "trigger": "for", "contents": "for ($1 ; $2 ; $3)" },
		{ "trigger": "for to", "contents": "for $1 to $2" },
		"endfor",

		// Foreach
		{ "trigger": "foreach in", "contents": "foreach $1 in $2" },
		"endforeach",

		// Do-dowhile
		{ "trigger": "dowhile", "contents": "dowhile ($1);" },

		// Repeat-until
		"repeat",
		{ "trigger": "until", "contents": "until ($1);" },

		// Keywords
		"continue;",
		"next;",
		"break;",
		{ "trigger": "return", "contents": "return $1;" },

		// Members
		{ "trigger": "banned\tmember", "contents": "banned" },
		{ "trigger": "defaultcmdlevel\tmember", "contents": "defaultcmdlevel" },
		{ "trigger": "enabled\tmember", "contents": "enabled" },
		{ "trigger": "name\tmember", "contents": "name" },
		{ "trigger": "uo_expansion\tmember", "contents": "uo_expansion" },
		{ "trigger": "usernamepasswordhash\tmember", "contents": "usernamepasswordhash" },
		{ "trigger": "ar\tmember", "contents": "ar" },
		{ "trigger": "ar_base\tmember", "contents": "ar_base" },
		{ "trigger": "ar_mod\tmember", "contents": "ar_mod" },
		{ "trigger": "onhitscript\tmember", "contents": "onhitscript" },
		{ "trigger": "ip\tmember", "contents": "ip" },
		{ "trigger": "components\tmember", "contents": "components" },
		{ "trigger": "has_offline_mobiles\tmember", "contents": "has_offline_mobiles" },
		{ "trigger": "hold\tmember", "contents": "hold" },
		{ "trigger": "hull\tmember", "contents": "hull" },
		{ "trigger": "items\tmember", "contents": "items" },
		{ "trigger": "mobiles\tmember", "contents": "mobiles" },
		{ "trigger": "multiid\tmember", "contents": "multiid" },
		{ "trigger": "portplank\tmember", "contents": "portplank" },
		{ "trigger": "rope\tmember", "contents": "rope" },
		{ "trigger": "rudder\tmember", "contents": "rudder" },
		{ "trigger": "sails\tmember", "contents": "sails" },
		{ "trigger": "starboardplank\tmember", "contents": "starboardplank" },
		{ "trigger": "storage\tmember", "contents": "storage" },
		{ "trigger": "tiller\tmember", "contents": "tiller" },
		{ "trigger": "tillerman\tmember", "contents": "tillerman" },
		{ "trigger": "weaponslot\tmember", "contents": "weaponslot" },
		{ "trigger": "wheel\tmember", "contents": "wheel" },
		{ "trigger": "acct\tmember", "contents": "acct" },
		{ "trigger": "acctname\tmember", "contents": "acctname" },
		{ "trigger": "active_skill\tmember", "contents": "active_skill" },
		{ "trigger": "aggressorto\tmember", "contents": "aggressorto" },
		{ "trigger": "attached\tmember", "contents": "attached" },
		{ "trigger": "backpack\tmember", "contents": "backpack" },
		{ "trigger": "candidate_of_party\tmember", "contents": "candidate_of_party" },
		{ "trigger": "carrying_capacity\tmember", "contents": "carrying_capacity" },
		{ "trigger": "carrying_capacity_mod\tmember", "contents": "carrying_capacity_mod" },
		{ "trigger": "casting_spell\tmember", "contents": "casting_spell" },
		{ "trigger": "client\tmember", "contents": "client" },
		{ "trigger": "clientinfo\tmember", "contents": "clientinfo" },
		{ "trigger": "clienttype\tmember", "contents": "clienttype" },
		{ "trigger": "clientver_detail\tmember", "contents": "clientver_detail" },
		{ "trigger": "clientversion\tmember", "contents": "clientversion" },
		{ "trigger": "cmdlevel\tmember", "contents": "cmdlevel" },
		{ "trigger": "cmdlevelstr\tmember", "contents": "cmdlevelstr" },
		{ "trigger": "concealed\tmember", "contents": "concealed" },
		{ "trigger": "connected\tmember", "contents": "connected" },
		{ "trigger": "createdat\tmember", "contents": "createdat" },
		{ "trigger": "criminal\tmember", "contents": "criminal" },
		{ "trigger": "cursor\tmember", "contents": "cursor" },
		{ "trigger": "damage_cold\tmember", "contents": "damage_cold" },
		{ "trigger": "damage_cold_mod\tmember", "contents": "damage_cold_mod" },
		{ "trigger": "damage_energy\tmember", "contents": "damage_energy" },
		{ "trigger": "damage_energy_mod\tmember", "contents": "damage_energy_mod" },
		{ "trigger": "damage_fire\tmember", "contents": "damage_fire" },
		{ "trigger": "damage_fire_mod\tmember", "contents": "damage_fire_mod" },
		{ "trigger": "damage_physical\tmember", "contents": "damage_physical" },
		{ "trigger": "damage_physical_mod\tmember", "contents": "damage_physical_mod" },
		{ "trigger": "damage_poison\tmember", "contents": "damage_poison" },
		{ "trigger": "damage_poison_mod\tmember", "contents": "damage_poison_mod" },
		{ "trigger": "dead\tmember", "contents": "dead" },
		{ "trigger": "deafed\tmember", "contents": "deafed" },
		{ "trigger": "delay_mod\tmember", "contents": "delay_mod" },
		{ "trigger": "evasionchance_mod\tmember", "contents": "evasionchance_mod" },
		{ "trigger": "followers\tmember", "contents": "followers" },
		{ "trigger": "followers_max\tmember", "contents": "followers_max" },
		{ "trigger": "frozen\tmember", "contents": "frozen" },
		{ "trigger": "gender\tmember", "contents": "gender" },
		{ "trigger": "gold\tmember", "contents": "gold" },
		{ "trigger": "guild\tmember", "contents": "guild" },
		{ "trigger": "guildid\tmember", "contents": "guildid" },
		{ "trigger": "gump\tmember", "contents": "gump" },
		{ "trigger": "hidden\tmember", "contents": "hidden" },
		{ "trigger": "hitchance_mod\tmember", "contents": "hitchance_mod" },
		{ "trigger": "house_editing\tmember", "contents": "house_editing" },
		{ "trigger": "last_textcolor\tmember", "contents": "last_textcolor" },
		{ "trigger": "lastcoord\tmember", "contents": "lastcoord" },
		{ "trigger": "lawfullydamaged\tmember", "contents": "lawfullydamaged" },
		{ "trigger": "luck\tmember", "contents": "luck" },
		{ "trigger": "mountedsteps\tmember", "contents": "mountedsteps" },
		{ "trigger": "movecost_run_mod\tmember", "contents": "movecost_run_mod" },
		{ "trigger": "movecost_run_mounted_mod\tmember", "contents": "movecost_run_mounted_mod" },
		{ "trigger": "movecost_walk_mod\tmember", "contents": "movecost_walk_mod" },
		{ "trigger": "movecost_walk_mounted_mod\tmember", "contents": "movecost_walk_mounted_mod" },
		{ "trigger": "movemode\tmember", "contents": "movemode" },
		{ "trigger": "murderer\tmember", "contents": "murderer" },
		{ "trigger": "opponent\tmember", "contents": "opponent" },
		{ "trigger": "paralyzed\tmember", "contents": "paralyzed" },
		{ "trigger": "party\tmember", "contents": "party" },
		{ "trigger": "partycanloot\tmember", "contents": "partycanloot" },
		{ "trigger": "poisoned\tmember", "contents": "poisoned" },
		{ "trigger": "prompt\tmember", "contents": "prompt" },
		{ "trigger": "race\tmember", "contents": "race" },
		{ "trigger": "reportables\tmember", "contents": "reportables" },
		{ "trigger": "resist_cold\tmember", "contents": "resist_cold" },
		{ "trigger": "resist_cold_mod\tmember", "contents": "resist_cold_mod" },
		{ "trigger": "resist_energy\tmember", "contents": "resist_energy" },
		{ "trigger": "resist_energy_mod\tmember", "contents": "resist_energy_mod" },
		{ "trigger": "resist_fire\tmember", "contents": "resist_fire" },
		{ "trigger": "resist_fire_mod\tmember", "contents": "resist_fire_mod" },
		{ "trigger": "resist_physical\tmember", "contents": "resist_physical" },
		{ "trigger": "resist_physical_mod\tmember", "contents": "resist_physical_mod" },
		{ "trigger": "resist_poison\tmember", "contents": "resist_poison" },
		{ "trigger": "resist_poison_mod\tmember", "contents": "resist_poison_mod" },
		{ "trigger": "shield\tmember", "contents": "shield" },
		{ "trigger": "skillcap\tmember", "contents": "skillcap" },
		{ "trigger": "squelched\tmember", "contents": "squelched" },
		{ "trigger": "statcap\tmember", "contents": "statcap" },
		{ "trigger": "stealthsteps\tmember", "contents": "stealthsteps" },
		{ "trigger": "temporally_criminal\tmember", "contents": "temporally_criminal" },
		{ "trigger": "tithing\tmember", "contents": "tithing" },
		{ "trigger": "title_guild\tmember", "contents": "title_guild" },
		{ "trigger": "title_prefix\tmember", "contents": "title_prefix" },
		{ "trigger": "title_race\tmember", "contents": "title_race" },
		{ "trigger": "title_suffix\tmember", "contents": "title_suffix" },
		{ "trigger": "tradewindow\tmember", "contents": "tradewindow" },
		{ "trigger": "trading_with\tmember", "contents": "trading_with" },
		{ "trigger": "truecolor\tmember", "contents": "truecolor" },
		{ "trigger": "trueobjtype\tmember", "contents": "trueobjtype" },
		{ "trigger": "uclang\tmember", "contents": "uclang" },
		{ "trigger": "uo_expansion_client\tmember", "contents": "uo_expansion_client" },
		{ "trigger": "warmode\tmember", "contents": "warmode" },
		{ "trigger": "weapon\tmember", "contents": "weapon" },
		{ "trigger": "last_activity_at\tmember", "contents": "last_activity_at" },
		{ "trigger": "last_packet_at\tmember", "contents": "last_packet_at" },
		{ "trigger": "max_items_mod\tmember", "contents": "max_items_mod" },
		{ "trigger": "max_slots_mod\tmember", "contents": "max_slots_mod" },
		{ "trigger": "max_weight_mod\tmember", "contents": "max_weight_mod" },
		{ "trigger": "no_drop_exception\tmember", "contents": "no_drop_exception" },
		{ "trigger": "corpsetype\tmember", "contents": "corpsetype" },
		{ "trigger": "ownerserial\tmember", "contents": "ownerserial" },
		{ "trigger": "isopen\tmember", "contents": "isopen" },
		{ "trigger": "intrinsic\tmember", "contents": "intrinsic" },
		{ "trigger": "errortext\tmember", "contents": "errortext" },
		{ "trigger": "allyguilds\tmember", "contents": "allyguilds" },
		{ "trigger": "enemyguilds\tmember", "contents": "enemyguilds" },
		{ "trigger": "members\tmember", "contents": "members" },
		{ "trigger": "custom\tmember", "contents": "custom" },
		{ "trigger": "house_parts\tmember", "contents": "house_parts" },
		{ "trigger": "amount\tmember", "contents": "amount" },
		{ "trigger": "buyprice\tmember", "contents": "buyprice" },
		{ "trigger": "container\tmember", "contents": "container" },
		{ "trigger": "decayat\tmember", "contents": "decayat" },
		{ "trigger": "desc\tmember", "contents": "desc" },
		{ "trigger": "doubleclickrange\tmember", "contents": "doubleclickrange" },
		{ "trigger": "equipscript\tmember", "contents": "equipscript" },
		{ "trigger": "getgottenby\tmember", "contents": "getgottenby" },
		{ "trigger": "house\tmember", "contents": "house" },
		{ "trigger": "hp\tmember", "contents": "hp" },
		{ "trigger": "insured\tmember", "contents": "insured" },
		{ "trigger": "invisible\tmember", "contents": "invisible" },
		{ "trigger": "item_count\tmember", "contents": "item_count" },
		{ "trigger": "layer\tmember", "contents": "layer" },
		{ "trigger": "maxhp\tmember", "contents": "maxhp" },
		{ "trigger": "maxhp_mod\tmember", "contents": "maxhp_mod" },
		{ "trigger": "movable\tmember", "contents": "movable" },
		{ "trigger": "name_suffix\tmember", "contents": "name_suffix" },
		{ "trigger": "newbie\tmember", "contents": "newbie" },
		{ "trigger": "no_drop\tmember", "contents": "no_drop" },
		{ "trigger": "process\tmember", "contents": "process" },
		{ "trigger": "quality\tmember", "contents": "quality" },
		{ "trigger": "saveonexit\tmember", "contents": "saveonexit" },
		{ "trigger": "sellprice\tmember", "contents": "sellprice" },
		{ "trigger": "stackable\tmember", "contents": "stackable" },
		{ "trigger": "tile_layer\tmember", "contents": "tile_layer" },
		{ "trigger": "unequipscript\tmember", "contents": "unequipscript" },
		{ "trigger": "usescript\tmember", "contents": "usescript" },
		{ "trigger": "locked\tmember", "contents": "locked" },
		{ "trigger": "editable\tmember", "contents": "editable" },
		{ "trigger": "facetid\tmember", "contents": "facetid" },
		{ "trigger": "gumpheight\tmember", "contents": "gumpheight" },
		{ "trigger": "gumpwidth\tmember", "contents": "gumpwidth" },
		{ "trigger": "xeast\tmember", "contents": "xeast" },
		{ "trigger": "xwest\tmember", "contents": "xwest" },
		{ "trigger": "ynorth\tmember", "contents": "ynorth" },
		{ "trigger": "ysouth\tmember", "contents": "ysouth" },
		{ "trigger": "footprint\tmember", "contents": "footprint" },
		{ "trigger": "alignment\tmember", "contents": "alignment" },
		{ "trigger": "eventmask\tmember", "contents": "eventmask" },
		{ "trigger": "master\tmember", "contents": "master" },
		{ "trigger": "npctemplate\tmember", "contents": "npctemplate" },
		{ "trigger": "run_speed\tmember", "contents": "run_speed" },
		{ "trigger": "script\tmember", "contents": "script" },
		{ "trigger": "speech_color\tmember", "contents": "speech_color" },
		{ "trigger": "speech_font\tmember", "contents": "speech_font" },
		{ "trigger": "use_adjustments\tmember", "contents": "use_adjustments" },
		{ "trigger": "npcdesc\tmember", "contents": "npcdesc" },
		{ "trigger": "supports_http\tmember", "contents": "supports_http" },
		{ "trigger": "version\tmember", "contents": "version" },
		{ "trigger": "candidates\tmember", "contents": "candidates" },
		{ "trigger": "leader\tmember", "contents": "leader" },
		{ "trigger": "all_scripts\tmember", "contents": "all_scripts" },
		{ "trigger": "bytes_received\tmember", "contents": "bytes_received" },
		{ "trigger": "bytes_sent\tmember", "contents": "bytes_sent" },
		{ "trigger": "combat_operations_per_min\tmember", "contents": "combat_operations_per_min" },
		{ "trigger": "compiledate\tmember", "contents": "compiledate" },
		{ "trigger": "compiletime\tmember", "contents": "compiletime" },
		{ "trigger": "error_creations_per_min\tmember", "contents": "error_creations_per_min" },
		{ "trigger": "events_per_min\tmember", "contents": "events_per_min" },
		{ "trigger": "instr_per_min\tmember", "contents": "instr_per_min" },
		{ "trigger": "iostats\tmember", "contents": "iostats" },
		{ "trigger": "itemcount\tmember", "contents": "itemcount" },
		{ "trigger": "memory_usage\tmember", "contents": "memory_usage" },
		{ "trigger": "mobilecount\tmember", "contents": "mobilecount" },
		{ "trigger": "packages\tmember", "contents": "packages" },
		{ "trigger": "pkt_status\tmember", "contents": "pkt_status" },
		{ "trigger": "priority_divide\tmember", "contents": "priority_divide" },
		{ "trigger": "queued_iostats\tmember", "contents": "queued_iostats" },
		{ "trigger": "running_scripts\tmember", "contents": "running_scripts" },
		{ "trigger": "script_profiles\tmember", "contents": "script_profiles" },
		{ "trigger": "scripts_late_per_min\tmember", "contents": "scripts_late_per_min" },
		{ "trigger": "scripts_ontime_per_min\tmember", "contents": "scripts_ontime_per_min" },
		{ "trigger": "skill_checks_per_min\tmember", "contents": "skill_checks_per_min" },
		{ "trigger": "sysload\tmember", "contents": "sysload" },
		{ "trigger": "sysload_severity\tmember", "contents": "sysload_severity" },
		{ "trigger": "systime\tmember", "contents": "systime" },
		{ "trigger": "tasks_late_per_min\tmember", "contents": "tasks_late_per_min" },
		{ "trigger": "tasks_late_ticks_per_min\tmember", "contents": "tasks_late_ticks_per_min" },
		{ "trigger": "tasks_ontime_per_min\tmember", "contents": "tasks_ontime_per_min" },
		{ "trigger": "uptime\tmember", "contents": "uptime" },
		{ "trigger": "verstr\tmember", "contents": "verstr" },
		{ "trigger": "attached_to\tmember", "contents": "attached_to" },
		{ "trigger": "call_depth\tmember", "contents": "call_depth" },
		{ "trigger": "consec_cycles\tmember", "contents": "consec_cycles" },
		{ "trigger": "controller\tmember", "contents": "controller" },
		{ "trigger": "globals\tmember", "contents": "globals" },
		{ "trigger": "instr_cycles\tmember", "contents": "instr_cycles" },
		{ "trigger": "num_globals\tmember", "contents": "num_globals" },
		{ "trigger": "pc\tmember", "contents": "pc" },
		{ "trigger": "pid\tmember", "contents": "pid" },
		{ "trigger": "sleep_cycles\tmember", "contents": "sleep_cycles" },
		{ "trigger": "state\tmember", "contents": "state" },
		{ "trigger": "var_size\tmember", "contents": "var_size" },
		{ "trigger": "count\tmember", "contents": "count" },
		{ "trigger": "totalcount\tmember", "contents": "totalcount" },
		{ "trigger": "color\tmember", "contents": "color" },
		{ "trigger": "dirty\tmember", "contents": "dirty" },
		{ "trigger": "facing\tmember", "contents": "facing" },
		{ "trigger": "graphic\tmember", "contents": "graphic" },
		{ "trigger": "height\tmember", "contents": "height" },
		{ "trigger": "multi\tmember", "contents": "multi" },
		{ "trigger": "objtype\tmember", "contents": "objtype" },
		{ "trigger": "realm\tmember", "contents": "realm" },
		{ "trigger": "serial\tmember", "contents": "serial" },
		{ "trigger": "specific_name\tmember", "contents": "specific_name" },
		{ "trigger": "weight\tmember", "contents": "weight" },
		{ "trigger": "x\tmember", "contents": "x" },
		{ "trigger": "y\tmember", "contents": "y" },
		{ "trigger": "z\tmember", "contents": "z" },
		{ "trigger": "attribute\tmember", "contents": "attribute" },
		{ "trigger": "dmg_mod\tmember", "contents": "dmg_mod" },
		{ "trigger": "hitscript\tmember", "contents": "hitscript" },
		{ "trigger": "speed_mod\tmember", "contents": "speed_mod" },

		// Methods
		{ "trigger": "addcharacter\tmethod", "contents": "addcharacter(${1:index := 0})" },
		{ "trigger": "ban\tmethod", "contents": "ban()" },
		{ "trigger": "checkpassword\tmethod", "contents": "checkpassword(${1:pass})" },
		{ "trigger": "delete\tmethod", "contents": "delete()" },
		{ "trigger": "deletecharacter\tmethod", "contents": "deletecharacter(${1:slot})" },
		{ "trigger": "disable\tmethod", "contents": "disable()" },
		{ "trigger": "enable\tmethod", "contents": "enable()" },
		{ "trigger": "eraseprop\tmethod", "contents": "eraseprop(${1:propname})" },
		{ "trigger": "get_member\tmethod", "contents": "get_member(${1:membername})" },
		{ "trigger": "getcharacter\tmethod", "contents": "getcharacter(${1:slot})" },
		{ "trigger": "getprop\tmethod", "contents": "getprop(${1:propname})" },
		{ "trigger": "move_char\tmethod", "contents": "move_char(${1:destacctname}, ${2:slot})" },
		{ "trigger": "propnames\tmethod", "contents": "propnames()" },
		{ "trigger": "set_uo_expansion\tmethod", "contents": "set_uo_expansion(${1:expansion})" },
		{ "trigger": "setdefaultcmdlevel\tmethod", "contents": "setdefaultcmdlevel(${1:number})" },
		{ "trigger": "setname\tmethod", "contents": "setname(${1:newname})" },
		{ "trigger": "setpassword\tmethod", "contents": "setpassword(${1:newpass})" },
		{ "trigger": "setprop\tmethod", "contents": "setprop(${1:propname}, ${2:propval})" },
		{ "trigger": "split\tmethod", "contents": "split(${1:newacctname}, ${2:slot := 1})" },
		{ "trigger": "unban\tmethod", "contents": "unban()" },
		{ "trigger": "append\tmethod", "contents": "append(${1:object})" },
		{ "trigger": "cycle\tmethod", "contents": "cycle(${1:count := 1})" },
		{ "trigger": "erase\tmethod", "contents": "erase(${1:index})" },
		{ "trigger": "exists\tmethod", "contents": "exists(${1:index})" },
		{ "trigger": "insert\tmethod", "contents": "insert(${1:index}, ${2:object})" },
		{ "trigger": "randomentry\tmethod", "contents": "randomentry()" },
		{ "trigger": "reverse\tmethod", "contents": "reverse()" },
		{ "trigger": "shrink\tmethod", "contents": "shrink(${1:index})" },
		{ "trigger": "size\tmethod", "contents": "size()" },
		{ "trigger": "sort\tmethod", "contents": "sort(${1:sub_index := 0})" },
		{ "trigger": "transmit\tmethod", "contents": "transmit(${1:o})" },
		{ "trigger": "close\tmethod", "contents": "close()" },
		{ "trigger": "flush\tmethod", "contents": "flush()" },
		{ "trigger": "getint16\tmethod", "contents": "getint16()" },
		{ "trigger": "getint32\tmethod", "contents": "getint32()" },
		{ "trigger": "getint8\tmethod", "contents": "getint8()" },
		{ "trigger": "getsint16\tmethod", "contents": "getsint16()" },
		{ "trigger": "getsint32\tmethod", "contents": "getsint32()" },
		{ "trigger": "getsint8\tmethod", "contents": "getsint8()" },
		{ "trigger": "getstring\tmethod", "contents": "getstring(${1:length})" },
		{ "trigger": "peek\tmethod", "contents": "peek()" },
		{ "trigger": "seek\tmethod", "contents": "seek(${1:offset}, ${2:seekdir})" },
		{ "trigger": "setint16\tmethod", "contents": "setint16()" },
		{ "trigger": "setint32\tmethod", "contents": "setint32()" },
		{ "trigger": "setint8\tmethod", "contents": "setint8()" },
		{ "trigger": "setsint16\tmethod", "contents": "setsint16()" },
		{ "trigger": "setsint32\tmethod", "contents": "setsint32()" },
		{ "trigger": "setsint8\tmethod", "contents": "setsint8()" },
		{ "trigger": "setstring\tmethod", "contents": "setstring(${1:string}, ${1:nullterminate := 0})" },
		{ "trigger": "tell\tmethod", "contents": "tell()" },
		{ "trigger": "move_offline_mobiles\tmethod", "contents": "move_offline_mobiles(${1:x}, ${2:y}, ${3:z}, ${4:realm := :\"\"})" },
		{ "trigger": "addBuff\tmethod", "contents": "addBuff(${1:icon_d}, ${2:duration}, ${3:cliloc_name}, ${4:cliloc_descr}, ${5:arguments := :\"\"})" },
		{ "trigger": "attack_once\tmethod", "contents": "attack_once(${1:opp := 0})" },
		{ "trigger": "clearAggressorTo\tmethod", "contents": "clearAggressorTo(${1:chr})" },
		{ "trigger": "clearBuffs\tmethod", "contents": "clearBuffs()" },
		{ "trigger": "clearLawfullydamagedTo\tmethod", "contents": "clearLawfullydamagedTo(${1:chr})" },
		{ "trigger": "cleargottenitem\tmethod", "contents": "cleargottenitem()" },
		{ "trigger": "compareversion\tmethod", "contents": "compareversion(${1:version})" },
		{ "trigger": "deaf\tmethod", "contents": "deaf(${1:duration})" },
		{ "trigger": "delBuff\tmethod", "contents": "delBuff(${1:icon_id})" },
		{ "trigger": "disableSkillsFor\tmethod", "contents": "disableSkillsFor(${1:duration})" },
		{ "trigger": "enable(priv)\tmethod", "contents": "enable(${1:setting})" },
		{ "trigger": "enabled\tmethod", "contents": "enabled(${1:setting})" },
		{ "trigger": "getcorpse\tmethod", "contents": "getcorpse()" },
		{ "trigger": "getgottenitem\tmethod", "contents": "getgottenitem()" },
		{ "trigger": "kill(killer)\tmethod", "contents": "kill(${1:killer := 0})" },
		{ "trigger": "privileges\tmethod", "contents": "privileges()" },
		{ "trigger": "removereportable\tmethod", "contents": "removereportable(${1:serial}, ${2:gameclock})" },
		{ "trigger": "setAggressorTo\tmethod", "contents": "setAggressorTo(${1:chr})" },
		{ "trigger": "setLawfullydamagedTo\tmethod", "contents": "setLawfullydamagedTo(${1:chr})" },
		{ "trigger": "setcmdlevel\tmethod", "contents": "setcmdlevel(${1:cmdlevel})" },
		{ "trigger": "setcriminal\tmethod", "contents": "setcriminal(${1:level})" },
		{ "trigger": "setfacing\tmethod", "contents": "setfacing(${1:direction}, ${1:flags := FACE_NORMAL})" },
		{ "trigger": "setlightlevel\tmethod", "contents": "setlightlevel(${1:level}, ${2:duration})" },
		{ "trigger": "setmurderer\tmethod", "contents": "setmurderer($1)" },
		{ "trigger": "setparalyzed\tmethod", "contents": "setparalyzed($1)" },
		{ "trigger": "setpoisoned\tmethod", "contents": "setpoisoned($1)" },
		{ "trigger": "setseason\tmethod", "contents": "setseason(${1:season_id}, ${2:playsound})" },
		{ "trigger": "setswingtimer\tmethod", "contents": "setswingtimer($1)" },
		{ "trigger": "setwarmode\tmethod", "contents": "setwarmode($1)" },
		{ "trigger": "spendgold\tmethod", "contents": "spendgold(${1:amount})" },
		{ "trigger": "squelch\tmethod", "contents": "squelch(${1:duration})" },
		{ "trigger": "CreateElement\tmethod", "contents": "CreateElement(${1:key})" },
		{ "trigger": "DeleteElement\tmethod", "contents": "DeleteElement(${1:key})" },
		{ "trigger": "FindElement\tmethod", "contents": "FindElement(${1:key})" },
		{ "trigger": "keys\tmethod", "contents": "keys()" },
		{ "trigger": "erase(key)\tmethod", "contents": "erase(${1:key})" },
		{ "trigger": "exists(key)\tmethod", "contents": "exists(${1:key})" },
		{ "trigger": "insert(key)\tmethod", "contents": "insert(${1:key}, ${2:object})" },
		{ "trigger": "open\tmethod", "contents": "open()" },
		{ "trigger": "toggle\tmethod", "contents": "toggle()" },
		{ "trigger": "addallyguild\tmethod", "contents": "addallyguild($1)" },
		{ "trigger": "addenemyguild\tmethod", "contents": "addenemyguild($1)" },
		{ "trigger": "addmember\tmethod", "contents": "addmember($1)" },
		{ "trigger": "isallyguild\tmethod", "contents": "isallyguild($1)" },
		{ "trigger": "isenemyguild\tmethod", "contents": "isenemyguild($1)" },
		{ "trigger": "ismember\tmethod", "contents": "ismember($1)" },
		{ "trigger": "removeallyguild\tmethod", "contents": "removeallyguild($1)" },
		{ "trigger": "removeenemyguild\tmethod", "contents": "removeenemyguild($1)" },
		{ "trigger": "removemember\tmethod", "contents": "removemember($1)" },
		{ "trigger": "acceptcommit\tmethod", "contents": "acceptcommit(${1:chr}, ${2:commit := 1})" },
		{ "trigger": "add_component\tmethod", "contents": "add_component($1)" },
		{ "trigger": "addhousepart\tmethod", "contents": "addhousepart(${1:graphic}, ${2:xoffset}, ${3:yoffset}, ${4:z})" },
		{ "trigger": "cancelediting\tmethod", "contents": "cancelediting(${1:chr}, ${2:drop_changes := 1})" },
		{ "trigger": "erase_component\tmethod", "contents": "erase_component($1)" },
		{ "trigger": "erasehousepart\tmethod", "contents": "erasehousepart(${1:graphic}, ${2:xoffset}, ${3:yoffset}, ${4:z})" },
		{ "trigger": "setcustom\tmethod", "contents": "setcustom(${1:custom})" },
		{ "trigger": "hasExistingStack\tmethod", "contents": "hasExistingStack(${1:container})" },
		{ "trigger": "splitStackAt\tmethod", "contents": "splitStackAt(${1:x}, ${2:y}, ${3:z}, ${4:realm}, ${5:amount})" },
		{ "trigger": "splitStackInto\tmethod", "contents": "splitStackInto(${1:container}, ${2:amount})" },
		{ "trigger": "appendpin\tmethod", "contents": "appendpin(${1:x}, ${2:y})" },
		{ "trigger": "erasepin\tmethod", "contents": "erasepin(${1:index})" },
		{ "trigger": "getpins\tmethod", "contents": "getpins()" },
		{ "trigger": "insertpin\tmethod", "contents": "insertpin(${1:index}, ${2:x}, ${3:y})" },
		{ "trigger": "setmaster\tmethod", "contents": "setmaster(${1:master})" },
		{ "trigger": "GetInt16(offset)\tmethod", "contents": "GetInt16(${1:offset})" },
		{ "trigger": "GetInt16Flipped\tmethod", "contents": "GetInt16Flipped(${1:offset})" },
		{ "trigger": "GetInt32(offset)\tmethod", "contents": "GetInt32(${1:offset})" },
		{ "trigger": "GetInt32Flipped\tmethod", "contents": "GetInt32Flipped(${1:offset})" },
		{ "trigger": "GetInt8(offset)\tmethod", "contents": "GetInt8(${1:offset})" },
		{ "trigger": "GetSize\tmethod", "contents": "GetSize()" },
		{ "trigger": "GetString(offset)\tmethod", "contents": "GetString(${1:offset}, ${2:length})" },
		{ "trigger": "GetUnicodeString\tmethod", "contents": "GetUnicodeString(${1:offset}, ${2:length})" },
		{ "trigger": "GetUnicodeStringFlipped\tmethod", "contents": "GetUnicodeStringFlipped(${1:offset}, ${2:length})" },
		{ "trigger": "SendAreaPacket\tmethod", "contents": "SendAreaPacket(${1:x}, ${2:y}, ${3:range}, ${4:realm})" },
		{ "trigger": "SendPacket\tmethod", "contents": "SendPacket($1)" },
		{ "trigger": "SetInt16(offset)\tmethod", "contents": "SetInt16(${1:offset}, ${2:value})" },
		{ "trigger": "SetInt16Flipped\tmethod", "contents": "SetInt16Flipped(${1:offset}, ${2:value})" },
		{ "trigger": "SetInt32(offset)\tmethod", "contents": "SetInt32(${1:offset}, ${2:value})" },
		{ "trigger": "SetInt32Flipped\tmethod", "contents": "SetInt32Flipped(${1:offset}, ${2:value})" },
		{ "trigger": "SetInt8(offset)\tmethod", "contents": "SetInt8(${1:offset}, ${2:value})" },
		{ "trigger": "SetSize\tmethod", "contents": "SetSize(${1:newsize})" },
		{ "trigger": "SetString(offset)\tmethod", "contents": "SetString(${1:offset}, ${2:string}, ${3:nullterminate := 0})" },
		{ "trigger": "SetUnicodeString\tmethod", "contents": "SetUnicodeString(${1:offset}, ${2:character}, ${3:nullterminate := 0})" },
		{ "trigger": "SetUnicodeStringFlipped\tmethod", "contents": "SetUnicodeStringFlipped(${1:offset}, ${2:character}, ${3:nullterminate := 0})" },
		{ "trigger": "addcandidate\tmethod", "contents": "addcandidate($1)" },
		{ "trigger": "removecandidate\tmethod", "contents": "removecandidate($1)" },
		{ "trigger": "setleader\tmethod", "contents": "setleader($1)" },
		{ "trigger": "clear_script_profile_counters\tmethod", "contents": "clear_script_profile_counters()" },
		{ "trigger": "log_profile\tmethod", "contents": "log_profile(${1:clear := 0})" },
		{ "trigger": "set_priority_divide\tmethod", "contents": "set_priority_divide(${1:divide})" },
		{ "trigger": "clear_event_queue\tmethod", "contents": "clear_event_queue()" },
		{ "trigger": "kill\tmethod", "contents": "kill()" },
		{ "trigger": "loadsymbols\tmethod", "contents": "loadsymbols()" },
		{ "trigger": "sendevent\tmethod", "contents": "sendevent(${1:event})" },
		{ "trigger": "AddSpell\tmethod", "contents": "AddSpell(${1:spellid})" },
		{ "trigger": "HasSpell\tmethod", "contents": "HasSpell(${1:spellid})" },
		{ "trigger": "RemoveSpell\tmethod", "contents": "RemoveSpell(${1:spellid})" },
		{ "trigger": "Spells\tmethod", "contents": "Spells()" },
		{ "trigger": "find\tmethod", "contents": "find(${1:search}, ${2:start := 0})" },
		{ "trigger": "format\tmethod", "contents": "format(${1:args})" },
		{ "trigger": "join\tmethod", "contents": "join(${1:array})" },
		{ "trigger": "length\tmethod", "contents": "length()" },
		{ "trigger": "lower\tmethod", "contents": "lower()" },
		{ "trigger": "upper\tmethod", "contents": "upper()" },
		{ "trigger": "isa\tmethod", "contents": "isa(${1:POLCLASS_})" },
		{ "trigger": "set_member\tmethod", "contents": "set_member(${1:membername}, ${2:value})" },

		// Functions
		{ "trigger": "AlterAttributeTemporaryMod\tfunc", "contents": "AlterAttributeTemporaryMod(${1:character}, ${2:attrname}, ${3:delta_tenths})" },
		{ "trigger": "BaseSkillToRawSkill\tfunc", "contents": "BaseSkillToRawSkill(${1:baseskill})" },
		{ "trigger": "CheckSkill\tfunc", "contents": "CheckSkill(${1:character}, ${2:skillid}, ${3:difficulty}, ${4:points})" },
		{ "trigger": "GetAttribute\tfunc", "contents": "GetAttribute(${1:character}, ${2:attrname})" },
		{ "trigger": "GetAttributeBaseValue\tfunc", "contents": "GetAttributeBaseValue(${1:character}, ${2:attrname})" },
		{ "trigger": "GetAttributeCap\tfunc", "contents": "GetAttributeCap(${1:character}, ${2:attrname})" },
		{ "trigger": "GetAttributeDefaultCap\tfunc", "contents": "GetAttributeDefaultCap(${1:attrname})" },
		{ "trigger": "GetAttributeIntrinsicMod\tfunc", "contents": "GetAttributeIntrinsicMod(${1:character}, ${2:attrname})" },
		{ "trigger": "GetAttributeLock\tfunc", "contents": "GetAttributeLock(${1:character}, ${2:attrname})" },
		{ "trigger": "GetAttributeName\tfunc", "contents": "GetAttributeName(${1:alias_name})" },
		{ "trigger": "GetAttributeTemporaryMod\tfunc", "contents": "GetAttributeTemporaryMod(${1:character}, ${2:attrname})" },
		{ "trigger": "RawSkillToBaseSkill\tfunc", "contents": "RawSkillToBaseSkill(${1:rawskill})" },
		{ "trigger": "SetAttributeBaseValue\tfunc", "contents": "SetAttributeBaseValue(${1:character}, ${2:attrname}, ${3:basevalue_tenths})" },
		{ "trigger": "SetAttributeCap\tfunc", "contents": "SetAttributeCap(${1:character}, ${2:attrname}, ${3:capvalue})" },
		{ "trigger": "SetAttributeLock\tfunc", "contents": "SetAttributeLock(${1:character}, ${2:attrname}, ${3:lockstate})" },
		{ "trigger": "SetAttributeTemporaryMod\tfunc", "contents": "SetAttributeTemporaryMod(${1:character}, ${2:attrname}, ${3:tempmod_tenths})" },

		{ "trigger": "Bin\tfunc", "contents": "Bin(${1:number})" },
		{ "trigger": "CAsc\tfunc", "contents": "CAsc(${1:str})" },
		{ "trigger": "CAscZ\tfunc", "contents": "CAscZ(${1:str}, ${2:nullterm := 0})" },
		{ "trigger": "CChr\tfunc", "contents": "CChr(${1:number})" },
		{ "trigger": "CChrZ\tfunc", "contents": "CChrZ(${1:intarray}, ${2:break_at_first_null := 0})" },
		{ "trigger": "CDbl\tfunc", "contents": "CDbl(${1:expr})" },
		{ "trigger": "CInt\tfunc", "contents": "CInt(${1:expr})" },
		{ "trigger": "CStr\tfunc", "contents": "CStr(${1:expr})" },
		{ "trigger": "Compare\tfunc", "contents": "Compare(str1 := $1, str2 := $2, pos1_start := ${3:0}, pos1_end := ${4:0}, pos2_start := ${5:0}, pos2_end := ${6:0})" },
		{ "trigger": "Find\tfunc", "contents": "Find(${1:str}, ${2:search}, ${3:start})" },
		{ "trigger": "Hex\tfunc", "contents": "Hex(${1:number})" },
		{ "trigger": "Len\tfunc", "contents": "Len(${1:str_or_array})" },
		{ "trigger": "Lower\tfunc", "contents": "Lower(${1:str})" },
		{ "trigger": "Pack\tfunc", "contents": "Pack(${1:expr})" },
		{ "trigger": "SizeOf\tfunc", "contents": "SizeOf(${1:expr})" },
		{ "trigger": "SplitWords\tfunc", "contents": "SplitWords(${1:str}, ${2:delimiter := :\" \"}, ${3:max_split := 1})" },
		{ "trigger": "StrReplace\tfunc", "contents": "StrReplace(${1:str}, ${2:to_replace}, ${3:replace_with})" },
		{ "trigger": "SubStr\tfunc", "contents": "SubStr(${1:str}, ${2:start}, ${3:length})" },
		{ "trigger": "SubStrReplace\tfunc", "contents": "SubStrReplace(${1:str}, ${2:replace_with}, ${3:start}, ${4:length := 0})" },
		{ "trigger": "Trim\tfunc", "contents": "Trim(${1:str}, ${2:type := TRIM_BOTH}, ${3:to_trim := :\" \"})" },
		{ "trigger": "TypeOf\tfunc", "contents": "TypeOf(${1:expr})" },
		{ "trigger": "TypeOfInt\tfunc", "contents": "TypeOfInt(${1:expr})" },
		{ "trigger": "Unpack\tfunc", "contents": "Unpack(${1:str})" },
		{ "trigger": "Upper\tfunc", "contents": "Upper(${1:str})" },
		
		{ "trigger": "Print\tfunc", "contents": "Print(${1:anything})" },
		
		{ "trigger": "BoatFromItem\tfunc", "contents": "BoatFromItem(${1:item})" },
		{ "trigger": "MoveBoat\tfunc", "contents": "MoveBoat(${1:boat}, ${2:facing}, ${3:speed := BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatRelative\tfunc", "contents": "MoveBoatRelative(${1:boat}, ${2:direction}, ${3:speed := BOAT_SPEED_ONE_TILE})" },
		{ "trigger": "MoveBoatXY\tfunc", "contents": "MoveBoatXY(${1:boat}, ${2:x}, ${3:y})" },
		{ "trigger": "RegisterItemWithBoat\tfunc", "contents": "RegisterItemWithBoat(${1:boat}, ${1:item})" },
		{ "trigger": "SystemFindBoatBySerial\tfunc", "contents": "SystemFindBoatBySerial(${1:serial})" },
		{ "trigger": "TurnBoat\tfunc", "contents": "TurnBoat(${1:boat}, ${1:direction})" },
		
		{ "trigger": "AppendConfigFileElem\tfunc", "contents": "AppendConfigFileElem(${1:filename}, ${2:elemtype}, ${3:elemkey}, ${4:properties})" },
		{ "trigger": "FindConfigElem\tfunc", "contents": "FindConfigElem(${1:config_file}, ${2:key})" },
		{ "trigger": "GetConfigInt\tfunc", "contents": "GetConfigInt(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigIntArray\tfunc", "contents": "GetConfigIntArray(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigIntKeys\tfunc", "contents": "GetConfigIntKeys(${1:config_file})" },
		{ "trigger": "GetConfigMaxIntKey\tfunc", "contents": "GetConfigMaxIntKey(${1:config_file})" },
		{ "trigger": "GetConfigReal\tfunc", "contents": "GetConfigReal(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigString\tfunc", "contents": "GetConfigString(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigStringArray\tfunc", "contents": "GetConfigStringArray(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigStringDictionary\tfunc", "contents": "GetConfigStringDictionary(${1:element}, ${2:property_name})" },
		{ "trigger": "GetConfigStringKeys\tfunc", "contents": "GetConfigStringKeys(${1:config_file})" },
		{ "trigger": "ListConfigElemProps\tfunc", "contents": "ListConfigElemProps(${1:element})" },
		{ "trigger": "LoadTusScpFile\tfunc", "contents": "LoadTusScpFile(${1:filename})" },
		{ "trigger": "ReadConfigFile\tfunc", "contents": "ReadConfigFile(${1:filename})" },
		{ "trigger": "UnloadConfigFile\tfunc", "contents": "UnloadConfigFile(${1:filename})" },

		{ "trigger": "PrintTextAboveCL\tfunc", "contents": "PrintTextAboveCL(${1:character}, ${2:cliloc_num}, ${3:uc_text := array}, ${4:font := _DEFAULT_CLFONT}, ${5:color := _DEFAULT_CLCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateCL\tfunc", "contents": "PrintTextAbovePrivateCL(${1:character}, ${2:object}, ${3:cliloc_num}, ${4:uc_text := array}, ${5:font := _DEFAULT_CLFONT}, ${6:color := _DEFAULT_CLCOLOR})" },
		{ "trigger": "SendSysMessageCL\tfunc", "contents": "SendSysMessageCL(${1:character}, ${2:cliloc_num}, ${3:uc_text := array}, ${4:font := _DEFAULT_CLFONT}, ${5:color := _DEFAULT_CLCOLOR})" },

		{ "trigger": "CreateDataFile\tfunc", "contents": "CreateDataFile(${1:filespec}, ${2:flags := DF_KEYTYPE_STRING})" },
		{ "trigger": "ListDataFiles\tfunc", "contents": "ListDataFiles()" },
		{ "trigger": "OpenDataFile\tfunc", "contents": "OpenDataFile(${1:filespec})" },
		{ "trigger": "UnloadDataFile\tfunc", "contents": "UnloadDataFile(${1:filespec})" },

		{ "trigger": "AppendToFile\tfunc", "contents": "AppendToFile(${1:filename}, ${2:textlines})" },
		{ "trigger": "CreateDirectory\tfunc", "contents": "CreateDirectory(${1:dirname})" },
		{ "trigger": "CreateXmlFile\tfunc", "contents": "CreateXmlFile()" },
		{ "trigger": "FileExists\tfunc", "contents": "FileExists(${1:filename})" },
		{ "trigger": "ListDirectory\tfunc", "contents": "ListDirectory(${1:dirname}, ${2:extension := LISTDIR_ALL_FILES}, ${3:listdirs := LISTDIR_DONT_LIST_DIRS})" },
		{ "trigger": "LogToFile\tfunc", "contents": "LogToFile(${1:filename}, ${2:line}, ${3:flags := 0})" },
		{ "trigger": "OpenBinaryFile\tfunc", "contents": "OpenBinaryFile(${1:filename}, ${2:mode := OPENMODE_IN}, ${3:endian := LITTLE_ENDIAN})" },
		{ "trigger": "OpenXmlFile\tfunc", "contents": "OpenXmlFile(${1:filename})" },
		{ "trigger": "ReadFile\tfunc", "contents": "ReadFile(${1:filename})" },
		{ "trigger": "WriteFile\tfunc", "contents": "WriteFile(${1:filename}, ${2:textcontents})" },
		
		{ "trigger": "CreateGuild\tfunc", "contents": "CreateGuild()" },
		{ "trigger": "DestroyGuild\tfunc", "contents": "DestroyGuild(${1:guild})" },
		{ "trigger": "FindGuild\tfunc", "contents": "FindGuild(${1:guildid})" },
		{ "trigger": "ListGuilds\tfunc", "contents": "ListGuilds()" },
		
		{ "trigger": "QueryIP\tfunc", "contents": "QueryIP()" },
		{ "trigger": "QueryParam\tfunc", "contents": "QueryParam(${1:param})" },
		{ "trigger": "WriteHtml\tfunc", "contents": "WriteHtml(${1:html})" },
		{ "trigger": "WriteHtmlRaw\tfunc", "contents": "WriteHtmlRaw(${1:html})" },
		
		{ "trigger": "ACos\tfunc", "contents": "ACos(${1:x})" },
		{ "trigger": "ASin\tfunc", "contents": "ASin(${1:x})" },
		{ "trigger": "ATan\tfunc", "contents": "ATan(${1:x})" },
		{ "trigger": "Abs\tfunc", "contents": "Abs(${1:x})" },
		{ "trigger": "Ceil\tfunc", "contents": "Ceil(${1:x})" },
		{ "trigger": "ConstE\tfunc", "contents": "ConstE()" },
		{ "trigger": "ConstPi\tfunc", "contents": "ConstPi()" },
		{ "trigger": "Cos\tfunc", "contents": "Cos(${1:x})" },
		{ "trigger": "DegToRad\tfunc", "contents": "DegToRad(${1:degrees})" },
		{ "trigger": "Floor\tfunc", "contents": "Floor(${1:x})" },
		{ "trigger": "FormatRealToString\tfunc", "contents": "FormatRealToString(${1:value}, ${2:precision})" },
		{ "trigger": "Log10\tfunc", "contents": "Log10(${1:x})" },
		{ "trigger": "LogE\tfunc", "contents": "LogE(${1:x})" },
		{ "trigger": "Max\tfunc", "contents": "Max(${1:x}, ${2:y := 0})" },
		{ "trigger": "Min\tfunc", "contents": "Min(${1:x}, ${2:y := 0})" },
		{ "trigger": "Pow\tfunc", "contents": "Pow(${1:x}, ${2:y})" },
		{ "trigger": "RadToDeg\tfunc", "contents": "RadToDeg(${1:radians})" },
		{ "trigger": "Root\tfunc", "contents": "Root(${1:x}, ${2:y})" },
		{ "trigger": "Sin\tfunc", "contents": "Sin(${1:x})" },
		{ "trigger": "Sqrt\tfunc", "contents": "Sqrt(${1:x})" },
		{ "trigger": "Tan\tfunc", "contents": "Tan(${1:x})" },

		{ "trigger": "CanMove\tfunc", "contents": "CanMove(${1:direction})" },
		{ "trigger": "Face\tfunc", "contents": "Face(${1:direction}, ${2:flags := FACE_NORMAL})" },
		{ "trigger": "GetProperty\tfunc", "contents": "GetProperty(${1:propertyname})" },
		{ "trigger": "IsLegalMove\tfunc", "contents": "IsLegalMove(${1:move}, ${2:boundingbox})" },
		{ "trigger": "MakeBoundingBox\tfunc", "contents": "MakeBoundingBox(${1:areastring})" },
		{ "trigger": "Move\tfunc", "contents": "Move(${1:direction})" },
		{ "trigger": "RunAwayFrom\tfunc", "contents": "RunAwayFrom(${1:object})" },
		{ "trigger": "RunAwayFromLocation\tfunc", "contents": "RunAwayFromLocation(${1:x}, ${2:y})" },
		{ "trigger": "RunToward\tfunc", "contents": "RunToward(${1:object})" },
		{ "trigger": "RunTowardLocation\tfunc", "contents": "RunTowardLocation(${1:x}, ${2:y})" },
		{ "trigger": "Say\tfunc", "contents": "Say(${1:text}, ${2:text_type := SAY_TEXTTYPE_DEFAULT}, ${3:do_event := SAY_DOEVENT_DISABLE})" },
		{ "trigger": "SayUC\tfunc", "contents": "SayUC(${1:uc_text}, ${2:text_type := SAY_TEXTTYPE_DEFAULT}, ${3:langcode := SAY_LANG}, ${4:do_event := SAY_DOEVENT_DISABLE})" },
		{ "trigger": "Self\tfunc", "contents": "Self()" },
		{ "trigger": "SetAnchor\tfunc", "contents": "SetAnchor(${1:centerx}, ${2:centery}, ${3:distance_start}, ${4:percent_subtract})" },
		{ "trigger": "SetOpponent\tfunc", "contents": "SetOpponent(${1:character})" },
		{ "trigger": "SetProperty\tfunc", "contents": "SetProperty(${1:propertyname}, ${2:propertyvalue})" },
		{ "trigger": "SetWarMode\tfunc", "contents": "SetWarMode(${1:warmode})" },
		{ "trigger": "TurnAwayFrom\tfunc", "contents": "TurnAwayFrom(${1:object}, ${2:flags := FACE_NORMAL})" },
		{ "trigger": "TurnAwayFromLocation\tfunc", "contents": "TurnAwayFromLocation(${1:x}, ${2:y}, ${3:flags := FACE_NORMAL})" },
		{ "trigger": "TurnToward\tfunc", "contents": "TurnToward(${1:object}, ${2:flags := FACE_NORMAL})" },
		{ "trigger": "TurnTowardLocation\tfunc", "contents": "TurnTowardLocation(${1:x}, ${2:y}, ${3:flags := FACE_NORMAL})" },
		{ "trigger": "WalkAwayFrom\tfunc", "contents": "WalkAwayFrom(${1:object})" },
		{ "trigger": "WalkAwayFromLocation\tfunc", "contents": "WalkAwayFromLocation(${1:x}, ${2:y})" },
		{ "trigger": "WalkToward\tfunc", "contents": "WalkToward(${1:object})" },
		{ "trigger": "WalkTowardLocation\tfunc", "contents": "WalkTowardLocation(${1:x}, ${2:y})" },
		{ "trigger": "Wander\tfunc", "contents": "Wander()" },

		{ "trigger": "Clear_Event_Queue\tfunc", "contents": "Clear_Event_Queue()" },
		{ "trigger": "Create_Debug_Context\tfunc", "contents": "Create_Debug_Context()" },
		{ "trigger": "Debugger\tfunc", "contents": "Debugger()" },
		{ "trigger": "Events_Waiting\tfunc", "contents": "Events_Waiting()" },
		{ "trigger": "GetPid\tfunc", "contents": "GetPid()" },
		{ "trigger": "GetProcess\tfunc", "contents": "GetProcess(${1:pid := 0})" },
		{ "trigger": "Is_Critical\tfunc", "contents": "Is_Critical()" },
		{ "trigger": "OpenConnection\tfunc", "contents": "OpenConnection(${1:host}, ${2:port}, ${3:scriptdef}, ${4:params})" },
		{ "trigger": "OpenURL\tfunc", "contents": "OpenURL(${1:character}, ${2:url})" },
		{ "trigger": "Run_Script\tfunc", "contents": "Run_Script(${1:script_name}, ${2:param := 0})" },
		{ "trigger": "Run_Script_To_Completion\tfunc", "contents": "Run_Script_To_Completion(${1:script_name}, ${2:param := 0})" },
		{ "trigger": "Set_Critical\tfunc", "contents": "Set_Critical(${1:critical})" },
		{ "trigger": "Set_Debug\tfunc", "contents": "Set_Debug(${1:debug})" },
		{ "trigger": "Set_Event_Queue_Size\tfunc", "contents": "Set_Event_Queue_Size(${1:size})" },
		{ "trigger": "Set_Priority\tfunc", "contents": "Set_Priority(${1:priority})" },
		{ "trigger": "Set_Script_Option\tfunc", "contents": "Set_Script_Option(${1:optnum}, ${2:optval})" },
		{ "trigger": "Sleep\tfunc", "contents": "Sleep(${1:num_seconds})" },
		{ "trigger": "Sleepms\tfunc", "contents": "Sleepms(${1:num_milliseconds})" },
		{ "trigger": "Start_Script\tfunc", "contents": "Start_Script(${1:script_name}, ${2:param := 0})" },
		{ "trigger": "Start_Skill_Script\tfunc", "contents": "Start_Skill_Script(${1:chr}, ${2:attr_name}, ${3:script_name := 0}, ${4:param := 0})" },
		{ "trigger": "SysLog\tfunc", "contents": "SysLog(${1:text})" },
		{ "trigger": "System_RPM\tfunc", "contents": "System_RPM()" },
		{ "trigger": "Unload_Scripts\tfunc", "contents": "Unload_Scripts(${1:scriptname := :\"\"})" },
		{ "trigger": "Wait_For_Event\tfunc", "contents": "Wait_For_Event(${1:num_seconds_timeout})" },
		
		{ "trigger": "CreateParty\tfunc", "contents": "CreateParty(${1:leader}, ${2:firstmember})" },
		{ "trigger": "DisbandParty\tfunc", "contents": "DisbandParty(${1:PartyRef})" },
		{ "trigger": "SendPartyMsg\tfunc", "contents": "SendPartyMsg(${1:party}, ${2:character}, ${3:uctext})" },
		{ "trigger": "SendPrivatePartyMsg\tfunc", "contents": "SendPrivatePartyMsg(${1:party}, ${2:character}, ${3:tocharacter}, ${4:uctext})" },

		{ "trigger": "AddRealm\tfunc", "contents": "AddRealm(${1:realm_name}, ${2:base_realm})" },
		{ "trigger": "CreatePacket\tfunc", "contents": "CreatePacket(${1:type}, ${2:size})" },
		{ "trigger": "DeleteRealm\tfunc", "contents": "DeleteRealm(${1:realm})" },
		{ "trigger": "FormatItemDescription\tfunc", "contents": "FormatItemDescription(${1:desc}, ${2:amount := 1}, ${3:suffix := :\"\"})" },
		{ "trigger": "GetCmdLevelName\tfunc", "contents": "GetCmdLevelName(${1:number})" },
		{ "trigger": "GetCmdLevelNumber\tfunc", "contents": "GetCmdLevelNumber(${1:name})" },
		{ "trigger": "GetItemDescriptor\tfunc", "contents": "GetItemDescriptor(${1:objtype})" },
		{ "trigger": "GetPackageByName\tfunc", "contents": "GetPackageByName(${1:name})" },
		{ "trigger": "IncRevision\tfunc", "contents": "IncRevision(${1:object})" },
		{ "trigger": "ListTextCommands\tfunc", "contents": "ListTextCommands()" },
		{ "trigger": "ListenPoints\tfunc", "contents": "ListenPoints()" },
		{ "trigger": "LogCPropProfile\tfunc", "contents": "LogCPropProfile()" },
		{ "trigger": "MD5Encrypt\tfunc", "contents": "MD5Encrypt(${1:str})" },
		{ "trigger": "Packages\tfunc", "contents": "Packages()" },
		{ "trigger": "ReadMillisecondClock\tfunc", "contents": "ReadMillisecondClock()" },
		{ "trigger": "Realms\tfunc", "contents": "Realms(${1:realm := :\"\"})" },
		{ "trigger": "ReloadConfiguration\tfunc", "contents": "ReloadConfiguration()" },
		{ "trigger": "SetSysTrayPopupText\tfunc", "contents": "SetSysTrayPopupText(${1:text})" },
		
		{ "trigger": "CreateRootItemInStorageArea\tfunc", "contents": "CreateRootItemInStorageArea(${1:area}, ${2:itemname}, ${3:objtype})" },
		{ "trigger": "CreateStorageArea\tfunc", "contents": "CreateStorageArea(${1:areaname})" },
		{ "trigger": "DestroyRootItemInStorageArea\tfunc", "contents": "DestroyRootItemInStorageArea(${1:area}, ${2:itemname})" },
		{ "trigger": "FindRootItemInStorageArea\tfunc", "contents": "FindRootItemInStorageArea(${1:area}, ${2:itemname})" },
		{ "trigger": "FindStorageArea\tfunc", "contents": "FindStorageArea(${1:areaname})" },
		{ "trigger": "StorageAreas\tfunc", "contents": "StorageAreas()" },
		
		{ "trigger": "mysql_affected_rows\tfunc", "contents": "mysql_affected_rows(${1:result})" },
		{ "trigger": "mysql_close\tfunc", "contents": "mysql_close(${1:connection})" },
		{ "trigger": "mysql_connect\tfunc", "contents": "mysql_connect(${1:host}, ${2:username}, ${3:password := :\"\"})" },
		{ "trigger": "mysql_fetch_row\tfunc", "contents": "mysql_fetch_row(${1:result})" },
		{ "trigger": "mysql_field_name\tfunc", "contents": "mysql_field_name(${1:result}, ${2:column_index})" },
		{ "trigger": "mysql_num_fields\tfunc", "contents": "mysql_num_fields(${1:result})" },
		{ "trigger": "mysql_num_rows\tfunc", "contents": "mysql_num_rows(${1:result})" },
		{ "trigger": "mysql_query\tfunc", "contents": "mysql_query(${1:connection}, ${2:query}, ${3:parameters := :\"\"})" },
		{ "trigger": "mysql_select_db\tfunc", "contents": "mysql_select_db(${1:connection}, ${2:database})" },
		
		{ "trigger": "BroadcastUC\tfunc", "contents": "BroadcastUC(${1:uc_text}, ${2:langcode}, ${3:font := _DEFAULT_UCFONT}, ${4:color := _DEFAULT_UCCOLOR})" },
		{ "trigger": "PrintTextAbovePrivateUC\tfunc", "contents": "PrintTextAbovePrivateUC(${1:above_object}, ${2:uc_text}, ${3:langcode}, ${4:character}, ${5:font := _DEFAULT_UCFONT}, ${6:color := _DEFAULT_UCCOLOR}, ${7:journal_print := JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "PrintTextAboveUC\tfunc", "contents": "PrintTextAboveUC(${1:above_object}, ${2:uc_text}, ${3:langcode}, ${4:font := _DEFAULT_UCFONT}, ${5:color := _DEFAULT_UCCOLOR}, ${6:journal_print := JOURNAL_UC_PRINT_NAME})" },
		{ "trigger": "RequestInputUC\tfunc", "contents": "RequestInputUC(${1:character}, ${2:item}, ${3:uc_prompt}, ${4:langcode})" },
		{ "trigger": "SendSysMessageUC\tfunc", "contents": "SendSysMessageUC(${1:character}, ${2:uc_text}, ${3:langcode}, ${4:font := _DEFAULT_UCFONT}, ${5:color := _DEFAULT_UCCOLOR})" },
		
		{ "trigger": "Accessible\tfunc", "contents": "Accessible(${1:by_character}, ${2:item})" },
		{ "trigger": "AddAmount\tfunc", "contents": "AddAmount(${1:item}, ${2:amount})" },
		{ "trigger": "AddMenuItem\tfunc", "contents": "AddMenuItem(${1:menu}, ${2:objtype}, ${3:text}, ${4:color := 0})" },
		{ "trigger": "ApplyConstraint\tfunc", "contents": "ApplyConstraint(${1:objlist}, ${2:configfile}, ${3:propertyname}, ${4:minvalue})" },
		{ "trigger": "AssignRectToWeatherRegion\tfunc", "contents": "AssignRectToWeatherRegion(${1:region}, ${2:xwest}, ${3:ynorth}, ${4:xeast}, ${5:ysouth})" },
		{ "trigger": "Attach\tfunc", "contents": "Attach(${1:character})" },
		{ "trigger": "Broadcast\tfunc", "contents": "Broadcast(${1:text}, ${2:font := _DEFAULT_TEXT_FONT}, ${3:color := _DEFAULT_TEXT_COLOR}, ${4:requiredCmdLevel := _DEFAULT_TEXT_REQUIREDCMD})" },
		{ "trigger": "CanWalk\tfunc", "contents": "CanWalk(${1:movemode}, x1 := $2, y1 := $3, z1 := $4, x2_or_dir := $5, y2 := ${6:CANWALK_DIR}, ${7:realm := _DEFAULT_REALM})" },
		{ "trigger": "CancelTarget\tfunc", "contents": "CancelTarget(${1:of_whom})" },
		{ "trigger": "CheckLineOfSight\tfunc", "contents": "CheckLineOfSight(object1 := $1, object2 := $2)" },
		{ "trigger": "CheckLosAt\tfunc", "contents": "CheckLosAt(${1:character}, ${2:x}, ${3:y}, ${4:z})" },
		{ "trigger": "CheckLosBetween\tfunc", "contents": "CheckLosBetween(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:realm := _DEFAULT_REALM})" },
		{ "trigger": "CloseGump\tfunc", "contents": "CloseGump(${1:character}, ${2:gumpid}, ${3:response := 0})" },
		{ "trigger": "CloseTradeWindow\tfunc", "contents": "CloseTradeWindow(${1:character})" },
		{ "trigger": "CloseWindow\tfunc", "contents": "CloseWindow(${1:character}, ${2:type}, ${3:object})" },
		{ "trigger": "ConsumeReagents\tfunc", "contents": "ConsumeReagents(${1:who}, ${2:spellid})" },
		{ "trigger": "ConsumeSubstance\tfunc", "contents": "ConsumeSubstance(${1:container}, ${2:objtype}, ${3:amount})" },
		{ "trigger": "CoordinateDistance\tfunc", "contents": "CoordinateDistance(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CoordinateDistanceEuclidean\tfunc", "contents": "CoordinateDistanceEuclidean(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "CreateAccount\tfunc", "contents": "CreateAccount(${1:acctname}, ${2:password}, ${3:enabled})" },
		{ "trigger": "CreateItemAtLocation\tfunc", "contents": "CreateItemAtLocation(${1:x}, ${2:y}, ${3:z}, ${4:objtype}, ${5:amount := 1}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "CreateItemCopyAtLocation\tfunc", "contents": "CreateItemCopyAtLocation(${1:x}, ${2:y}, ${3:z}, ${4:item}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "CreateItemInBackpack\tfunc", "contents": "CreateItemInBackpack(${1:of_character}, ${2:objtype}, ${3:amount := 1})" },
		{ "trigger": "CreateItemInContainer\tfunc", "contents": "CreateItemInContainer(${1:container}, ${2:objtype}, ${3:amount := 1})" },
		{ "trigger": "CreateItemInInventory\tfunc", "contents": "CreateItemInInventory(${1:container}, ${2:objtype}, ${3:amount := 1})" },
		{ "trigger": "CreateMenu\tfunc", "contents": "CreateMenu(${1:title})" },
		{ "trigger": "CreateMultiAtLocation\tfunc", "contents": "CreateMultiAtLocation(${1:x}, ${2:y}, ${3:z}, ${4:objtype}, ${5:flags := 0}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "CreateNpcFromTemplate\tfunc", "contents": "CreateNpcFromTemplate(${1:template}, ${2:x}, ${3:y}, ${4:z}, ${5:override_properties := 0}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "DestroyItem\tfunc", "contents": "DestroyItem(${1:Item})" },
		{ "trigger": "DestroyMulti\tfunc", "contents": "DestroyMulti(${1:multi})" },
		{ "trigger": "Detach\tfunc", "contents": "Detach()" },
		{ "trigger": "DisableEvents\tfunc", "contents": "DisableEvents(${1:eventtype})" },
		{ "trigger": "DisconnectClient\tfunc", "contents": "DisconnectClient(${1:character})" },
		{ "trigger": "Distance\tfunc", "contents": "Distance(obj1 := $1, obj2 := $2)" },
		{ "trigger": "DistanceEuclidean\tfunc", "contents": "DistanceEuclidean(obj1 := $1, obj2 := $2)" },
		{ "trigger": "EnableEvents\tfunc", "contents": "EnableEvents(${1:eventtype}, ${2:range := 1})" },
		{ "trigger": "EnumerateItemsInContainer\tfunc", "contents": "EnumerateItemsInContainer(${1:container}, ${2:flags := 0})" },
		{ "trigger": "EnumerateOnlineCharacters\tfunc", "contents": "EnumerateOnlineCharacters()" },
		{ "trigger": "EquipFromTemplate\tfunc", "contents": "EquipFromTemplate(${1:character}, ${2:template})" },
		{ "trigger": "EquipItem\tfunc", "contents": "EquipItem(${1:mobile}, ${2:item})" },
		{ "trigger": "EraseGlobalProperty\tfunc", "contents": "EraseGlobalProperty(${1:propname})" },
		{ "trigger": "EraseObjProperty\tfunc", "contents": "EraseObjProperty(${1:object}, ${2:propname})" },
		{ "trigger": "FindAccount\tfunc", "contents": "FindAccount(${1:acctname})" },
		{ "trigger": "FindObjtypeInContainer\tfunc", "contents": "FindObjtypeInContainer(${1:container}, ${2:objtype})" },
		{ "trigger": "FindPath\tfunc", "contents": "FindPath(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:realm := _DEFAULT_REALM}, ${8:flags := FP_IGNORE_MOBILES}, ${9:searchskirt := 5})" },
		{ "trigger": "FindSubstance\tfunc", "contents": "FindSubstance(${1:container}, ${2:objtype}, ${3:amount}, ${4:makeinuse := 0}, ${5:flags := 0})" },
		{ "trigger": "GetAmount\tfunc", "contents": "GetAmount(${1:item})" },
		{ "trigger": "GetCommandHelp\tfunc", "contents": "GetCommandHelp(${1:character}, ${2:command})" },
		{ "trigger": "GetCoordsInLine\tfunc", "contents": "GetCoordsInLine(x1 := $1, y1 := $2, x2 := $3, y2 := $4)" },
		{ "trigger": "GetEquipmentByLayer\tfunc", "contents": "GetEquipmentByLayer(${1:character}, ${2:layer})" },
		{ "trigger": "GetFacing\tfunc", "contents": "GetFacing(${1:from_x}, ${2:from_y}, ${3:to_x}, ${4:to_y})" },
		{ "trigger": "GetGlobalProperty\tfunc", "contents": "GetGlobalProperty(${1:propname})" },
		{ "trigger": "GetGlobalPropertyNames\tfunc", "contents": "GetGlobalPropertyNames()" },
		{ "trigger": "GetHarvestDifficulty\tfunc", "contents": "GetHarvestDifficulty(${1:resource}, ${2:x}, ${3:y}, ${4:tiletype}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetMapInfo\tfunc", "contents": "GetMapInfo(${1:x}, ${2:y}, ${3:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetMenuObjTypes\tfunc", "contents": "GetMenuObjTypes(${1:menuname})" },
		{ "trigger": "GetMidpointCircleCoords\tfunc", "contents": "GetMidpointCircleCoords(${1:xcenter}, ${2:ycenter}, ${3:radius})" },
		{ "trigger": "GetMultiDimensions\tfunc", "contents": "GetMultiDimensions(${1:multiid})" },
		{ "trigger": "GetObjProperty\tfunc", "contents": "GetObjProperty(${1:object}, ${2:property_name})" },
		{ "trigger": "GetObjPropertyNames\tfunc", "contents": "GetObjPropertyNames(${1:object})" },
		{ "trigger": "GetObjType\tfunc", "contents": "GetObjType(${1:object})" },
		{ "trigger": "GetObjTypeByName\tfunc", "contents": "GetObjTypeByName(${1:name})" },
		{ "trigger": "GetRegionLightLevelAtLocation\tfunc", "contents": "GetRegionLightLevelAtLocation(${1:x}, ${2:y}, ${3:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetRegionName\tfunc", "contents": "GetRegionName(${1:object})" },
		{ "trigger": "GetRegionNameAtLocation\tfunc", "contents": "GetRegionNameAtLocation(${1:x}, ${2:y}, ${3:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetRegionString\tfunc", "contents": "GetRegionString(${1:resource}, ${2:x}, ${3:y}, ${4:propertyname}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetSpellDifficulty\tfunc", "contents": "GetSpellDifficulty(${1:spellid})" },
		{ "trigger": "GetStandingHeight\tfunc", "contents": "GetStandingHeight(${1:x}, ${2:y}, ${3:startz}, ${4:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetStandingLayers\tfunc", "contents": "GetStandingLayers(${1:x}, ${2:y}, ${3:flags := MAPDATA_FLAG_ALL}, ${4:realm := _DEFAULT_REALM})" },
		{ "trigger": "GetWorldHeight\tfunc", "contents": "GetWorldHeight(${1:x}, ${2:y}, ${3:realm := _DEFAULT_REALM})" },
		{ "trigger": "GrantPrivilege\tfunc", "contents": "GrantPrivilege(${1:character}, ${2:privilege})" },
		{ "trigger": "HarvestResource\tfunc", "contents": "HarvestResource(${1:resource}, ${2:x}, ${3:y}, ${4:b}, ${5:n}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "IsStackable\tfunc", "contents": "IsStackable(item1 := $1, item2 := $2)" },
		{ "trigger": "ListAccounts\tfunc", "contents": "ListAccounts()" },
		{ "trigger": "ListEquippedItems\tfunc", "contents": "ListEquippedItems(${1:who})" },
		{ "trigger": "ListGhostsNearLocation\tfunc", "contents": "ListGhostsNearLocation(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListHostiles\tfunc", "contents": "ListHostiles(${1:characterx}, ${2:range := 20}, ${3:flags := 0})" },
		{ "trigger": "ListItemsAtLocation\tfunc", "contents": "ListItemsAtLocation(${1:x}, ${2:y}, ${3:z}, ${4:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocation\tfunc", "contents": "ListItemsNearLocation(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationOfType\tfunc", "contents": "ListItemsNearLocationOfType(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:objtype}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListItemsNearLocationWithFlag\tfunc", "contents": "ListItemsNearLocationWithFlag(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:flags}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInBox\tfunc", "contents": "ListMobilesInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListMobilesInLineOfSight\tfunc", "contents": "ListMobilesInLineOfSight(${1:object}, ${2:range})" },
		{ "trigger": "ListMobilesNearLocation\tfunc", "contents": "ListMobilesNearLocation(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListMobilesNearLocationEx\tfunc", "contents": "ListMobilesNearLocationEx(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:flags}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListMultisInBox\tfunc", "contents": "ListMultisInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListObjectsInBox\tfunc", "contents": "ListObjectsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListOfflineMobilesInRealm\tfunc", "contents": "ListOfflineMobilesInRealm(${1:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListStaticsAtLocation\tfunc", "contents": "ListStaticsAtLocation(${1:x}, ${2:y}, ${3:z}, ${4:flags := 0}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListStaticsInBox\tfunc", "contents": "ListStaticsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, ${7:flags}, ${8:realm := _DEFAULT_REALM})" },
		{ "trigger": "ListStaticsNearLocation\tfunc", "contents": "ListStaticsNearLocation(${1:x}, ${2:y}, ${3:z}, ${4:range}, ${5:flags := 0}, ${6:realm := _DEFAULT_REALM})" },
		{ "trigger": "MoveItemToContainer\tfunc", "contents": "MoveItemToContainer(${1:item}, ${2:container}, ${3:x := 1}, ${4:y := 1}, ${5:add_to_existing_stack := 0})" },
		{ "trigger": "MoveItemToSecureTradeWin\tfunc", "contents": "MoveItemToSecureTradeWin(${1:item}, ${2:character})" },
		{ "trigger": "MoveObjectToLocation\tfunc", "contents": "MoveObjectToLocation(${1:object}, ${2:x}, ${3:y}, ${4:z}, ${5:realm := _DEFAULT_REALM}, ${6:flags := MOVEOBJECT_NORMAL})" },
		{ "trigger": "OpenPaperdoll\tfunc", "contents": "OpenPaperdoll(${1:towhom}, ${2:forwhom})" },
		{ "trigger": "POLCore\tfunc", "contents": "POLCore()" },
		{ "trigger": "PerformAction\tfunc", "contents": "PerformAction(${1:character}, ${2:action}, ${3:framecount := 5}, ${4:repeatcount := 1}, ${5:backward := ACTION_DIR_FORWARD}, ${6:repeatflag := ACTION_NOREPEAT}, ${7:delay := 1})" },
		{ "trigger": "PlayLightningBoltEffect\tfunc", "contents": "PlayLightningBoltEffect(${1:center_object})" },
		{ "trigger": "PlayMovingEffect\tfunc", "contents": "PlayMovingEffect(${1:source}, ${2:target}, ${3:effect}, ${4:speed}, ${5:loop := 0}, ${6:explode := 0})" },
		{ "trigger": "PlayMovingEffectEx\tfunc", "contents": "PlayMovingEffectEx(${1:source}, ${2:target}, ${3:effect}, ${4:speed}, ${5:duration := 0}, ${6:hue := 0}, ${7:render := 0}, ${8:fixeddirection := 0}, ${9:explode := 0}, effect3d := ${10:0}, effect3dexplode := ${11:0}, effect3dsound := ${12:0})" },
		{ "trigger": "PlayMovingEffectXYZ\tfunc", "contents": "PlayMovingEffectXYZ(${1:srcx}, ${2:srcy}, ${3:srcz}, ${4:dstx}, ${5:dsty}, ${6:dstz}, ${7:effect}, ${8:speed}, ${9:loop := 0}, ${:0explode := 1:0}, ${:1realm := 1:_DEFAULT_REALM})" },
		{ "trigger": "PlayMovingEffectXYZEx\tfunc", "contents": "PlayMovingEffectXYZEx(${1:srcx}, ${2:srcy}, ${3:srcz}, ${4:dstx}, ${5:dsty}, ${6:dstz}, ${7:realm := _DEFAULT_REALM}, ${8:effect}, ${9:speed}, ${:0duration := 1:0}, ${:1hue := 1:0}, ${:2render := 1:0}, ${:3fixeddirection := 1:0}, ${:4explode := 1:0}, effect3d := ${15:0}, effect3dexplode := ${16:0}, effect3dsound := ${17:0})" },
		{ "trigger": "PlayMusic\tfunc", "contents": "PlayMusic(${1:chr}, ${2:music_id := 0})" },
		{ "trigger": "PlayObjectCenteredEffect\tfunc", "contents": "PlayObjectCenteredEffect(${1:center}, ${2:effect}, ${3:speed}, ${4:loop := 0})" },
		{ "trigger": "PlayObjectCenteredEffectEx\tfunc", "contents": "PlayObjectCenteredEffectEx(${1:center}, ${2:effect}, ${3:speed}, ${4:duration := 0}, ${5:hue := 0}, ${6:render := 0}, ${7:layer := 0}, effect3d := ${8:0})" },
		{ "trigger": "PlaySoundEffect\tfunc", "contents": "PlaySoundEffect(${1:object}, ${2:effect})" },
		{ "trigger": "PlaySoundEffectPrivate\tfunc", "contents": "PlaySoundEffectPrivate(${1:object}, ${2:effect}, ${3:playfor})" },
		{ "trigger": "PlaySoundEffectXYZ\tfunc", "contents": "PlaySoundEffectXYZ(${1:x}, ${2:y}, ${3:z}, ${4:effect}, ${5:realm := _DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffect\tfunc", "contents": "PlayStationaryEffect(${1:x}, ${2:y}, ${3:z}, ${4:effect}, ${5:speed}, ${6:loop := 0}, ${7:explode := 0}, ${8:realm := _DEFAULT_REALM})" },
		{ "trigger": "PlayStationaryEffectEx\tfunc", "contents": "PlayStationaryEffectEx(${1:x}, ${2:y}, ${3:z}, ${4:realm := _DEFAULT_REALM}, ${5:effect}, ${6:speed}, ${7:duration := 0}, ${8:hue := 0}, ${9:render := 0}, effect3d := ${10:0})" },
		{ "trigger": "PrintTextAbove\tfunc", "contents": "PrintTextAbove(${1:above_object}, ${2:text}, ${3:font := _DEFAULT_TEXT_FONT}, ${4:color := _DEFAULT_TEXT_COLOR}, ${5:journal_print := JOURNAL_PRINT_NAME})" },
		{ "trigger": "PrintTextAbovePrivate\tfunc", "contents": "PrintTextAbovePrivate(${1:above_object}, ${2:text}, ${3:character}, ${4:font := _DEFAULT_TEXT_FONT}, ${5:color := _DEFAULT_TEXT_COLOR}, ${6:journal_print := JOURNAL_PRINT_NAME})" },
		{ "trigger": "ReadGameClock\tfunc", "contents": "ReadGameClock()" },
		{ "trigger": "RegisterForSpeechEvents\tfunc", "contents": "RegisterForSpeechEvents(${1:at_object}, ${2:range}, ${3:flags := 0})" },
		{ "trigger": "ReleaseItem\tfunc", "contents": "ReleaseItem(${1:item})" },
		{ "trigger": "RequestInput\tfunc", "contents": "RequestInput(${1:character}, ${2:item}, ${3:prompt})" },
		{ "trigger": "ReserveItem\tfunc", "contents": "ReserveItem(${1:item})" },
		{ "trigger": "RestartScript\tfunc", "contents": "RestartScript(${1:npc})" },
		{ "trigger": "Resurrect\tfunc", "contents": "Resurrect(${1:mobile}, ${2:flags := 0})" },
		{ "trigger": "RevokePrivilege\tfunc", "contents": "RevokePrivilege(${1:character}, ${2:privilege})" },
		{ "trigger": "SaveWorldState\tfunc", "contents": "SaveWorldState()" },
		{ "trigger": "SecureTradeWin\tfunc", "contents": "SecureTradeWin(${1:character}, character2 := $2)" },
		{ "trigger": "SelectColor\tfunc", "contents": "SelectColor(${1:character}, ${2:item})" },
		{ "trigger": "SelectMenuItem2\tfunc", "contents": "SelectMenuItem2(${1:character}, ${2:menuname})" },
		{ "trigger": "SendBuyWindow\tfunc", "contents": "SendBuyWindow(${1:character}, ${2:container}, ${3:vendor}, ${4:items}, ${5:flags := 0})" },
		{ "trigger": "SendCharProfile\tfunc", "contents": "SendCharProfile(${1:character}, ${2:of_who}, ${3:title}, ${4:uneditable_text := CHARPROFILE_NO_UNEDITABLE_TEXT}, ${5:editable_text := CHARPROFILE_NO_EDITABLE_TEXT})" },
		{ "trigger": "SendCharacterRaceChanger\tfunc", "contents": "SendCharacterRaceChanger(${1:character})" },
		{ "trigger": "SendDialogGump\tfunc", "contents": "SendDialogGump(${1:who}, ${2:layout}, ${3:textlines}, ${4:x := 0}, ${5:y := 0}, ${6:flags := 0}, ${7:gumpid := 0})" },
		{ "trigger": "SendEvent\tfunc", "contents": "SendEvent(${1:npc}, ${2:event})" },
		{ "trigger": "SendHousingTool\tfunc", "contents": "SendHousingTool(${1:who}, ${2:house})" },
		{ "trigger": "SendInstaResDialog\tfunc", "contents": "SendInstaResDialog(${1:character})" },
		{ "trigger": "SendOpenBook\tfunc", "contents": "SendOpenBook(${1:character}, ${2:book})" },
		{ "trigger": "SendOpenSpecialContainer\tfunc", "contents": "SendOpenSpecialContainer(${1:character}, ${2:container})" },
		{ "trigger": "SendOverallSeason\tfunc", "contents": "SendOverallSeason(${1:season_id}, ${2:playsound := 1})" },
		{ "trigger": "SendPacket\tfunc", "contents": "SendPacket(${1:to_whom}, ${2:packet_hex_string})" },
		{ "trigger": "SendPopUpMenu\tfunc", "contents": "SendPopUpMenu(${1:to_whom}, ${2:above}, ${3:menu})" },
		{ "trigger": "SendQuestArrow\tfunc", "contents": "SendQuestArrow(${1:to_whom}, ${2:x := 1}, ${3:y := 1}, ${4:target := :\"\"})" },
		{ "trigger": "SendSellWindow\tfunc", "contents": "SendSellWindow(${1:character}, ${2:vendor}, i1 := $3, i2 := $4, i3 := $5, ${6:flags := 0})" },
		{ "trigger": "SendSkillWindow\tfunc", "contents": "SendSkillWindow(${1:towhom}, ${2:forwhom})" },
		{ "trigger": "SendStatus\tfunc", "contents": "SendStatus(${1:character})" },
		{ "trigger": "SendStringAsTipWindow\tfunc", "contents": "SendStringAsTipWindow(${1:character}, ${2:text})" },
		{ "trigger": "SendSysMessage\tfunc", "contents": "SendSysMessage(${1:character}, ${2:text}, ${3:font := _DEFAULT_TEXT_FONT}, ${4:color := _DEFAULT_TEXT_COLOR})" },
		{ "trigger": "SendTextEntryGump\tfunc", "contents": "SendTextEntryGump(${1:who}, line1 := $2, ${3:cancel := TE_CANCEL_ENABLE}, ${4:style := TE_STYLE_NORMAL}, ${5:maximum := 40}, line2 := ${6:\"\"})" },
		{ "trigger": "SendViewContainer\tfunc", "contents": "SendViewContainer(${1:character}, ${2:container})" },
		{ "trigger": "SetGlobalProperty\tfunc", "contents": "SetGlobalProperty(${1:propname}, ${2:propval})" },
		{ "trigger": "SetName\tfunc", "contents": "SetName(${1:object}, ${2:name})" },
		{ "trigger": "SetObjProperty\tfunc", "contents": "SetObjProperty(${1:object}, ${2:property_name}, ${3:property_value})" },
		{ "trigger": "SetRegionLightLevel\tfunc", "contents": "SetRegionLightLevel(${1:regionname}, ${2:lightlevel})" },
		{ "trigger": "SetRegionWeatherLevel\tfunc", "contents": "SetRegionWeatherLevel(${1:region}, ${2:type}, ${3:severity}, ${4:aux := 0}, ${5:lightoverride := 1})" },
		{ "trigger": "SetScriptController\tfunc", "contents": "SetScriptController(${1:who})" },
		{ "trigger": "Shutdown\tfunc", "contents": "Shutdown()" },
		{ "trigger": "SingleClick\tfunc", "contents": "SingleClick(${1:who}, ${2:what})" },
		{ "trigger": "SpeakPowerWords\tfunc", "contents": "SpeakPowerWords(${1:who}, ${2:spellid}, ${3:font := _DEFAULT_TEXT_FONT}, ${4:color := _DEFAULT_TEXT_COLOR})" },
		{ "trigger": "StartSpellEffect\tfunc", "contents": "StartSpellEffect(${1:who}, ${2:spellid})" },
		{ "trigger": "SubtractAmount\tfunc", "contents": "SubtractAmount(${1:item}, ${2:amount})" },
		{ "trigger": "SystemFindObjectBySerial\tfunc", "contents": "SystemFindObjectBySerial(${1:serial}, ${2:sysfind_flags := 0})" },
		{ "trigger": "Target\tfunc", "contents": "Target(${1:by_character}, ${2:options := TGTOPT_CHECK_LOS+TGTOPT_NEUTRAL})" },
		{ "trigger": "TargetCoordinates\tfunc", "contents": "TargetCoordinates(${1:by_character})" },
		{ "trigger": "TargetMultiPlacement\tfunc", "contents": "TargetMultiPlacement(${1:character}, ${2:objtype}, ${3:flags := 0}, ${4:xoffset := 0}, ${5:yoffset := 0}, ${6:hue := 0})" },
		{ "trigger": "UpdateItem\tfunc", "contents": "UpdateItem(${1:item})" },
		{ "trigger": "UpdateMobile\tfunc", "contents": "UpdateMobile(${1:mobile}, ${2:recreate := UPDATEMOBILE_UPDATE})" },
		{ "trigger": "UseItem\tfunc", "contents": "UseItem(${1:item}, ${2:character})" },
		
		{ "trigger": "RandomDiceRoll\tfunc", "contents": "RandomDiceRoll(${1:dice_string})" },
		{ "trigger": "RandomFloat\tfunc", "contents": "RandomFloat(${1:below_this_float})" },
		{ "trigger": "RandomInt\tfunc", "contents": "RandomInt(${1:below_this_number})" },
		{ "trigger": "RandomIntMinMax\tfunc", "contents": "RandomIntMinMax(${1:minValue}, ${2:maxValue})" },
		{ "trigger": "StrFormatTime\tfunc", "contents": "StrFormatTime(${1:format_string}, ${2:time_stamp := 0})" },
		
		{ "trigger": "ApplyDamage\tfunc", "contents": "ApplyDamage(${1:mobile}, ${2:damage}, ${3:userepsys := DAMAGE_USE_REPSYS}, ${4:send_damage := DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ApplyRawDamage\tfunc", "contents": "ApplyRawDamage(${1:character}, ${2:Hits}, ${3:userepsys := DAMAGE_USE_REPSYS}, ${4:send_damage := DAMAGE_USE_DEFAULT})" },
		{ "trigger": "ConsumeMana\tfunc", "contents": "ConsumeMana(${1:who}, ${2:spellid})" },
		{ "trigger": "ConsumeVital\tfunc", "contents": "ConsumeVital(${1:who}, ${2:vital}, ${3:hundredths})" },
		{ "trigger": "GetVital\tfunc", "contents": "GetVital(${1:character}, ${2:vitalname})" },
		{ "trigger": "GetVitalMaximumValue\tfunc", "contents": "GetVitalMaximumValue(${1:character}, ${2:vitalname})" },
		{ "trigger": "GetVitalName\tfunc", "contents": "GetVitalName(${1:alias_name})" },
		{ "trigger": "GetVitalRegenRate\tfunc", "contents": "GetVitalRegenRate(${1:character}, ${2:vitalname})" },
		{ "trigger": "HealDamage\tfunc", "contents": "HealDamage(${1:Character}, ${2:Hits})" },
		{ "trigger": "RecalcVitals\tfunc", "contents": "RecalcVitals(${1:character}, ${2:calc_attribute := RECALC_INTRINSIC_MOD}, ${3:calc_vital := RECALC_VITALS})" },
		{ "trigger": "SetVital\tfunc", "contents": "SetVital(${1:character}, ${2:vitalname}, ${3:value})" },

		// Constants
		{ "trigger": "ATTRIBUTE_LOCK_UP\tconst", "contents": "ATTRIBUTE_LOCK_UP" },
		{ "trigger": "ATTRIBUTE_LOCK_DOWN\tconst", "contents": "ATTRIBUTE_LOCK_DOWN" },
		{ "trigger": "ATTRIBUTE_LOCK_LOCKED\tconst", "contents": "ATTRIBUTE_LOCK_LOCKED" },
		{ "trigger": "ATTRIBUTE_MAX_BASE\tconst", "contents": "ATTRIBUTE_MAX_BASE" },
		
		{ "trigger": "TRIM_LEFT\tconst", "contents": "TRIM_LEFT" },
		{ "trigger": "TRIM_RIGHT\tconst", "contents": "TRIM_RIGHT" },
		{ "trigger": "TRIM_BOTH\tconst", "contents": "TRIM_BOTH" },
		{ "trigger": "OT_UNKNOWN\tconst", "contents": "OT_UNKNOWN" },
		{ "trigger": "OT_UNINIT\tconst", "contents": "OT_UNINIT" },
		{ "trigger": "OT_STRING\tconst", "contents": "OT_STRING" },
		{ "trigger": "OT_LONG\tconst", "contents": "OT_LONG" },
		{ "trigger": "OT_DOUBLE\tconst", "contents": "OT_DOUBLE" },
		{ "trigger": "OT_ARRAY\tconst", "contents": "OT_ARRAY" },
		{ "trigger": "OT_APPLICPTR\tconst", "contents": "OT_APPLICPTR" },
		{ "trigger": "OT_APPLICOBJ\tconst", "contents": "OT_APPLICOBJ" },
		{ "trigger": "OT_ERROR\tconst", "contents": "OT_ERROR" },
		{ "trigger": "OT_DICTIONARY\tconst", "contents": "OT_DICTIONARY" },
		{ "trigger": "OT_STRUCT\tconst", "contents": "OT_STRUCT" },
		{ "trigger": "OT_PACKET\tconst", "contents": "OT_PACKET" },
		{ "trigger": "OT_BINARYFILE\tconst", "contents": "OT_BINARYFILE" },
		{ "trigger": "OT_XMLFILE\tconst", "contents": "OT_XMLFILE" },
		{ "trigger": "OT_XMLNODE\tconst", "contents": "OT_XMLNODE" },
		{ "trigger": "OT_XMLATTRIBUTES\tconst", "contents": "OT_XMLATTRIBUTES" },
		{ "trigger": "OT_POLCOREREF\tconst", "contents": "OT_POLCOREREF" },
		{ "trigger": "OT_ACCOUNTREF\tconst", "contents": "OT_ACCOUNTREF" },
		{ "trigger": "OT_CONFIGFILEREF\tconst", "contents": "OT_CONFIGFILEREF" },
		{ "trigger": "OT_CONFIGELEMREF\tconst", "contents": "OT_CONFIGELEMREF" },
		{ "trigger": "OT_DATAFILEREF\tconst", "contents": "OT_DATAFILEREF" },
		{ "trigger": "OT_DATAELEMREF\tconst", "contents": "OT_DATAELEMREF" },
		{ "trigger": "OT_GUILDREF\tconst", "contents": "OT_GUILDREF" },
		{ "trigger": "OT_PARTYREF\tconst", "contents": "OT_PARTYREF" },
		{ "trigger": "OT_BOUNDINGBOX\tconst", "contents": "OT_BOUNDINGBOX" },
		{ "trigger": "OT_DEBUGCONTEXT\tconst", "contents": "OT_DEBUGCONTEXT" },
		{ "trigger": "OT_SCRIPTEXREF\tconst", "contents": "OT_SCRIPTEXREF" },
		{ "trigger": "OT_PACKAGE\tconst", "contents": "OT_PACKAGE" },
		{ "trigger": "OT_MENUREF\tconst", "contents": "OT_MENUREF" },
		{ "trigger": "OT_MOBILEREF\tconst", "contents": "OT_MOBILEREF" },
		{ "trigger": "OT_OFFLINEMOBILEREF\tconst", "contents": "OT_OFFLINEMOBILEREF" },
		{ "trigger": "OT_ITEMREF\tconst", "contents": "OT_ITEMREF" },
		{ "trigger": "OT_BOATREF\tconst", "contents": "OT_BOATREF" },
		{ "trigger": "OT_MULTIREF\tconst", "contents": "OT_MULTIREF" },
		{ "trigger": "OT_CLIENTREF\tconst", "contents": "OT_CLIENTREF" },
		{ "trigger": "OT_SQLCONN\tconst", "contents": "OT_SQLCONN" },
		{ "trigger": "OT_SQLRESULT\tconst", "contents": "OT_SQLRESULT" },
		{ "trigger": "OT_SQLROW\tconst", "contents": "OT_SQLROW" },
		
		{ "trigger": "BOAT_SPEED_ONE_TILE\tconst", "contents": "BOAT_SPEED_ONE_TILE" },
		{ "trigger": "BOAT_SPEED_SLOW\tconst", "contents": "BOAT_SPEED_SLOW" },
		{ "trigger": "BOAT_SPEED_MEDIUM\tconst", "contents": "BOAT_SPEED_MEDIUM" },
		{ "trigger": "BOAT_SPEED_FAST\tconst", "contents": "BOAT_SPEED_FAST" },
		
		{ "trigger": "_DEFAULT_CLFONT\tconst", "contents": "_DEFAULT_CLFONT" },
		{ "trigger": "_DEFAULT_CLCOLOR\tconst", "contents": "_DEFAULT_CLCOLOR" },
		
		{ "trigger": "DF_KEYTYPE_STRING\tconst", "contents": "DF_KEYTYPE_STRING" },
		{ "trigger": "DF_KEYTYPE_INTEGER\tconst", "contents": "DF_KEYTYPE_INTEGER" },
		
		{ "trigger": "LOG_DATETIME\tconst", "contents": "LOG_DATETIME" },
		{ "trigger": "OPENMODE_IN\tconst", "contents": "OPENMODE_IN" },
		{ "trigger": "OPENMODE_OUT\tconst", "contents": "OPENMODE_OUT" },
		{ "trigger": "OPENMODE_ATE\tconst", "contents": "OPENMODE_ATE" },
		{ "trigger": "OPENMODE_APP\tconst", "contents": "OPENMODE_APP" },
		{ "trigger": "OPENMODE_TRUNC\tconst", "contents": "OPENMODE_TRUNC" },
		{ "trigger": "SEEKDIR_BEG\tconst", "contents": "SEEKDIR_BEG" },
		{ "trigger": "SEEKDIR_CUR\tconst", "contents": "SEEKDIR_CUR" },
		{ "trigger": "SEEKDIR_END\tconst", "contents": "SEEKDIR_END" },
		{ "trigger": "LITTLE_ENDIAN\tconst", "contents": "LITTLE_ENDIAN" },
		{ "trigger": "BIG_ENDIAN\tconst", "contents": "BIG_ENDIAN" },
		{ "trigger": "LISTDIR_LIST_DIRS\tconst", "contents": "LISTDIR_LIST_DIRS" },
		{ "trigger": "LISTDIR_DONT_LIST_DIRS\tconst", "contents": "LISTDIR_DONT_LIST_DIRS" },
		{ "trigger": "LISTDIR_NO_FILES\tconst", "contents": "LISTDIR_NO_FILES" },
		{ "trigger": "LISTDIR_ALL_FILES\tconst", "contents": "LISTDIR_ALL_FILES" },
		
		{ "trigger": "SAY_TEXTTYPE_DEFAULT\tconst", "contents": "SAY_TEXTTYPE_DEFAULT" },
		{ "trigger": "SAY_TEXTTYPE_WHISPER\tconst", "contents": "SAY_TEXTTYPE_WHISPER" },
		{ "trigger": "SAY_TEXTTYPE_YELL\tconst", "contents": "SAY_TEXTTYPE_YELL" },
		{ "trigger": "SAY_LANG\tconst", "contents": "SAY_LANG" },
		{ "trigger": "SAY_DOEVENT_DISABLE\tconst", "contents": "SAY_DOEVENT_DISABLE" },
		{ "trigger": "SAY_DOEVENT_ENABLE\tconst", "contents": "SAY_DOEVENT_ENABLE" },
		{ "trigger": "FACE_NORMAL\tconst", "contents": "FACE_NORMAL" },
		{ "trigger": "FACE_FORCE\tconst", "contents": "FACE_FORCE" },
		
		{ "trigger": "SCRIPTOPT_NO_INTERRUPT\tconst", "contents": "SCRIPTOPT_NO_INTERRUPT" },
		{ "trigger": "SCRIPTOPT_DEBUG\tconst", "contents": "SCRIPTOPT_DEBUG" },
		{ "trigger": "SCRIPTOPT_NO_RUNAWAY\tconst", "contents": "SCRIPTOPT_NO_RUNAWAY" },
		{ "trigger": "SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES\tconst", "contents": "SCRIPTOPT_CAN_ACCESS_OFFLINE_MOBILES" },
		{ "trigger": "SCRIPTOPT_AUXSVC_ASSUME_STRING\tconst", "contents": "SCRIPTOPT_AUXSVC_ASSUME_STRING" },
		
		{ "trigger": "MSGLEN_VARIABLE\tconst", "contents": "MSGLEN_VARIABLE" },
		
		{ "trigger": "_DEFAULT_UCFONT\tconst", "contents": "_DEFAULT_UCFONT" },
		{ "trigger": "_DEFAULT_UCCOLOR\tconst", "contents": "_DEFAULT_UCCOLOR" },
		{ "trigger": "JOURNAL_UC_PRINT_NAME\tconst", "contents": "JOURNAL_UC_PRINT_NAME" },
		{ "trigger": "JOURNAL_UC_PRINT_YOU_SEE\tconst", "contents": "JOURNAL_UC_PRINT_YOU_SEE" },

		{ "trigger": "CRMULTI_IGNORE_MULTIS\tconst", "contents": "CRMULTI_IGNORE_MULTIS" },
		{ "trigger": "CRMULTI_IGNORE_OBJECTS\tconst", "contents": "CRMULTI_IGNORE_OBJECTS" },
		{ "trigger": "CRMULTI_IGNORE_WORLDZ\tconst", "contents": "CRMULTI_IGNORE_WORLDZ" },
		{ "trigger": "CRMULTI_IGNORE_ALL\tconst", "contents": "CRMULTI_IGNORE_ALL" },
		{ "trigger": "CRMULTI_FACING_NORTH\tconst", "contents": "CRMULTI_FACING_NORTH" },
		{ "trigger": "CRMULTI_FACING_EAST\tconst", "contents": "CRMULTI_FACING_EAST" },
		{ "trigger": "CRMULTI_FACING_SOUTH\tconst", "contents": "CRMULTI_FACING_SOUTH" },
		{ "trigger": "CRMULTI_FACING_WEST\tconst", "contents": "CRMULTI_FACING_WEST" },
		{ "trigger": "LH_FLAG_LOS\tconst", "contents": "LH_FLAG_LOS" },
		{ "trigger": "LH_FLAG_INCLUDE_HIDDEN\tconst", "contents": "LH_FLAG_INCLUDE_HIDDEN" },
		{ "trigger": "FP_IGNORE_MOBILES\tconst", "contents": "FP_IGNORE_MOBILES" },
		{ "trigger": "FP_IGNORE_DOORS\tconst", "contents": "FP_IGNORE_DOORS" },
		{ "trigger": "VENDOR_SEND_AOS_TOOLTIP\tconst", "contents": "VENDOR_SEND_AOS_TOOLTIP" },
		{ "trigger": "VENDOR_BUYABLE_CONTAINER_FILTER\tconst", "contents": "VENDOR_BUYABLE_CONTAINER_FILTER" },
		{ "trigger": "SENDDIALOGMENU_FORCE_OLD\tconst", "contents": "SENDDIALOGMENU_FORCE_OLD" },
		{ "trigger": "LISTENPT_HEAR_GHOSTS\tconst", "contents": "LISTENPT_HEAR_GHOSTS" },
		{ "trigger": "LISTENPT_HEAR_TOKENS\tconst", "contents": "LISTENPT_HEAR_TOKENS" },
		{ "trigger": "LISTENPT_NO_SPEECH\tconst", "contents": "LISTENPT_NO_SPEECH" },
		{ "trigger": "ITEMS_IGNORE_STATICS\tconst", "contents": "ITEMS_IGNORE_STATICS" },
		{ "trigger": "ITEMS_IGNORE_MULTIS\tconst", "contents": "ITEMS_IGNORE_MULTIS" },
		{ "trigger": "LIST_IGNORE_Z\tconst", "contents": "LIST_IGNORE_Z" },
		{ "trigger": "LISTEX_FLAG_NORMAL\tconst", "contents": "LISTEX_FLAG_NORMAL" },
		{ "trigger": "LISTEX_FLAG_HIDDEN\tconst", "contents": "LISTEX_FLAG_HIDDEN" },
		{ "trigger": "LISTEX_FLAG_GHOST\tconst", "contents": "LISTEX_FLAG_GHOST" },
		{ "trigger": "LISTEX_FLAG_CONCEALED\tconst", "contents": "LISTEX_FLAG_CONCEALED" },
		{ "trigger": "LISTEX_FLAG_PLAYERS_ONLY\tconst", "contents": "LISTEX_FLAG_PLAYERS_ONLY" },
		{ "trigger": "LISTEX_FLAG_NPC_ONLY\tconst", "contents": "LISTEX_FLAG_NPC_ONLY" },
		{ "trigger": "TILEDATA_FLAG_BACKGROUND\tconst", "contents": "TILEDATA_FLAG_BACKGROUND" },
		{ "trigger": "TILEDATA_FLAG_WEAPON\tconst", "contents": "TILEDATA_FLAG_WEAPON" },
		{ "trigger": "TILEDATA_FLAG_TRANSPARENT\tconst", "contents": "TILEDATA_FLAG_TRANSPARENT" },
		{ "trigger": "TILEDATA_FLAG_TRANSLUCENT\tconst", "contents": "TILEDATA_FLAG_TRANSLUCENT" },
		{ "trigger": "TILEDATA_FLAG_WALL\tconst", "contents": "TILEDATA_FLAG_WALL" },
		{ "trigger": "TILEDATA_FLAG_DAMAGING\tconst", "contents": "TILEDATA_FLAG_DAMAGING" },
		{ "trigger": "TILEDATA_FLAG_IMPASSABLE\tconst", "contents": "TILEDATA_FLAG_IMPASSABLE" },
		{ "trigger": "TILEDATA_FLAG_WET\tconst", "contents": "TILEDATA_FLAG_WET" },
		{ "trigger": "TILEDATA_FLAG_UNK\tconst", "contents": "TILEDATA_FLAG_UNK" },
		{ "trigger": "TILEDATA_FLAG_SURFACE\tconst", "contents": "TILEDATA_FLAG_SURFACE" },
		{ "trigger": "TILEDATA_FLAG_BRIDGE\tconst", "contents": "TILEDATA_FLAG_BRIDGE" },
		{ "trigger": "TILEDATA_FLAG_STACKABLE\tconst", "contents": "TILEDATA_FLAG_STACKABLE" },
		{ "trigger": "TILEDATA_FLAG_WINDOW\tconst", "contents": "TILEDATA_FLAG_WINDOW" },
		{ "trigger": "TILEDATA_FLAG_NOSHOOT\tconst", "contents": "TILEDATA_FLAG_NOSHOOT" },
		{ "trigger": "TILEDATA_FLAG_PREFIX_A\tconst", "contents": "TILEDATA_FLAG_PREFIX_A" },
		{ "trigger": "TILEDATA_FLAG_PREFIX_AN\tconst", "contents": "TILEDATA_FLAG_PREFIX_AN" },
		{ "trigger": "TILEDATA_FLAG_INTERNAL\tconst", "contents": "TILEDATA_FLAG_INTERNAL" },
		{ "trigger": "TILEDATA_FLAG_FOLIAGE\tconst", "contents": "TILEDATA_FLAG_FOLIAGE" },
		{ "trigger": "TILEDATA_FLAG_PARTIAL_HUE\tconst", "contents": "TILEDATA_FLAG_PARTIAL_HUE" },
		{ "trigger": "TILEDATA_FLAG_UNK1\tconst", "contents": "TILEDATA_FLAG_UNK1" },
		{ "trigger": "TILEDATA_FLAG_MAP\tconst", "contents": "TILEDATA_FLAG_MAP" },
		{ "trigger": "TILEDATA_FLAG_CONTAINER\tconst", "contents": "TILEDATA_FLAG_CONTAINER" },
		{ "trigger": "TILEDATA_FLAG_WEARABLE\tconst", "contents": "TILEDATA_FLAG_WEARABLE" },
		{ "trigger": "TILEDATA_FLAG_LIGHTSOURCE\tconst", "contents": "TILEDATA_FLAG_LIGHTSOURCE" },
		{ "trigger": "TILEDATA_FLAG_ANIMATED\tconst", "contents": "TILEDATA_FLAG_ANIMATED" },
		{ "trigger": "TILEDATA_FLAG_HOVEROVER\tconst", "contents": "TILEDATA_FLAG_HOVEROVER" },
		{ "trigger": "TILEDATA_FLAG_UNK2\tconst", "contents": "TILEDATA_FLAG_UNK2" },
		{ "trigger": "TILEDATA_FLAG_ARMOR\tconst", "contents": "TILEDATA_FLAG_ARMOR" },
		{ "trigger": "TILEDATA_FLAG_ROOF\tconst", "contents": "TILEDATA_FLAG_ROOF" },
		{ "trigger": "TILEDATA_FLAG_DOOR\tconst", "contents": "TILEDATA_FLAG_DOOR" },
		{ "trigger": "TILEDATA_FLAG_STAIRBACK\tconst", "contents": "TILEDATA_FLAG_STAIRBACK" },
		{ "trigger": "TILEDATA_FLAG_STAIRRIGHT\tconst", "contents": "TILEDATA_FLAG_STAIRRIGHT" },
		{ "trigger": "MAPDATA_FLAG_NONE\tconst", "contents": "MAPDATA_FLAG_NONE" },
		{ "trigger": "MAPDATA_FLAG_MOVELAND\tconst", "contents": "MAPDATA_FLAG_MOVELAND" },
		{ "trigger": "MAPDATA_FLAG_MOVESEA\tconst", "contents": "MAPDATA_FLAG_MOVESEA" },
		{ "trigger": "MAPDATA_FLAG_BLOCKSIGHT\tconst", "contents": "MAPDATA_FLAG_BLOCKSIGHT" },
		{ "trigger": "MAPDATA_FLAG_OVERFLIGHT\tconst", "contents": "MAPDATA_FLAG_OVERFLIGHT" },
		{ "trigger": "MAPDATA_FLAG_ALLOWDROPON\tconst", "contents": "MAPDATA_FLAG_ALLOWDROPON" },
		{ "trigger": "MAPDATA_FLAG_GRADUAL\tconst", "contents": "MAPDATA_FLAG_GRADUAL" },
		{ "trigger": "MAPDATA_FLAG_BLOCKING\tconst", "contents": "MAPDATA_FLAG_BLOCKING" },
		{ "trigger": "MAPDATA_FLAG_MORE_SOLIDS\tconst", "contents": "MAPDATA_FLAG_MORE_SOLIDS" },
		{ "trigger": "MAPDATA_FLAG_WALKBLOCK\tconst", "contents": "MAPDATA_FLAG_WALKBLOCK" },
		{ "trigger": "MAPDATA_FLAG_MOVE_FLAGS\tconst", "contents": "MAPDATA_FLAG_MOVE_FLAGS" },
		{ "trigger": "MAPDATA_FLAG_DROP_FLAGS\tconst", "contents": "MAPDATA_FLAG_DROP_FLAGS" },
		{ "trigger": "MAPDATA_FLAG_ALL\tconst", "contents": "MAPDATA_FLAG_ALL" },
		{ "trigger": "MOVEOBJECT_NORMAL\tconst", "contents": "MOVEOBJECT_NORMAL" },
		{ "trigger": "MOVEITEM_IGNOREMOVABLE\tconst", "contents": "MOVEITEM_IGNOREMOVABLE" },
		{ "trigger": "MOVEOBJECT_FORCELOCATION\tconst", "contents": "MOVEOBJECT_FORCELOCATION" },
		{ "trigger": "JOURNAL_PRINT_NAME\tconst", "contents": "JOURNAL_PRINT_NAME" },
		{ "trigger": "JOURNAL_PRINT_YOU_SEE\tconst", "contents": "JOURNAL_PRINT_YOU_SEE" },
		{ "trigger": "RESURRECT_FORCELOCATION\tconst", "contents": "RESURRECT_FORCELOCATION" },
		{ "trigger": "MOVETYPE_PLAYER\tconst", "contents": "MOVETYPE_PLAYER" },
		{ "trigger": "MOVETYPE_COREMOVE\tconst", "contents": "MOVETYPE_COREMOVE" },
		{ "trigger": "MOVETYPE_CORECREATE\tconst", "contents": "MOVETYPE_CORECREATE" },
		{ "trigger": "INSERT_ADD_ITEM\tconst", "contents": "INSERT_ADD_ITEM" },
		{ "trigger": "INSERT_INCREASE_STACK\tconst", "contents": "INSERT_INCREASE_STACK" },
		{ "trigger": "DELETE_BY_PLAYER\tconst", "contents": "DELETE_BY_PLAYER" },
		{ "trigger": "DELETE_BY_SCRIPT\tconst", "contents": "DELETE_BY_SCRIPT" },
		{ "trigger": "ENUMERATE_IGNORE_LOCKED\tconst", "contents": "ENUMERATE_IGNORE_LOCKED" },
		{ "trigger": "ENUMERATE_ROOT_ONLY\tconst", "contents": "ENUMERATE_ROOT_ONLY" },
		{ "trigger": "FINDSUBSTANCE_IGNORE_LOCKED\tconst", "contents": "FINDSUBSTANCE_IGNORE_LOCKED" },
		{ "trigger": "FINDSUBSTANCE_ROOT_ONLY\tconst", "contents": "FINDSUBSTANCE_ROOT_ONLY" },
		{ "trigger": "FINDSUBSTANCE_FIND_ALL\tconst", "contents": "FINDSUBSTANCE_FIND_ALL" },
		{ "trigger": "TE_CANCEL_DISABLE\tconst", "contents": "TE_CANCEL_DISABLE" },
		{ "trigger": "TE_CANCEL_ENABLE\tconst", "contents": "TE_CANCEL_ENABLE" },
		{ "trigger": "TE_STYLE_DISABLE\tconst", "contents": "TE_STYLE_DISABLE" },
		{ "trigger": "TE_STYLE_NORMAL\tconst", "contents": "TE_STYLE_NORMAL" },
		{ "trigger": "TE_STYLE_NUMERICAL\tconst", "contents": "TE_STYLE_NUMERICAL" },
		{ "trigger": "SYSFIND_SEARCH_OFFLINE_MOBILES\tconst", "contents": "SYSFIND_SEARCH_OFFLINE_MOBILES" },
		{ "trigger": "TGTOPT_CHECK_LOS\tconst", "contents": "TGTOPT_CHECK_LOS" },
		{ "trigger": "TGTOPT_NOCHECK_LOS\tconst", "contents": "TGTOPT_NOCHECK_LOS" },
		{ "trigger": "TGTOPT_HARMFUL\tconst", "contents": "TGTOPT_HARMFUL" },
		{ "trigger": "TGTOPT_NEUTRAL\tconst", "contents": "TGTOPT_NEUTRAL" },
		{ "trigger": "TGTOPT_HELPFUL\tconst", "contents": "TGTOPT_HELPFUL" },
		{ "trigger": "POLCLASS_UOBJECT\tconst", "contents": "POLCLASS_UOBJECT" },
		{ "trigger": "POLCLASS_ITEM\tconst", "contents": "POLCLASS_ITEM" },
		{ "trigger": "POLCLASS_MOBILE\tconst", "contents": "POLCLASS_MOBILE" },
		{ "trigger": "POLCLASS_NPC\tconst", "contents": "POLCLASS_NPC" },
		{ "trigger": "POLCLASS_LOCKABLE\tconst", "contents": "POLCLASS_LOCKABLE" },
		{ "trigger": "POLCLASS_CONTAINER\tconst", "contents": "POLCLASS_CONTAINER" },
		{ "trigger": "POLCLASS_CORPSE\tconst", "contents": "POLCLASS_CORPSE" },
		{ "trigger": "POLCLASS_DOOR\tconst", "contents": "POLCLASS_DOOR" },
		{ "trigger": "POLCLASS_SPELLBOOK\tconst", "contents": "POLCLASS_SPELLBOOK" },
		{ "trigger": "POLCLASS_MAP\tconst", "contents": "POLCLASS_MAP" },
		{ "trigger": "POLCLASS_MULTI\tconst", "contents": "POLCLASS_MULTI" },
		{ "trigger": "POLCLASS_BOAT\tconst", "contents": "POLCLASS_BOAT" },
		{ "trigger": "POLCLASS_HOUSE\tconst", "contents": "POLCLASS_HOUSE" },
		{ "trigger": "POLCLASS_EQUIPMENT\tconst", "contents": "POLCLASS_EQUIPMENT" },
		{ "trigger": "POLCLASS_ARMOR\tconst", "contents": "POLCLASS_ARMOR" },
		{ "trigger": "POLCLASS_WEAPON\tconst", "contents": "POLCLASS_WEAPON" },
		{ "trigger": "RACE_HUMAN\tconst", "contents": "RACE_HUMAN" },
		{ "trigger": "RACE_ELF\tconst", "contents": "RACE_ELF" },
		{ "trigger": "RACE_GARGOYLE\tconst", "contents": "RACE_GARGOYLE" },
		{ "trigger": "_DEFAULT_TEXT_FONT\tconst", "contents": "_DEFAULT_TEXT_FONT" },
		{ "trigger": "_DEFAULT_TEXT_COLOR\tconst", "contents": "_DEFAULT_TEXT_COLOR" },
		{ "trigger": "_DEFAULT_TEXT_REQUIREDCMD\tconst", "contents": "_DEFAULT_TEXT_REQUIREDCMD" },
		{ "trigger": "_DEFAULT_REALM\tconst", "contents": "_DEFAULT_REALM" },
		{ "trigger": "REALM_BRITANNIA\tconst", "contents": "REALM_BRITANNIA" },
		{ "trigger": "REALM_BRITANNIA_ALT\tconst", "contents": "REALM_BRITANNIA_ALT" },
		{ "trigger": "REALM_ILSHENAR\tconst", "contents": "REALM_ILSHENAR" },
		{ "trigger": "REALM_MALAS\tconst", "contents": "REALM_MALAS" },
		{ "trigger": "REALM_TOKUNO\tconst", "contents": "REALM_TOKUNO" },
		{ "trigger": "REALM_TERMUR\tconst", "contents": "REALM_TERMUR" },
		{ "trigger": "ACTION_DIR_FORWARD\tconst", "contents": "ACTION_DIR_FORWARD" },
		{ "trigger": "ACTION_DIR_BACKWARD\tconst", "contents": "ACTION_DIR_BACKWARD" },
		{ "trigger": "ACTION_NOREPEAT\tconst", "contents": "ACTION_NOREPEAT" },
		{ "trigger": "ACTION_REPEAT\tconst", "contents": "ACTION_REPEAT" },
		{ "trigger": "CANWALK_DIR\tconst", "contents": "CANWALK_DIR" },
		{ "trigger": "UPDATEMOBILE_RECREATE\tconst", "contents": "UPDATEMOBILE_RECREATE" },
		{ "trigger": "UPDATEMOBILE_UPDATE\tconst", "contents": "UPDATEMOBILE_UPDATE" },
		{ "trigger": "CLOSE_PAPERDOLL\tconst", "contents": "CLOSE_PAPERDOLL" },
		{ "trigger": "CLOSE_STATUS\tconst", "contents": "CLOSE_STATUS" },
		{ "trigger": "CLOSE_PROFILE\tconst", "contents": "CLOSE_PROFILE" },
		{ "trigger": "CLOSE_CONTAINER\tconst", "contents": "CLOSE_CONTAINER" },
		{ "trigger": "CHARPROFILE_NO_UNEDITABLE_TEXT\tconst", "contents": "CHARPROFILE_NO_UNEDITABLE_TEXT" },
		{ "trigger": "CHARPROFILE_NO_EDITABLE_TEXT\tconst", "contents": "CHARPROFILE_NO_EDITABLE_TEXT" },

		{ "trigger": "DAMAGE_USE_REPSYS\tconst", "contents": "DAMAGE_USE_REPSYS" },
		{ "trigger": "DAMAGE_NO_REPSYS\tconst", "contents": "DAMAGE_NO_REPSYS" },
		{ "trigger": "DAMAGE_NO_SHOW\tconst", "contents": "DAMAGE_NO_SHOW" },
		{ "trigger": "DAMAGE_SHOW\tconst", "contents": "DAMAGE_SHOW" },
		{ "trigger": "DAMAGE_USE_DEFAULT\tconst", "contents": "DAMAGE_USE_DEFAULT" },
		{ "trigger": "RECALC_INTRINSIC_MOD\tconst", "contents": "RECALC_INTRINSIC_MOD" },
		{ "trigger": "RECALC_NO_INTRINSIC_MOD\tconst", "contents": "RECALC_NO_INTRINSIC_MOD" },
		{ "trigger": "RECALC_VITALS\tconst", "contents": "RECALC_VITALS" },
		{ "trigger": "RECALC_NO_VITALS\tconst", "contents": "RECALC_NO_VITALS" },

		{ "trigger": "SHARD_NAME\tconst", "contents": "SHARD_NAME" },
		{ "trigger": "SHARD_WWWMAIN\tconst", "contents": "SHARD_WWWMAIN" },
		{ "trigger": "SHARD_WWWRULES\tconst", "contents": "SHARD_WWWRULES" },
		{ "trigger": "SHARD_BUGSADDR\tconst", "contents": "SHARD_BUGSADDR" },
		{ "trigger": "SHARD_HELPADDR\tconst", "contents": "SHARD_HELPADDR" },
		{ "trigger": "SHARD_MAILADDR\tconst", "contents": "SHARD_MAILADDR" },
		{ "trigger": "SHARD_WIKI\tconst", "contents": "SHARD_WIKI" },
		{ "trigger": "SHARD_TICKETS\tconst", "contents": "SHARD_TICKETS" },
		{ "trigger": "SHARD_FORUM\tconst", "contents": "SHARD_FORUM" },
		
	]
}