# ----- AUTO-COMPLETE ----- #



# FUNCTIONS & MODULES

# Find and Replace for functions
# Find:^(.*)\((.*)\)
# Replace:		\{ \"trigger\": \"$1\", \"contents\": \"$1\($2\)\" },

attributes
AlterAttributeTemporaryMod(character := $1, attrname := $2, delta_tenths := $3)
BaseSkillToRawSkill(baseskill := $1)
CheckSkill(character := $1, skillid := $2, difficulty := $3, points := $4)
GetAttribute(character := $1, attrname := $2)
GetAttributeBaseValue(character := $1, attrname := $2)
GetAttributeCap(character := $1, attrname := $2)
GetAttributeDefaultCap(attrname := $1)
GetAttributeIntrinsicMod(character := $1, attrname := $2)
GetAttributeLock(character := $1, attrname := $2)
GetAttributeName(alias_name := $1)
GetAttributeTemporaryMod(character := $1, attrname := $2)
RawSkillToBaseSkill(rawskill := $1)
SetAttributeBaseValue(character := $1, attrname := $2, basevalue_tenths := $3)
SetAttributeCap(character := $1, attrname := $2, capvalue := $3)
SetAttributeLock(character := $1, attrname := $2, lockstate := $3)
SetAttributeTemporaryMod(character := $1, attrname := $2, tempmod_tenths := $3)

basic
Bin(number := $1)
CAsc(str := $1)
CAscZ(str := $1, nullterm := ${2:0})
CChr(number := $1)
CChrZ(intarray := $1, break_at_first_null := ${2:0})
CDbl(expr := $1)
CInt(expr := $1)
CStr(expr := $1)
Compare(str1 := $1, str2 := $2, pos1_start := ${3:0}, pos1_end := ${4:0}, pos2_start := ${5:0}, pos2_end := ${6:0})
Find(str := $1, search := $2, start := $3)
Hex(number := $1)
Len(str_or_array := $1)
Lower(str := $1)
Pack(expr := $1)
SizeOf(expr := $1)
SplitWords(str := $1, delimiter := \" \"$2, max_split := -${3:1})
StrReplace(str := $1, to_replace := $2, replace_with := $3)
SubStr(str := $1, start := $2, length := $3)
SubStrReplace(str := $1, replace_with := $2, start := $3, length := ${4:0})
Trim(str := $1, type := ${2:TRIM_BOTH}, to_trim := \" \"$3)
TypeOf(expr := $1)
TypeOfInt(expr := $1)
Unpack(str := $1)
Upper(str := $1)

basicio
Print(anything := $1)

boat
BoatFromItem(item := $1)
MoveBoat(boat := $1, facing := $2, speed := ${3:BOAT_SPEED_ONE_TILE})
MoveBoatRelative(boat := $1, direction := $2, speed := ${3:BOAT_SPEED_ONE_TILE})
MoveBoatXY(boat := $1, x := $2, y := $3)
RegisterItemWithBoat(boat := $1, item := $1)
SystemFindBoatBySerial(serial := $1)
TurnBoat(boat := $1, direction := $1)

cfgfile
AppendConfigFileElem(filename := $1, elemtype := $2, elemkey := $3, properties := $4)
FindConfigElem(config_file := $1, key := $2)
GetConfigInt(element := $1, property_name := $2)
GetConfigIntArray(element := $1, property_name := $2)
GetConfigIntKeys(config_file := $1)
GetConfigMaxIntKey(config_file := $1)
GetConfigReal(element := $1, property_name := $2)
GetConfigString(element := $1, property_name := $2)
GetConfigStringArray(element := $1, property_name := $2)
GetConfigStringDictionary(element := $1, property_name := $2)
GetConfigStringKeys(config_file := $1)
ListConfigElemProps(element := $1)
LoadTusScpFile(filename := $1)
ReadConfigFile(filename := $1)
UnloadConfigFile(filename := $1)

cliloc
PrintTextAboveCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})
PrintTextAbovePrivateCL(character := $1, object := $2, cliloc_num := $3, uc_text := ${4:array}, font := ${5:_DEFAULT_CLFONT}, color := ${6:_DEFAULT_CLCOLOR})
SendSysMessageCL(character := $1, cliloc_num := $2, uc_text := ${3:array}, font := ${4:_DEFAULT_CLFONT}, color := ${5:_DEFAULT_CLCOLOR})

datafile
CreateDataFile(filespec := $1, flags := ${2:DF_KEYTYPE_STRING})
ListDataFiles()
OpenDataFile(filespec := $1)
UnloadDataFile(filespec := $1)

file
AppendToFile(filename := $1, textlines := $2)
CreateDirectory(dirname := $1)
CreateXmlFile()
FileExists(filename := $1)
ListDirectory(dirname := $1, extension := ${2:LISTDIR_ALL_FILES}, listdirs := ${3:LISTDIR_DONT_LIST_DIRS})
LogToFile(filename := $1, line := $2, flags := ${3:0})
OpenBinaryFile(filename := $1, mode := ${2:OPENMODE_IN}, endian := ${3:LITTLE_ENDIAN})
OpenXmlFile(filename := $1)
ReadFile(filename := $1)
WriteFile(filename := $1, textcontents := $2)

guild
CreateGuild()
DestroyGuild(guild := $1)
FindGuild(guildid := $1)
ListGuilds()

http
QueryIP()
QueryParam(param := $1)
WriteHtml(html := $1)
WriteHtmlRaw(html := $1)

math
ACos(x := $1)
ASin(x := $1)
ATan(x := $1)
Abs(x := $1)
Ceil(x := $1)
ConstE()
ConstPi()
Cos(x := $1)
DegToRad(degrees := $1)
Floor(x := $1)
FormatRealToString(value := $1, precision := $2)
Log10(x := $1)
LogE(x := $1)
Max(x := $1, y := ${2:0})
Min(x := $1, y := ${2:0})
Pow(x := $1, y := $2)
RadToDeg(radians := $1)
Root(x := $1, y := $2)
Sin(x := $1)
Sqrt(x := $1)
Tan(x := $1)

npc
CanMove(direction := $1)
Face(direction := $1, flags := ${2:FACE_NORMAL})
GetProperty(propertyname := $1)
IsLegalMove(move := $1, boundingbox := $2)
MakeBoundingBox(areastring := $1)
Move(direction := $1)
RunAwayFrom(object := $1)
RunAwayFromLocation(x := $1, y := $2)
RunToward(object := $1)
RunTowardLocation(x := $1, y := $2)
Say(text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, do_event := ${3:SAY_DOEVENT_DISABLE})
SayUC(uc_text := $1, text_type := ${2:SAY_TEXTTYPE_DEFAULT}, langcode := ${3:SAY_LANG}, do_event := ${4:SAY_DOEVENT_DISABLE})
Self()
SetAnchor(centerx := $1, centery := $2, distance_start := $3, percent_subtract := $4)
SetOpponent(character := $1)
SetProperty(propertyname := $1, propertyvalue := $2)
SetWarMode(warmode := $1)
TurnAwayFrom(object := $1, flags := ${2:FACE_NORMAL})
TurnAwayFromLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})
TurnToward(object := $1, flags := ${2:FACE_NORMAL})
TurnTowardLocation(x := $1, y := $2, flags := ${3:FACE_NORMAL})
WalkAwayFrom(object := $1)
WalkAwayFromLocation(x := $1, y := $2)
WalkToward(object := $1)
WalkTowardLocation(x := $1, y := $2)
Wander()

os
Clear_Event_Queue()
Create_Debug_Context()
Debugger()
Events_Waiting()
GetPid()
GetProcess(pid := ${1:0})
Is_Critical()
OpenConnection(host := $1, port := $2, scriptdef := $3, params := $4)
OpenURL(character := $1, url := $2)
Run_Script(script_name := $1, param := ${2:0})
Run_Script_To_Completion(script_name := $1, param := ${2:0})
Set_Critical(critical := $1)
Set_Debug(debug := $1)
Set_Event_Queue_Size(size := $1)
Set_Priority(priority := $1)
Set_Script_Option(optnum := $1, optval := $2)
Sleep(num_seconds := $1)
Sleepms(num_milliseconds := $1)
Start_Script(script_name := $1, param := ${2:0})
Start_Skill_Script(chr := $1, attr_name := $2, script_name := ${3:0}, param := ${4:0})
SysLog(text := $1)
System_RPM()
Unload_Scripts(scriptname := \"\"$1)
Wait_For_Event(num_seconds_timeout := $1)

party
CreateParty(leader := $1, firstmember := $2)
DisbandParty(PartyRef := $1)
SendPartyMsg(party := $1, character := $2, uctext := $3)
SendPrivatePartyMsg(party := $1, character := $2, tocharacter := $3, uctext := $4)

polsys
AddRealm(realm_name := $1, base_realm := $2)
CreatePacket(type := $1, size := $2)
DeleteRealm(realm := $1)
FormatItemDescription(desc := $1, amount := ${2:1}, suffix := \"\"$3)
GetCmdLevelName(number := $1)
GetCmdLevelNumber(name := $1)
GetItemDescriptor(objtype := $1)
GetPackageByName(name := $1)
IncRevision(object := $1)
ListTextCommands()
ListenPoints()
LogCPropProfile()
MD5Encrypt(str := $1)
Packages()
ReadMillisecondClock()
Realms(realm := \"\"$1)
ReloadConfiguration()
SetSysTrayPopupText(text := $1)

storage
CreateRootItemInStorageArea(area := $1, itemname := $2, objtype := $3)
CreateStorageArea(areaname := $1)
DestroyRootItemInStorageArea(area := $1, itemname := $2)
FindRootItemInStorageArea(area := $1, itemname := $2)
FindStorageArea(areaname := $1)
StorageAreas()

mysql
mysql_affected_rows(result := $1)
mysql_close(connection := $1)
mysql_connect(host := $1, username := $2, password := \"\"$3)
mysql_fetch_row(result := $1)
mysql_field_name(result := $1, column_index := $2)
mysql_num_fields(result := $1)
mysql_num_rows(result := $1)
mysql_query(connection := $1, query := $2, parameters := \"\"$3)
mysql_select_db(connection := $1, database := $2)

unicode
BroadcastUC(uc_text := $1, langcode := $2, font := ${3:_DEFAULT_UCFONT}, color := ${4:_DEFAULT_UCCOLOR})
PrintTextAbovePrivateUC(above_object := $1, uc_text := $2, langcode := $3, character := $4, font := ${5:_DEFAULT_UCFONT}, color := ${6:_DEFAULT_UCCOLOR}, journal_print := ${7:JOURNAL_UC_PRINT_NAME})
PrintTextAboveUC(above_object := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR}, journal_print := ${6:JOURNAL_UC_PRINT_NAME})
RequestInputUC(character := $1, item := $2, uc_prompt := $3, langcode := $4)
SendSysMessageUC(character := $1, uc_text := $2, langcode := $3, font := ${4:_DEFAULT_UCFONT}, color := ${5:_DEFAULT_UCCOLOR})

uo
Accessible(by_character := $1, item := $2)
AddAmount(item := $1, amount := $2)
AddMenuItem(menu := $1, objtype := $2, text := $3, color := ${4:0})
ApplyConstraint(objlist := $1, configfile := $2, propertyname := $3, minvalue := $4)
AssignRectToWeatherRegion(region := $1, xwest := $2, ynorth := $3, xeast := $4, ysouth := $5)
Attach(character := $1)
Broadcast(text := $1, font := ${2:_DEFAULT_TEXT_FONT}, color := ${3:_DEFAULT_TEXT_COLOR}, requiredCmdLevel := ${4:_DEFAULT_TEXT_REQUIREDCMD})
CanWalk(movemode := $1, x1 := $2, y1 := $3, z1 := $4, x2_or_dir := $5, y2 := ${6:CANWALK_DIR}, realm := ${7:_DEFAULT_REALM})
CancelTarget(of_whom := $1)
CheckLineOfSight(object1 := $1, object2 := $2)
CheckLosAt(character := $1, x := $2, y := $3, z := $4)
CheckLosBetween(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})
CloseGump(character := $1, gumpid := $2, response := ${3:0})
CloseTradeWindow(character := $1)
CloseWindow(character := $1, type := $2, object := $3)
ConsumeReagents(who := $1, spellid := $2)
ConsumeSubstance(container := $1, objtype := $2, amount := $3)
CoordinateDistance(x1 := $1, y1 := $2, x2 := $3, y2 := $4)
CoordinateDistanceEuclidean(x1 := $1, y1 := $2, x2 := $3, y2 := $4)
CreateAccount(acctname := $1, password := $2, enabled := $3)
CreateItemAtLocation(x := $1, y := $2, z := $3, objtype := $4, amount := ${5:1}, realm := ${6:_DEFAULT_REALM})
CreateItemCopyAtLocation(x := $1, y := $2, z := $3, item := $4, realm := ${5:_DEFAULT_REALM})
CreateItemInBackpack(of_character := $1, objtype, amount := ${2:1})
CreateItemInContainer(container := $1, objtype := $2, amount := ${3:1})
CreateItemInInventory(container := $1, objtype := $2, amount := ${3:1})
CreateMenu(title := $1)
CreateMultiAtLocation(x := $1, y := $2, z := $3, objtype := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})
CreateNpcFromTemplate(template := $1, x := $2, y := $3, z := $4, override_properties := ${5:0}, realm := ${6:_DEFAULT_REALM})
DestroyItem(Item := $1)
DestroyMulti(multi := $1)
Detach()
DisableEvents(eventtype := $1)
DisconnectClient(character := $1)
Distance(obj1 := $1, obj2 := $2)
DistanceEuclidean(obj1 := $1, obj2 := $2)
EnableEvents(eventtype := $1, range := -${2:1})
EnumerateItemsInContainer(container := $1, flags := ${2:0})
EnumerateOnlineCharacters()
EquipFromTemplate(character := $1, template := $2)
EquipItem(mobile := $1, item := $2)
EraseGlobalProperty(propname := $1)
EraseObjProperty(object := $1, propname := $2)
FindAccount(acctname := $1)
FindObjtypeInContainer(container := $1, objtype := $2)
FindPath(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM}, flags := ${8:FP_IGNORE_MOBILES}, searchskirt := ${9:5})
FindSubstance(container := $1, objtype := $2, amount := $3, makeinuse := ${4:0}, flags := ${5:0})
GetAmount(item := $1)
GetCommandHelp(character := $1, command := $2)
GetCoordsInLine(x1 := $1, y1 := $2, x2 := $3, y2 := $4)
GetEquipmentByLayer(character := $1, layer := $2)
GetFacing(from_x := $1, from_y := $2, to_x := $3, to_y := $4)
GetGlobalProperty(propname := $1)
GetGlobalPropertyNames()
GetHarvestDifficulty(resource := $1, x := $2, y := $3, tiletype := $4, realm := ${5:_DEFAULT_REALM})
GetMapInfo(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})
GetMenuObjTypes(menuname := $1)
GetMidpointCircleCoords(xcenter := $1, ycenter := $2, radius := $3)
GetMultiDimensions(multiid := $1)
GetObjProperty(object := $1, property_name := $2)
GetObjPropertyNames(object := $1)
GetObjType(object := $1)
GetObjTypeByName(name := $1)
GetRegionLightLevelAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})
GetRegionName(object := $1)
GetRegionNameAtLocation(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})
GetRegionString(resource := $1, x := $2, y := $3, propertyname := $4, realm := ${5:_DEFAULT_REALM})
GetSpellDifficulty(spellid := $1)
GetStandingHeight(x := $1, y := $2, startz := $3, realm := ${4:_DEFAULT_REALM})
GetStandingLayers(x := $1, y := $2, flags := ${3:MAPDATA_FLAG_ALL}, realm := ${4:_DEFAULT_REALM})
GetWorldHeight(x := $1, y := $2, realm := ${3:_DEFAULT_REALM})
GrantPrivilege(character := $1, privilege := $2)
HarvestResource(resource := $1, x := $2, y := $3, b := $4, n := $5, realm := ${6:_DEFAULT_REALM})
IsStackable(item1 := $1, item2 := $2)
ListAccounts()
ListEquippedItems(who := $1)
ListGhostsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})
ListHostiles(characterx := $1, range := ${2:20}, flags := ${3:0})
ListItemsAtLocation(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM})
ListItemsNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})
ListItemsNearLocationOfType(x := $1, y := $2, z := $3, range := $4, objtype := $5, realm := ${6:_DEFAULT_REALM})
ListItemsNearLocationWithFlag(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})
ListMobilesInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})
ListMobilesInLineOfSight(object := $1, range := $2)
ListMobilesNearLocation(x := $1, y := $2, z := $3, range := $4, realm := ${5:_DEFAULT_REALM})
ListMobilesNearLocationEx(x := $1, y := $2, z := $3, range := $4, flags := $5, realm := ${6:_DEFAULT_REALM})
ListMultisInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})
ListObjectsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, realm := ${7:_DEFAULT_REALM})
ListOfflineMobilesInRealm(realm := ${1:_DEFAULT_REALM})
ListStaticsAtLocation(x := $1, y := $2, z := $3, flags := ${4:0}, realm := ${5:_DEFAULT_REALM})
ListStaticsInBox(x1 := $1, y1 := $2, z1 := $3, x2 := $4, y2 := $5, z2 := $6, flags := $7, realm := ${8:_DEFAULT_REALM})
ListStaticsNearLocation(x := $1, y := $2, z := $3, range := $4, flags := ${5:0}, realm := ${6:_DEFAULT_REALM})
MoveItemToContainer(item := $1, container := $2, x := -${3:1}, y := -${4:1}, add_to_existing_stack := ${5:0})
MoveItemToSecureTradeWin(item := $1, character := $2)
MoveObjectToLocation(object := $1, x := $2, y := $3, z := $4, realm := ${5:_DEFAULT_REALM}, flags := ${6:MOVEOBJECT_NORMAL})
OpenPaperdoll(towhom := $1, forwhom := $2)
POLCore()
PerformAction(character := $1, action := $2, framecount := ${3:5}, repeatcount := ${4:1}, backward := ${5:ACTION_DIR_FORWARD}, repeatflag := ${6:ACTION_NOREPEAT}, delay := ${7:1})
PlayLightningBoltEffect(center_object := $1)
PlayMovingEffect(source := $1, target := $2, effect := $3, speed := $4, loop := ${5:0}, explode := ${6:0})
PlayMovingEffectEx(source := $1, target := $2, effect := $3, speed := $4, duration := ${5:0}, hue := ${6:0}, render := ${7:0}, fixeddirection := ${8:0}, explode := ${9:0}, effect3d := ${10:0}, effect3dexplode := ${11:0}, effect3dsound := ${12:0})
PlayMovingEffectXYZ(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, effect := $7, speed := $8, loop := ${9:0}, explode := ${10:0}, realm := ${11:_DEFAULT_REALM})
PlayMovingEffectXYZEx(srcx := $1, srcy := $2, srcz := $3, dstx := $4, dsty := $5, dstz := $6, realm := ${7:_DEFAULT_REALM}, effect := $8, speed := $9, duration := ${10:0}, hue := ${11:0}, render := ${12:0}, fixeddirection := ${13:0}, explode := ${14:0}, effect3d := ${15:0}, effect3dexplode := ${16:0}, effect3dsound := ${17:0})
PlayMusic(chr := $1, music_id := ${2:0})
PlayObjectCenteredEffect(center := $1, effect := $2, speed := $3, loop := ${4:0})
PlayObjectCenteredEffectEx(center := $1, effect := $2, speed := $3, duration := ${4:0}, hue := ${5:0}, render := ${6:0}, layer := ${7:0}, effect3d := ${8:0})
PlaySoundEffect(object := $1, effect := $2)
PlaySoundEffectPrivate(object := $1, effect := $2, playfor := $3)
PlaySoundEffectXYZ(x := $1, y := $2, z := $3, effect := $4, realm := ${5:_DEFAULT_REALM})
PlayStationaryEffect(x := $1, y := $2, z := $3, effect := $4, speed := $5, loop := ${6:0}, explode := ${7:0}, realm := ${8:_DEFAULT_REALM})
PlayStationaryEffectEx(x := $1, y := $2, z := $3, realm := ${4:_DEFAULT_REALM}, effect := $5, speed := $6, duration := ${7:0}, hue := ${8:0}, render := ${9:0}, effect3d := ${10:0})
PrintTextAbove(above_object := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR}, journal_print := ${5:JOURNAL_PRINT_NAME})
PrintTextAbovePrivate(above_object := $1, text := $2, character := $3, font := ${4:_DEFAULT_TEXT_FONT}, color := ${5:_DEFAULT_TEXT_COLOR}, journal_print := ${6:JOURNAL_PRINT_NAME})
ReadGameClock()
RegisterForSpeechEvents(at_object := $1, range := $2, flags := ${3:0})
ReleaseItem(item := $1)
RequestInput(character := $1, item := $2, prompt := $3)
ReserveItem(item := $1)
RestartScript(npc := $1)
Resurrect(mobile := $1, flags := ${2:0})
RevokePrivilege(character := $1, privilege := $2)
SaveWorldState()
SecureTradeWin(character := $1, character2 := $2)
SelectColor(character := $1, item := $2)
SelectMenuItem2(character := $1, menuname := $2)
SendBuyWindow(character := $1, container := $2, vendor := $3, items := $4, flags := ${5:0})
SendCharProfile(character := $1, of_who := $2, title := $3, uneditable_text := ${4:CHARPROFILE_NO_UNEDITABLE_TEXT}, editable_text := ${5:CHARPROFILE_NO_EDITABLE_TEXT})
SendCharacterRaceChanger(character := $1)
SendDialogGump(who := $1, layout := $2, textlines := $3, x := ${4:0}, y := ${5:0}, flags := ${6:0}, gumpid := ${7:0})
SendEvent(npc := $1, event := $2)
SendHousingTool(who := $1, house := $2)
SendInstaResDialog(character := $1)
SendOpenBook(character := $1, book := $2)
SendOpenSpecialContainer(character := $1, container := $2)
SendOverallSeason(season_id := $1, playsound := ${2:1})
SendPacket(to_whom := $1, packet_hex_string := $2)
SendPopUpMenu(to_whom := $1, above := $2, menu := $3)
SendQuestArrow(to_whom := $1, x := -${2:1}, y := -${3:1}, target := \"\"$4)
SendSellWindow(character := $1, vendor := $2, i1 := $3, i2 := $4, i3 := $5, flags := ${6:0})
SendSkillWindow(towhom := $1, forwhom := $2)
SendStatus(character := $1)
SendStringAsTipWindow(character := $1, text := $2)
SendSysMessage(character := $1, text := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})
SendTextEntryGump(who := $1, line1 := $2, cancel := ${3:TE_CANCEL_ENABLE}, style := ${4:TE_STYLE_NORMAL}, maximum := ${5:40}, line2 := \"\"$6)
SendViewContainer(character := $1, container := $2)
SetGlobalProperty(propname := $1, propval := $2)
SetName(object := $1, name := $2)
SetObjProperty(object := $1, property_name := $2, property_value := $3)
SetRegionLightLevel(regionname := $1, lightlevel := $2)
SetRegionWeatherLevel(region := $1, type := $2, severity := $3, aux := ${4:0}, lightoverride := -${5:1})
SetScriptController(who := $1)
Shutdown()
SingleClick(who := $1, what := $2)
SpeakPowerWords(who := $1, spellid := $2, font := ${3:_DEFAULT_TEXT_FONT}, color := ${4:_DEFAULT_TEXT_COLOR})
StartSpellEffect(who := $1, spellid := $2)
SubtractAmount(item := $1, amount := $2)
SystemFindObjectBySerial(serial := $1, sysfind_flags := ${2:0})
Target(by_character := $1, options := TGTOPT_CHECK_LOS+${2:TGTOPT_NEUTRAL})
TargetCoordinates(by_character := $1)
TargetMultiPlacement(character := $1, objtype := $2, flags := ${3:0}, xoffset := ${4:0}, yoffset := ${5:0}, hue := ${6:0})
UpdateItem(item := $1)
UpdateMobile(mobile := $1, recreate := ${2:UPDATEMOBILE_UPDATE})
UseItem(item := $1, character := $2)

util
RandomDiceRoll(dice_string := $1)
RandomFloat(below_this_float := $1)
RandomInt(below_this_number := $1)
RandomIntMinMax(minValue := $1, maxValue := $2)
StrFormatTime(format_string := $1, time_stamp := ${2:0})

vitals
ApplyDamage(mobile := $1, damage := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})
ApplyRawDamage(Character := $1, Hits := $2, userepsys := ${3:DAMAGE_USE_REPSYS}, send_damage := ${4:DAMAGE_USE_DEFAULT})
ConsumeMana(who := $1, spellid := $2)
ConsumeVital(who := $1, vital := $2, hundredths := $3)
GetVital(character := $1, vitalname := $2)
GetVitalMaximumValue(character := $1, vitalname := $2)
GetVitalName(alias_name := $1)
GetVitalRegenRate(character := $1, vitalname := $2)
HealDamage(Character := $1, Hits := $2)
RecalcVitals(character := $1, calc_attribute := ${2:RECALC_INTRINSIC_MOD}, calc_vital := ${3:RECALC_VITALS})
SetVital(character := $1, vitalname := $2, value := $3)